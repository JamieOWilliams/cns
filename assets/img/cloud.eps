%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: DigitalTechnologies17.eps
%%Creator: Adobe Illustrator(R) 19.0
%%For: MONKO
%%CreationDate: 3/4/2018
%%BoundingBox: 0 0 675 450
%%HiResBoundingBox: 0 0 675 450
%%CropBox: 0 0 675 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.0.1 x52 R agm 4.7731 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 25246 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45280028002800280028002800280028002800280028002800280028
%002800280028002800280028002822280028222800282828002828280028
%282800282828002828280028282800282828002828280028222800282228
%002800280028002800280028002800280028002800280028002800280028
%002800280028002800280000280028002800280028002800280028002800
%280028002800280028002800280028002800280028002800280028002800
%280028002800280028002800280028002800280028002800280028002800
%280028002800280028002800280028002800280028002800280028002800
%280028002800280028002800280028002800282800280028002800280028
%002800280028002800280028002800280028002800280028002800280028
%002801280028012800280128002822280028222800282228002822280028
%222800280128002801280028012800280028002800280028002800280028
%002800280028002800280028002800280028002800280028002800002700
%280027002800270028002700280027002800270028002700280028002800
%280028002800280028002800280028002800280028002800280028002800
%280028002800280028002800280028002800280028002800280028002800
%280028002800280027002800270028002700280027002800270028002700
%280027002828002800280028002800280028002800280028002800280028
%002800280028002800282228002822280028282800282828012828280128
%282801282828012828280128282801282828012828280128282800282828
%002822280028222800280028002800280028002800280028002800280028
%002800280028002800280028000028002800280028002800280028002800
%280028002800280028002800280028002800280028002800280028002800
%280028002800280028002800280028002800280028002800280028002800
%280028002800280028002800280028002800280028002800280028002800
%280028002800280028002800280028002800280028280028002800280028
%002800280028002800280028002800280028002800280028002800280128
%002801280028222800280128002828280028282800282828012828280128
%282800282828002822280028222800280128002801280028002800280028
%002800280028002800280028002800280028002800280028002800280000
%280027002800270028002700280027002800270028002700280028002800
%280028002800280028002800280028002800280028002800280028002800
%280028002800280028002800280028002800280028002800280028002800
%280028002800280028002800280028002700280027002800270028002700
%280027002800272800280028002800280028002800280028002800280028
%00280028002800280028222800282828002828280028222F3566592F0028
%282801282828012828280128282801282828012828280128282801282828
%012828280028282800282228002821280028002800280028002800280028
%002800280028002800280028002800002800280028002800280028002800
%280028002800280028002800280028002800280028002800282E603C3606
%363C3D3C67665A0028012800280128002801280028012800280128002800
%280028002800280028002800280028002800280028002800280028002800
%280028002800280028002800280028002800280028002828002800280028
%002800280028002800280028002800280028002800280028002800280128
%002835433D673D3D3C673C613C6766600128282801280128012828280128
%282801282828012828280128282800282828002822280028012800280128
%002800280028002800280028002800280028002800280028002800280028
%000027002800270028002700280027002800270028002800280028002800
%280028002800280021003D3C3D3C3D3C3D3C3D3C3D3C613C360028002806
%362E22002800280028002800280028002800280028002800280028002800
%280028002800280028002800280028002800280027002800270028002700
%280027002800270028280028002800280028002800280028002800280028
%00280028002822280028222800FD04285A3D3D3C673D613C673C673C673C
%673C2F222800282E67362922280128282801282828012828280128282801
%282828012828280128282800282828002822280028002800280028002800
%280028002800280028002800280028000028002800280028002800280028
%00280028002800280028002800280028002800280028063D3C3D3C3D3C3D
%3C3D3C613C3D3C673C6736280128F82100353C3601220028012800280128
%002801280028012800280028002800280028002800280028002800280028
%002800280028002800280028002800280028002800280028280028002800
%280028002800280028002800280028002800280028002801280028012800
%363D3D3C3D3D3D3C673C613C673C673C673C672F2821270021F8283B672F
%280028282801282828012828280128282801282828002828280028222800
%280128002800280028002800280028002800280028002800280028002800
%280000280027002800270028002700280027002800280028002800280028
%00280028002800220D3D3C3D3C3D3C3D3C3D3C3D3C613C603C673C360028
%F800F821F8000C6036280028012800280128002800280028002800280028
%002800280028002800280028002800280028002800280027002800270028
%002700280027002800272800280028002800280028002800280028002800
%280028002822280028282800282828002F3D3D3C673D613C673C673C673C
%673C6760673C29212700270027002100593C5A2828012828282228282801
%282828012828280128282801282828012828280028222800280028002800
%280028002800280028002800280028002800002800280028002800280028
%002800280028002800280028002800280028002800280028003C3D3D3C3D
%3C3D3C613C613C673C603C673C3D06220021F8210021F821F82735672F22
%002801280028012800280128002801280028002800280028002800280028
%002800280028002800280028002800280028002800280028002828002800
%280028002800280028002800280028002800280028002801280028222800
%282828063D3D3D3C673C613C673C673C6760673C673D3600210027002700
%00002700212E663C2F002828280128282801282828012828280128282800
%282228002801280028002800280028002800280028002800280028002800
%280028000027002800270028002700280027002800280028002800280028
%002800280028002800280022002F3C3D3C3D3C3D3C613C603C673C663C66
%3D36F821F800F8524C00F821F800F8353C36012201280028012800280028
%002800280028002800280028002800280028002800280028002800270028
%002700280027002800270028280028002800280028002800280028002800
%280028002822280028282800282828012828280128002F36673D673C673C
%673C676067606766673D35F82700212FFF7D4CF8210027F82835672F2801
%282828222828280128282801282828012828280128282800282228002800
%280028002800280028002800280028002800280000280028002800280028
%002800280028002800280028002800280028002800280028002800280028
%2828063C3C673C673C603C673C663C6760611428F821F82F3785A87D0000
%F821F80005603C2F00280128002801280028012800280028002800280028
%002800280028002800280028002800280028002800280028002800282800
%280028002800280028002800280028002800280028002801280028222800
%28282801282828002F282801353C673C6760673C676067606760430D2100
%210C3D146185A95221F82700210035606028282228012828280128282801
%282828002822280028012800280028002800280028002800280028002800
%280028002800002800270028002700280027002800280028002800280028
%0028002800280028002800280028002228280128002835603C673C663C66
%606660663C36F821F82F366114365AAF7D28F800F800F82735602F280028
%002801280028002800280028002800280028002800280028002800280028
%002700280027002800270028002728002800280028002800280028002800
%280028002822280028282801282828012828280128282801532828222828
%2F2860666760676667606766673D2800210C3D858B3C3D368BA8A2270000
%27002127603C2F0128282801282828012828280128282801282828002822
%280028002800280028002800280028002800280028000028002800280028
%002800280028002800280028002800280028002800280028002801280028
%01282828012801282822012F3C673C6760666066603D0021F82F36AFA9AF
%603D146184A95200F8210000F82F3C360628012800280128002800280028
%002800280028002800280028002800280028002800280028002800280028
%280028002800280028002800280028002800280028002801280028222800
%282828012828280128012FFD05282F2228012935676667666666673627F8
%210D3D858B85AF85853C3D60AFA252F8210021F82735612F282228012828
%280128282800282228002801280028002800280028002800280028002800
%280028002800002700280027002800270028002800280028002800280028
%00280028002800280028002800280028282800280128282801280029285A
%606760663C2FF800F82F368584AF84AF848B603D3C8BA87D0000F800F821
%0536362F0022002800280028002800280028002800280028002800280028
%002800270028002700280027002828002800280028002800280028002800
%2800282228002828280028282801282828012828280128222FFD05285328
%363628292801596066602E002700212F3D368585AF85AFAF8B85673C678B
%FF272100270021F82F3C3C28282228012828280128282801282828002822
%280028002800280028002800280028002800280000280028002800280028
%002800280028002800280028002800280028002800280028002801280028
%2828012801282F3D3636062F282801282828F8210021F82F373614618485
%84AF606160613C676052F821F8210021F8272F3C0D280028002800280028
%002800280028002800280028002800280028002800280028002800282800
%280028002800280028002800280028002800280128002822280028282801
%28282801282828012F2828012F363D2E272F292829282801292827002700
%210C3D363D363D61AF85AF85673C6761672821002700270027F821053636
%2F2228012828280028222800280128002800280028002800280028002800
%280028002800002800270028002700280027002800280028002800280028
%00280028002800280028002800280128282806363C350000F83506290628
%01280128F800F821F82F14373636143D368584AF84613C67602EF821F800
%F827F800F821F82813360622002800280028002800280028002800280028
%002800280027002800270028002728002800280028002800280028002800
%2821280028282800282828012828280128282801282828012F2F3D362E00
%2100272F29282928292829282700270021063D3D3D363D3C3D3C613D673C
%67676728210021062F2F2F05270027F8272F3D2F28222801282828012828
%280028222800280028002800280028002800280028000028002800280028
%002800280028002800280028002800280028002800280028002801280028
%002F363D2E21F821F800F835282F0628012801280021F8210021002F363D
%363D363D36613C613C67602EF821002F0D362F353527F821F82100351428
%002800280028002800280028002800280028002800280028002800280028
%280028002800280028002800280028002800280028002822280028282801
%2828280128222806363D5A00210021F82728212F29292922292829282700
%2700270021F828353D3C613C613C678BAF60672821F82F2F352F36358B5F
%270027002100360D28282800282228002801280028002800280028002800
%280028002800280000270028002700280027002800280028002800280028
%00280028002800280028002800280D3D3528F8F8F821F82E3536F82F062F
%0628012801280021F800F821F800F82106363C3D3C3D3C6767AF8A2EF800
%06350D2F0D3560673521F800F82106360028002800280028002800280028
%002800280027002800270028002700282800280028002800280028002800
%28002800282228002828280128282801282828012F3C3D2E27F800277D27
%5960612F212F2F292928292828293D0627F82700270027002100353C673C
%FD0467AFA852F82F2F362F36358A66672E210027F82F2F28282801282828
%002828280028222800280028002800280028002800280000280028002800
%2800280028002800280028002800280028002800280028002806363C3500
%00F827528B5A5260600627F835062F282801282229143D0D28F8210021F8
%210021F82835613C6767676161847D2E2F0D2F0D3560663C3C0021F82106
%360028002800280028002800280028002800280028002800280028002800
%282800280028002800280028002800280028002800280128002822280028
%22280D3D3628F82100527E8B433C2E59272806272F292829282928292836
%143D142F0021002700270027F82128606767678B3C3D61AF7E360D352F8A
%66673D2FF827F82F35280128282800280128002800280028002800280028
%002800280028002800002800270028002700280028002800280028002800
%2800280028002800280D3C0621F800277E603D3C673627002E2E2FF83506
%29062801280128012F143D14140621F800F821F800F821003C3D67673D36
%3D3C8B845A0D2F35663C3D1321F800063600280028002800280028002800
%280028002800280027002800270028002728002800280028002800280028
%00280028222800282828012828280128063D2721F82753853D3D3C8B4360
%27592F2F05212F2F2929282928292829222F0E3D143D1428F82700270027
%00270E3D618B3C613C613D8BAF842F3635603D3D0021F82F362801282828
%012828280028222800280028002800280028002800280028000028002800
%280028002800280028002800280028002800280028002800283627F85284
%AF3C3D368B8467352E2E2800F8F835282906282228012928280129073614
%3D142F0021F821F8210036143D3C3D363D3C613C67602F2F352F363628F8
%210636002800280028002800280028002800280028002800280028002800
%280028280028002800280028002800280028002800280128002822280028
%2828013D270059AF853D1467AFAF3D602727F82127603C30292922292829
%2829282928292830143D15360627F8210027363D363D363D3C613C676761
%2F352F5A355A0521F82F0D28282800282228002801280028002800280028
%002800280028002800280000270028002700280027002800280028002800
%28002800280028002800281428F836363C3C6184AF8B672F21F8212E613C
%3C143606280128012801290128012922290D37141B0D28F800F82F363D36
%3D363D3C613C6736352F352F353527F82106360028002800280028002800
%280028002800280028002800270028002700282800280028002800280028
%002800280028002828280028282801282828063D27210D3D60AFA9AF8B60
%0621002E3C673C3D363D3C3D0D292229282928292829282928292936143D
%15360521F828353D3D613C613D6767612F36355A35590027F82F0D282828
%012828280128282800282228002800280028002800280028002800002800
%2800280028002800280028002800280028002800280028002800283628F8
%0D3CAFA98B362FF8F805603C3D143D143C363D3C3D142F22280129282901
%2928290128282F143D14360627F821063C3D3D3C613C67352E2F36355A05
%00F821063600280028002800280028002800280028002800280028002800
%280028002828002800280028002800280028002800280028002801280028
%22280128063C27210D6185610D27F82735673C3D3C3D363D3C3D3C3D3C3D
%1A3629282229282928292829282922290D3D143D142F002000353C673C67
%6759F828282E05210027F82F2F2801282828002822280028012800280028
%002800280028002800280028000028002700280027002800280028002800
%280028002800280028002800283628F8363D3600F8F82E3C3D143C143D36
%3C3C3D3C3C3C3D3C3D3C3D0D290129012801290128012901280D36143D14
%3605F8F82835613C672F275227F800F821F8000636002800280028002800
%280028002800280028002800270028002700280027280028002800280028
%0028002800280028222800282828012828280128063D27270D2FF8212860
%3D3D3C3D363D3C3D3C673C613C673C673C673C3D36362829282928292829
%282928361436143D3D3D0D28F8212861675900A87E5300210027F82F3028
%012828280128282800282228002800280028002800280028002800280000
%28002800280028002800280028002800280028002800280028002800283C
%28F821F82735673C3C363D363D3C3D3C3D3C3D3C3D3C673C3D143D143D1A
%3622280129282801292228133D1414143D143D142FF8F8F8352F00F82853
%7D2721002106360028002800280028002800280028002800280028002800
%280028002800282800280028002800280028002800280028002801280028
%222800282828013D272100593C43363D3C3D3C673C3D3C673C673C673C67
%3C3D363D363D3C612F292829282928292228293D143D3C36143D3C3D3C36
%0621F8270021F8214C52F827F82F0D282228002822280028012800280028
%002800280028002800280028002800002700280027002800270028002800
%280028002800280028002800280028362705603C3D363C143D3C3D3C3D3C
%3D3C3D3C3D3C3D3C3C143D143D3C36282801280128012801280D3D141414
%3D3C3C1336143D1A3D0D27F821F821F800F821F821063600280028002800
%280028002800280028002800270028002700280027002828002800280028
%00280028002800280028002822280028282801282828016160673C3D3C3D
%3C673C673C673C673C673C673C673C3D363D3C3D362F2828222928292829
%28353C673C3D143D143D3C3D36292F3D3D433C2F0021002700270027F82F
%0D2828280128282800282828002821280028002800280028002800280028
%000028002800280028002800280028002800280028002800280028002800
%283643143D3C3D3C3D3C673C3D3C673C673C673C673C673C3D3C3C2F2801
%28062F06282228286066673C673C3C143D14361436012206363C3D3C3C06
%00F8210021F8210636002800280028002800280028002800280028002800
%280028002800280028280028002800280028002800280028002800280028
%0128002822280028222F143D3C3D3C673C673C673C673C6766673C676667
%66673C36282822292F3D433D0D29222F3C6767673C673C3D363D143D1429
%2828012F36433D673528F8270027F82F0D28002822280028012800280028
%002800280028002800280028002800280000280027002800270028002700
%280028002800280028002800280028002800280D14143C3C673C673C673C
%673C3D363C143D3C3D132F0128012F36433C673C3D132901282F6742673C
%673C3C363D142F0028012800282F3C3C433C2FF821F80006360028002800
%280028002800280028002800280028002700280027002800272800280028
%002800280028002800280028212800282828002828280128282821280636
%143D3C67426767673C613C3D3C673D3C2F29222828363D67666767673C67
%3C360628285A426767674267362F2229FD062829603D6743602821F82F0D
%280128282801282828002822280028002800280028002800280028002800
%002800280028002800280028002800280028002800280028002800280028
%0028062F280D143D3C673C673C3C363D3C3D14360628012801280D3D3C67
%3C673C673C673C3C0728012F3667423C0D2801280128012801280129002F
%36673C673527063600280028002800280028002800280028002800280028
%002800280028002828002800280028002800280028002800280028002800
%280128002822280028282F062822280D3D3C673C3D3C3D3C3D362F012828
%282229282828363C433C673C673C673C3D142F22282F3628282228282801
%282828062F282800282F674367603C0D2822280028012800280128002800
%280028002800280028002800280028000027002800270028002700280028
%00280028002800280028002800280028002F0122002800280D36143D3C3D
%3C36062801280128012801280128012F363D3C673C3D3C3D3C3D14360622
%00280128012801280028062F01280128002206363C673D0D002800280028
%002800280028002800280028002700280027002800270028280028002800
%280028002800280028002800282228002828280028282801282853282828
%2F2E28222F143D362F06282828222828362E2F2828282922282F3D3D3D3C
%673C3D3C3D3D3D0D29222828292828222F2F292228282801282828062F3C
%3C0628282801282828002822280028002800280028002800280028002800
%280000280028002800280028002800280028002800280028002800280028
%00280028062E2E2F28280028002806290128012801280636062100282828
%012801280636363D3C3D3C3C363D363D142F01280128062F062801280128
%012800280629002800280028002800280028002800280028002800280028
%002800280028002800282800280028002800280028002800280028002800
%2800280028012800282228002828532E2F22280128222801282828012F36
%2E002100210028282901282828012F363D1A3D3C3D363D3C3D1A36222828
%2F28280128282801282228282F2828002828280028222800280128002800
%280028002800280028002800280028002800002800270028002700280027
%0028002800280028002800280028002800280028002F0022282F28280028
%01280028002F0D27F800F8270000F82705280128012800282F36143D143C
%143D142F012906280028012800280122002F062800280028002800280028
%002800280028002800280028002700280027002800270028002728002800
%280028002800280028002800280028002822280028282800282828012828
%532828282F2E282228222828282F2F00210028052700270021002E282922
%29282828363C3D143D3529282F2928012F292801FD04282F282801282828
%012828280128282800282228002800280028002800280028002800280028
%002800002800280028002800280028002800280028002800280028002800
%28002800280028062E28280028282F012800280128063506210527F821F8
%210021F828282801280128002F35360628062F0122063C3C3D1329002828
%2F0028012800280028002800280028002800280028002800280028002800
%280028002800280028002828002800280028002800280028002800280028
%0028002800280028012800282228002801282E2F0128282F282801282828
%062F2F2E0628002700280021F82727290128282801282828292F22293567
%67673C3D3C362E2801280128282801282828002822280028012800280028
%002800280028002800280028002800280028000027002800270028002700
%280027002800280028002800280028002800280028002800280028282F06
%22002F28280028012800290D2F06280005F821F800F82E06280128012801
%2F0628002F3C673C673C3C143D3C3C062800280028002800280028002800
%280028002800280028002800270028002700280027002800270028280028
%002800280028002800280028002800280028002822280028282800282828
%012828280128282F282801282E2F28282228222828352827F82700210636
%29FD06282F2828063D43673D6767673C3D3C3D3C67362F01282828012828
%280128282800282228002800280028002800280028002800280028002800
%280000280028002800280028002800280028002800280028002800280028
%0028002800280028002800280028282F0022062F282800280128012F0D28
%F8280C361329012800292829012801361B433D673C67613C143D3C3D3C43
%352200280028002800280028002800280028002800280028002800280028
%002800280028002800282800280028002800280028002800280028002800
%2800280028002800280128002822280028282801280128282F2828012F2E
%280128282801292F2F0D2F2228062F282F28282228012836673C673D6761
%673C3D3C3D3C3D142F222800282228002801280028012800280028002800
%280028002800280028002800280028002800002800270028002700280027
%002800270028002800280028002800280028002800280028002800280028
%0022012F28280028282E002801280028012800280028062F062200280128
%00282F3C3C3D3C673C3D363C3C3D14290028002800280028002800280028
%002800280028002800270028002700280027002800270028002728002800
%280028002800280028002800280028002800280028222800282828002828
%280128282801282828012822292E2F2228282F282801282828222822292F
%2F282FFD042822FD0428363C4361673C3D3C3D0D28002828280128282800
%282828002822280028002800280028002800280028002800280028002800
%280000280028002800280028002800280028002800280028002800280028
%0028002800280028002800280028002800280028062F0622002F28280028
%0128012F2828002F06280028012800280128002F363D3C3D143006280028
%002800280028002800280028002800280028002800280028002800280028
%002800280028002800282800280028002800280028002800280028002800
%280028002800280028002801280028222800282228002828280128222806
%2F282800282E2F0628282F2828282F06282828012828280128282800282F
%36132F212801282828002822280028012800280028002800280028002800
%280028002800280028002800280028002800002700280027002800270028
%002700280027002800280028002800280028002800280028002800280028
%0028002800280028002828280028062806280028062F0128002800280028
%002800280028002800220028002800280028002800280028002800280028
%002800280028002700280027002800270028002700280027002828002800
%280028002800280028002800280028002800280028002800280028222800
%28282800282828012828280128282801282228282F28280128222F292922
%280128282801282828012828280128282801282828012828280128282800
%282828002822280028002800280028002800280028002800280028002800
%280028000028002800280028002800280028002800280028002800280028
%00280028002800280028002800280028002800280028002800280028012F
%0628062F0628002801280028012800280128002800280028002800280028
%002800280028002800280028002800280028002800280028002800280028
%002800280028002800280028280028002800280028002800280028002800
%280028002800280028002800280028002800280128002822280028222800
%282828012828280028282806282828012828280128282801282828012828
%280028282800282228002801280028012800280028002800280028002800
%280028002800280028002800280028002800280000280027002800270028
%002700280027002800270028002700280028002800280028002800280028
%002800280028002800280028002800280028002800280028002800280028
%002800280028002800280028002800280028002800280028002800280028
%002800280028002700280027002800270028002700280027002800272800
%280028002800280028002800280028002800280028002800280028002800
%282228002828280028282800282828012828280128282801282828012828
%280128282801282828012828280128282801282828012828280028282800
%282228002800280028002800280028002800280028002800280028002800
%280028002800002800280028002800280028002800280028002800280028
%002800280028002800280028002800280028002800280028002800280028
%002800280028002800280028002800280028002800280028002800280028
%002800280028002800280028002800280028002800280028002800280028
%002800280028002800280028002828002800280028002800280028002800
%280028002800280028002800280028002800280028002801280028012800
%282228002822280028222800282828002828280028282800282828002822
%280028222800280128002801280028002800280028002800280028002800
%280028002800280028002800280028002800280028000027002800270028
%002700280027002800270028002700280027002800280028002800280028
%002800280028002800280028002800280028002800280028002800280028
%002800280028002800280028002800280028002800280028002800280028
%002800270028002700280027002800270028002700280027002800270028
%280028002800280028002800280028002800280028002800280028002800
%280028002800280028222800282828002828280028282801282828012828
%280128282801282828012828280128282800282828002828280028222800
%282128002800280028002800280028002800280028002800280028002800
%280028002800280000270028002700280027002800270028002700280027
%002800270028002800280028002800280028002800280028002800280028
%002800280028002800280028002800280028002800280028002800280028
%002800280028002800280028002800280028002700280027002800270028
%002700280027002800270028002700282800280028002800280028002800
%280028002800280028002800280028002800280028002800280028002800
%280028002800280028002800280028002800280028002800280028002800
%280028002800280028002800280028002800280028002800280028002800
%2800280028002800280028002800280028002800280028007DA87D7E7DA8
%7D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E
%7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA8
%7D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E
%7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA8
%7D7E
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c067 79.157747, 2015/03/30-23:40:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-03-04T13:53:18+03:00</xmp:CreateDate>
         <xmp:MetadataDate>2018-03-04T13:53:18+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-03-04T13:53:18+03:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>172</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A8/ZvGt2KuxV2KuxV2Kux&#xA;V2FW8VbphVumFW6YodTCrdMVdTFW6Yq6mKtUxV1MVdTFWqYFapilqmBWsCtUxV2BXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYVbxVsDCq6mFW6YUN0xV1MKt0xV1MKt0xV1MVapirqYFdTFWqYFapirVM&#xA;CtEYErcCtEYq7ArsVdirsVdirsVdirsVdirsVdirsKt4quAwq2BhQm3ljQZdd1u201H9MTEmSWle&#xA;KKCzGnjQbe+ThHiNOLrtUMGI5DvT220/LLyTHp4s5dNEzU+K7aSQTlv5uQYL9AUDLTp6NgvHS7c1&#xA;Bld15dEZ5T8haD5dPq2kZlvORZbyWhlUV2VSAONB4dcEscaoteq7VzZ+Zodw5J7rmg6L5itWt9at&#xA;EuaiiXIULPH7pIBUf59cxjiEd4sNNrsmI3E/qfPnnnyVeeVtW+rOxmsp6vZXVKc07g025L3+/LIm&#xA;3tNBro6iFjaQ5hKNK0fUtWu1s9Ot2ublgSsS0BIUVNKkdhhJA5uTmzQxx4pGgo3ljeWNzJa3kL29&#xA;zEeMkMqlWU+4OFlDJGYuJsKNMWbqYq1TFWqYFdTFVtMCtEYFaIwK0cCVuBWjirsCuxV2KuxV2Kux&#xA;V2KuxV2KuxVsYVbGFVwGFDYGFX0T5K0PSdM0K0NjDHzuIY5JrripkkLqGqXI5U32FaZmxxxFEc3z&#xA;vtHWZcuSQmdhI7dzJUXGRcAK6LlMizCIRcpkWYY7+YnlxNc8sXVtx5XMSmezbuJYwTxH+uPh+nBj&#xA;O7n9n6o4cwl0Ox9z5dv5JIp4pI2KSJ8SOpIIYGoII6HMfU8w+hQAIILMdM/M2DULaPTPPFkdZs0H&#xA;CDU4yE1CAeKyH+9H+S/XucrhlIdXl7LMDx6c8Ev5v8J+HT4IrUPITXFi+r+VLtdf0dd5PRFLqDvx&#xA;ng+0KeIHvsMzIZRJjj7QqXBmHhz8/pPuLEiMsdk1TFWqYq0RgVojArRGBVpGBWiMCrTgS1gVrFXY&#xA;FdirsVdirsVdirsVdirhhVcMKtjCq4DChcBhV6d+XX5lWen2cWj6ySkEXw2t4AWCqTXhIBvQdiMv&#xA;hkoUXme1uxpZJHJi5nmP0h6/aywzwpNC6ywyANHIhDKyncEEbEYSXlTAxNEUUWi5TIsgrouUyLIL&#xA;poWeIhftDcDxyMJ1KyyIsPlr8zvJl95d1UMw9SwuGc204FADWvpsN6Mo+/HVx5Ho932T2hHUQrlO&#xA;PMfpYnp9hd6hf21hZxma8vJUgtogQC8krBEUEkDdjTfMN26ayw+cPJGvcJFudF1i37GqMVr/AMDI&#xA;jU91OIPc1ZsMMseGYEostt/OXlDzWBF5rtxo+stsPMFkn7qRvG6tx492X8BmRjzkc3Uy0efT74Tx&#xA;w/mS5j+qf0FBeYvJOs6JGl24S90qbe31S0b1bZwTQfGv2SfBszIzEuTdptdjynh+mY5xOxY/TJOa&#xA;0RgVojAq0jArRGBVpGBWjgVacCVpwK7ArsVdirsVdirsVdirsVbwquGFWxkkLhhVcBhVcBhVlVp5&#xA;v17y9qUb6dcEQm2tDJayfFC/+jRdV7H3FDghy+J+91+bQ4s8fWN7O/XmXrvk78zdF12DjdU068Vk&#xA;iZJWHpu8gYqI3NOvA7H8cjJ5jWdkZMJuPqj9vxZ0i5RIusCui5TIsgxP8zPK0GteXbm2KAvKh9Jv&#xA;5Z1BMbffsfbMvSnxInGfg36bUHT5o5B0O/u6vlzyv/yk+kf8xtv/AMnVzFwf3kfeHv8AXf3E/wCp&#xA;L7n1DeRx6vokNp5p01dZ0SSq28s397CwJB9GdfjRh4E9PbNln0eOcjwnhn+Ojyuj7Vz4YgzHFj/H&#xA;X9BeUeb/AMgb6OKTUvJVw2tWKjlJpkgC6hCP9QUWYDxTfwBzVZMcsZqQeo0uuxZxcT+tgflvzn5n&#xA;8qXMsVnKVhYlL3TLlecElNmWWFuh7GlDgjIjkuq0OLOPUNxyI5j4sthXyJ5xFdOkTyz5gfrp1w1b&#xA;CZv+KZqVjJP7LfIeOZePUdC66UtRpvrHi4/5w+oe8dWO61oOr6LeGz1S1e1nFaBx8LAbVRhVWHuD&#xA;mSDbnYNRDLHigbCXEYt7RGBVpGBVpwK0cCrTgStyKtYq7ArsVdirsVdirsVcMKrhhVsYVXDChcMK&#xA;rhklXAYVTDWf97I/+YW0/wCoaPIw5fE/e14+XxP3ldAP9wd3/wAxNt/ybnw/xD3H9Cn6x7j+hmfk&#xA;v8wvNmgXVlY3qSXOmXLIkUV0GVgjMByhkIrQV6bjBPEC6nWaDBmEpRIEo86/SHs/lLzx5d8zQg6d&#xA;cAXIFZbKWizJ4/DX4h7rUZg5cco83ntTocmE+obd/Rvz/r+laF5ee81CZYlDfuoyQGkZVJ4IOpJw&#xA;6OYjk4jyDVj0s854ICyfs8y+TPLTmTzXpUh6vfW7GnSpmU44D+8j/WH3ve6wVp5j+hL7n2Z5RuIJ&#xA;NAt4CY3EfNblWIJVGdyFYNVaFiv2xw6/abYZeriRkJ+X4/Vv7g81oZg4QNvP5n8b7e87L7rykFf6&#xA;1pr/AFadGNEVmCgjfYn44247kGtO5XIx1Vip7j8fP8c2GXs8g8WM8Mh+PePxdMU83+RPLXm8GLzL&#xA;ZfV9VA4xa1ahUuBTYepQcJkH6umU5NMOcD8HK0vbc8Z4M4+P4/Q8D/MH8m/NHk+N78hdT0CoCarb&#xA;D4V5EBRPHu0RqQN9q7VrmLe9Hm9LizQyDiibCA0D8x9TsrNdJ1eFNb0LYfUrokvGBt+4m+3GR27e&#xA;GXQymLgansyE5ceM+Hk7x1946pwfLOj69E135PuzcOBzm0W5IS7j8eH7Mqj2/E5mwyCXJxRrcmE8&#xA;OoFf0x9J/UxeeCaCV4Z42ilQ8XjcFWUjsQdxk3ZxkJCwbCkRgZLTkVWnArRwKtOBK04FdgV2KuxV&#xA;2KuxV2KtjCrYwquGFC4ZJVwwquGFVwySslj8s6xrepRx2MBZBbWnOdto1/0aPq39MGMbfE/e6/Nr&#xA;sWCPrO9nbrzKOm1nyf5Pt5LaEr5g1gsruBT6rFJGGVasK8ivM7LX5jKsmojHluXDGHU6w2f3WL/Z&#xA;H8fi1j+YNT1+x8vahqLq0x1K5RVRQiIim2IVQOwr33yeGZlGy2YtJDBLLCHLgj/v2MRSSxSLJE7R&#xA;yIaq6kqwPiCMvp2xAOxQnmW/vr1reS8uZbmQclDzO0jAbbVYnNfqogEUzwQjGwBSH8sMq+ZdJZiF&#xA;Vby3JJ2AAlXKsH95H3hjrReCf9SX3PpOznmgmSaF2jlQhkdTQgjcHOinEEUXzmMjE2NizXRfN1V9&#xA;O8Ajk4hUuEFU2rTlGOgqa/CKd+BO+avNpP5v4+P497tdP2l0lse/p8R+rb+iSj9Qaxe1f6ndc0Eg&#xA;Z7YkOAzGpePkSy178Sa96dMpgJX6h8WGsMDA8EuvL9IvcfC/OuTEPzKd0/LfzCFJAa0YMOxFR1+/&#xA;IZgCGPZGWUdREA7E7vkVVZmCqCzE0AG5JzFe/JpH/o3XbDjefV7i2MRDLOFdChHQ8hTjkzCQ3po8&#xA;bFk9NxN9GT2fn2z1SJLPzfam8CgJFq9uAl5GOg5fsyge/wCJzIx6npJ1uTs2eI8WnPD/AED9J/Uu&#xA;1HypMtodS0i4TVtJ/wCWmCvNPaWL7SHMobixuFw9oRMuDIPDydx6+48ix85F2K04FWnAq05FLRwK&#xA;1gV2KuxV2KuxV2KtjCq4YVXDJIXDCq4YVRNjYXl9OtvaQtNM3REFfv8ADJAW1Zs0MceKZoMrbQPL&#xA;fliNbjzZderfUDRaLbENKa0I9Q/sD/Wp7csE8sYc9y6j83n1RrAOGH88/o/HySbzF5280eYbO4TT&#xA;bOTT/LdsVR7W0VmjRXbjElxMAOROwANAey5gZM8pc3YaTsrDhPGfVPvl+P2qmjflTrc9qb3VwdNt&#xA;gpZIHH+kPRSR8B+xXjT4t/bfHDj4yw1fa8MZ4YeqX2fj8WqaCP8AnXvLZ/7Wl3/2K5l6X6Sub+9y&#xA;/wDC4/79KAMy3OUNS0nUbmy+uW9u8ttblhO6DlwqAakDem3XMTV4pH1AbBgNTjhPgkalLl5pBmvc&#xA;1l3lX8ydc0MpDMfr1gu3oSn4lH+Q+5HyNRmXh1k4bHcOo1vY+LNuPTPvH6Q9p8pec9B8wxj6hPS5&#xA;UVktJKLKv+x/aHutRmxhnjMbPI6zs/Lpz6xt39Gd6MITdxCaP1Yq/ElStdvEZVlBrZxISjE3IcQ7&#xA;uTf5leW7jUPIOuQaIr3k8tq3p2QFZyQQaKB9vp+zv7Zr8kyBUncdnYISzwnjOwO4P1D9fwfK3kWw&#xA;prNwbiMrPaoQI3FGVy3E1B3BG4yekiDK3o+1ZkYwB1L0WMAoQdwQajMvLyLoIcwifz0/KKwtY5/M&#xA;vl23EAjJfUrCIUj495olH2aftKNqb7b10+EExc7srtUmQxZDz5H9B/Q8U0nWdU0i7W7064e3mHUq&#xA;dmHgy9GHscthMxNh3+o02PNHhmLDLvOYtppdN1OGFbdtTsormeJBRBK1QxUe9M2kjYB7w6nssyAn&#xA;jJvw5mIPkxw5W7RacCrTgStyKtYq7ArsVdirsVdhVvFVwySrhhQuGFU98r6Faak13dajcm00rTox&#xA;NezqCzBWPFQFFTUnbpktgCTyDr9dq54+GGMcWSfL4Jg/na7llTQfy+0yW3ac8FuUT1b+c+K8eXp7&#xA;eFW/yhmJl1ROw2DXg7I4pceol4ku7+Efj5Mm8p/khbrML7zrdG4unPNtHtpOTFian61cgkD3WMk/&#xA;5QORx6ec9+QTru28OnHDH1SHQcgz78whDofkeOKwso7a2sL6wkh0+2VY0qt3G/HbqzU3ZjU9zgy4&#xA;oiOzpNHrc2o1NZDQ4ZbdB6S8x8z6vq+qo8uuzrZaeOmmQPRKbCk03wmQn0+gotR0yGACvJ20MUYH&#xA;92Ln3n9A6JHoQ/51vy0f+1rd/wDYpmbpfpLk5v73L/wuP+/ScZmOcyHyn5ij0mWWO4UtbT0LMu5V&#xA;lrvTuN98uxzp03a3Zp1EQY/VH7U21nyN5d8wwm90yRLe5ff1Yv7tj/lx7UPyocrzaKGTeOxdRpu1&#xA;9RpJcGUGUe48/gXm2u+WdY0SbhfQlYyaRzr8Ub/Jv4HfNPm088Z9Qet0faGLUC4Hfu6hLoJ5oJkm&#xA;gkaKaMho5EJVlI6EEbg5UDTlyiJCjuHsv5U/nHqr6xZ6PrifXElJWO+WiyrRCfjXo4267H55mYMs&#xA;pkRLy3a/Y2OGM5Mfprp0+D3+7vbe50O4ntZQ68KhlO4NR9IOXCBEwC8xAkbhikmiaHr8xk1a2Bv3&#xA;QRrqsIC3NF+yJD0lAp+3v74ywcBuG3l0dtDtWUoiGX1Dv6j9bFfMfkfU9BX1y6XenSN6cd5Ht8RB&#xA;IWRD8SNQfL3yPicQI5FywBQnE8UfxzHRn82uaRrlo5tnDq6kS20gAcAihDLvUb0qKjMTS4zE0XSa&#xA;iEoG/tfI3nHRBonmfUdMSvpQSn0K9fScB49/9VhgzQ4ZEPf9n6nx8EZ9SN/fyKf+Zf8AjmeXf+2Z&#xA;F+s5sP4I+5wOz/rzf8MLHzkHZrTgVacCVuRVrFXYFdirsVdirsKt4hVwySrhhQuGFWU+XB/zpfnL&#xA;2tLb/qJXBl/uz7x+l1Wr/wAawe+f3B6P+Qup6fYeTWWDTkn1e6uJVaRUALxgCnqyD42Vd/g+zTfY&#xA;75Xg0olHjJofjk4/a3aRx5DjAvy6fF61ofld7e7lvNUMSiPmvFKJEvwXEYrUKBSSCgr/AByWbU8Q&#xA;Ajf6f4T9xdRp+zyJGeWgBfkOUx98XmH58/mF5YSyutMsLxLzVHubeZIEUsiehIshEpBHH7FKfa9q&#xA;b5jT2hwnm7DQaOWTVHMB+6o78rsVs810T8uPNnml49T8wztpmlsaxtKv72RT2gtxQ77fE1PH4scO&#xA;nlLYOdq+2MGmBjD1T+z4n9H3M6vfJGmQ6dpmn6TG8EOmzm5Qyt6s0rtw5tIBsvIRj7Ow8M22LTCM&#xA;at52HbWTxJSmL4xXdXOq+bzHUtG1HTJvTvISlTRXG6N8myRiRzet02sx5xcDf3oQYuSi7DULyxmE&#xA;1rK0T96dCPBh0OTBIaNRpseaPDMWGYad5w03UIjZ6vEieoOLlhyhf/WBrx+nbLeMSFSeY1XYuXCe&#xA;PCSa/wBMP1pR5h/Ky3uFN3oMgRmHIWrtWNq7/u33p9O3uMwM/Z4O8Pk5Oh9opRPBnHx6/EMQ0GST&#xA;y35rtJtXglgFq5MqcfioylajxG/UZgYj4WQGQqnf6mtVp5DEQeLk+gdB1mzv7X6xpt0s1vKOLtG2&#xA;x78XHUH2ObvijMWN3g82CeKXDMUWR2BIII6jMfI0t+f5efldD0P1iMMP9i2Yo5uXo/q+DArMkMrK&#xA;SrDowJBB9iOmRk7Ei+byT80LlbjzjdNz5uiRJI+27BAewHQGmYuaZlKy9L2TiEMAA5bovzJ/xzPL&#xA;3/bNi/Wc2H8Efc4vZ/15v+GFIDkHZrTgVacCVpwK1gV2BXYq7FXYq7CreIVcMkq4YULhhVlflof8&#xA;6V509rO2/wColcjm/uz7x+l1Wr/xrB75/cGR/lT540Lyj5Ya+1N+byC5hhtAfik9UFK0HxUWtfn3&#xA;GGBj4ABNeq/PZwtbp8k9aTCPF6K8tx1Pl81fUPOf5qfmjcSppanSdBDsZrwsYYUDsWasnjVjVUq2&#xA;+5pmMDfpgK+9vzjBp/XqJceTmI9B12j+mSe+VPy68s+W1S5jQalqYof0pdp+7Rv+XeA138Gap8My&#xA;8WkA+rm6HX9t5c/pHph3D9J/AZUtvPNIZHLcm6yybyEew/ZGZnEAKdMiYrNEHwjr1PUn5nKzNVK/&#xA;0Cx1CForiJXVvtVANfmD1xGUhnjySgeKJovM/Mv5XyW8rvpMgcjc2rN+Csenyb78tFEWHpdF2/8A&#xA;w5v9MP0j9XyYHcW1xazNBcRtFKmzI4II+/A9LjyRmOKJsKdcWaZaP5k1PSmAgk5wVq1u+6H5fyn5&#xA;ZITIcDWdm4tQPUKl3jm9IvdM0jXLRbbU7UNzUMiuKOvIfajfY/dkpwjkG4eJw6jLpshMJVR+fvDB&#xA;r/yF5p8sXR1TyrdSTRru8K09XiN6Mn2ZR9H0ZrZ6WeM3AvTaftjBqo+HqAAe/p8/4fxuyryT+dOm&#xA;XEq2PmOMabeA8Dc0PoFht8YPxRn51HuMEdUDtLYuPrewpRHFiPHHu6/tZH+dd6y+Q7O5srr0g+oW&#xA;5juo2BXiySfFUGhFMpzSrcNPYeIHOYyH8J/Q8982P+ZHla3ZnS2vdOKgx61bIXWjqpUuA3GMkSL1&#xA;XjU7E5QNQS9L/JeG739zyqeaWeZ5pnMksjF5HY1JYmpJyDsYxAFBmfmL/jmeX/8AtmxfrObb+CPu&#xA;dL2f9eb/AIYUhOVuzWnAq04ErTgVrArsCuxV2KuxV2KtjCq4YVXDJIXDCrN/Iek6hq/lrzdpunQm&#xA;4vbm1tkghBALH6yp6sQBQCpJyOYeg+8fpdN2jmjj1GGcjURx/cGSeUPyV0fT+Nz5gZdWv1+L6hCx&#xA;WziPX99LsZCP5V2+eV4tKTvLZ1uv9opS9OH0jv6/s+/3PSI4GlSOONEEEICwxoojtogNgIo1oNv8&#xA;zmdERgKG33vNSmZGybKLhsArc2q8n87dfkOw+jInIxRK23tlZkq9oljUkgmgrxUEsR8hgBtUoutQ&#xA;nlqkQ9JP+GP09syYYwOapDrOvaJokXPUbjjIRWO1jo8z/Jaig/ymIGSOTuc3Sdn5c59I27+jynzd&#xA;5pPmC9jmW1S1hgUpCoPKQgmtZH25H5AAffgF9XtOz9ANNDhBsnmkQDMQqirHYAdScNuezXQvys1+&#xA;8jS71GNrG0ajKjikzj/V/Z/2X3ZGMokuj13bmPHccfql9g/Wz88EiW1uoQ0SAKlf2QNhQ9RmTwg7&#xA;h4wyJNlvhJboZYX+sW6gsyMQJFAFTv0bIk96gWaY3d6B5J892xnhYJfgbzxUS4TwEiH7Q+f0HMXL&#xA;hhP3u7x6nVdny4T9Hcfp+B6fiw8981+UvPPlzSZdOkmkvfLRkE4aKrRK61AZkNTEfi37HxOa3Lhl&#xA;D3PS6HtHTaiYkBw5eW/P59WO+XPNeveXbo3GlXTQh9p4D8UMq0IpJGfhbYkV6jsRmOQC7lL766a7&#xA;vJ7po44WndpDFAgjiXka8URdlUdgMKsu8xf8c3y//wBs6L9ZzbH6I/1XSdn/AF5v+GFIjlbs1pwK&#xA;tOBK3Iq1irsCuxV2KuxV2KtjCrYwquGSQuGFU68s+aNS8v3Mktm37u4UJcRVIDqDUCoyzHPhPK3A&#xA;7Q7PjqYgE0RyL17yl5707VIlDggRUEkMlQqlunxfZ7GlcyTwz+k7vF6zs7Lpz6ht3vRLKS2ukrE1&#xA;SOqHZh9GYcwY83ARZhjjTnIQqr1Y7DK+InkqW3Wq9UtV/wCerD9Q/rl8MXeqGvPOWkaRZNNqTLCy&#xA;9N/tH5btX78jLCSeezdh088suGAsvJvNX5t6hqU7xaPELVX+H6xxHqGu3wjoPman5ZbGNCnqNF2D&#xA;GHqy7nu6Ivyn+UWo6xKb7Xroxhm5SQB+c7E71kbelcZzEWGr7djAcGEcuvT4BnurflX5Su9LSzht&#xA;hbPEP3U8ez/Nj+1+PyyqOc3vydJi7V1EJ8XFd9/L8e55sfLvmXyBriatb2sWp28XIB2TlRT1NBur&#xA;Dsw6d/DLjETGzv49oYdbj8OZOOR/H4BeneVvzN8r+ZlWB2+pX7bG0nIBJ/4rfo/6/YZinHKPJ0et&#xA;7Ky4N/qj3j9PcnOoaBFMpZADXLMeoIdY818269pWhLNb/WBJdMpAtozyO4p8VPsj55n+KK3dloOz&#xA;sueQIFR73kFtd3NrOk9tK8M8ZqkkZKsPkRmK95PHGYqQsPSfKX5sNJJFYa9F6gkIjW8jA/a2/ex9&#xA;PpX7sbt5nX9ggAzxGq3r9R/HvR3mH8ofK3mi1OqeWriKzuZasrRfFayHwZV/uz/q9P5cxMmAHls1&#xA;aTtvPppcGYGQHf8AUP1/jd415l8o+YPLd39W1e0aAsT6Uw+KKQDujjY/LqO4zDlEjm9bpdbizxvG&#xA;b+8J35h/45ugf9s6L9ZzaH6I/wBV13Z/15v+GFIzlbs1pwKtORStOBWsCuxV2KuxV2KuxVwwquGF&#xA;VwwoXDCqJ076qb63F2aWvqJ653+xUcvs79PDfE3WzGd0a5o7UTrJnt4pVKrX/QI7enonkafuPTqr&#xA;EnYkVNeu+MCBuGuIgQftv9LMPL3n7UvL6LFqs/1hhThbx/HLGD19RweK0H7O7fzAZkRzcWxG3f8A&#xA;jm6DWdiRyHiw+n7vh+K7npdp530PVbP642oLwQVZZDxK0/yckMdfS81l0mXHLhlE2wvzN+bUEfO2&#xA;0NPUbcG6f7P+xHfEkDzd1ouwZz9WX0ju6/secXV9qmr3ge4kku7qQ0Rd2NSa0VR+oDI3b0+LDjwQ&#xA;qIEYj8blq8067s5mguAgnQcpIVkjkdB/lqjMV964OIXV7ssWeExceXuI+V80+8s/mDreiMkfqG5s&#xA;02WF2IZB/wAVvuV+W49sk4Gt7IxZ9/pn3j9L2Py1+ZGl63CEWSswFXjI4zL7tGPtD/KTKziB5PJa&#xA;zs7Lpz6h6e8ck6nmhmjJXjJE/X9oHDEEFwGAeaPy70nUWa4sv9Du+vNPssfcbZkDfm7bRdsZcPpP&#xA;rh3H9BYlqvmX8x9D01tHubuQWjHil0PibiP2Vl+0K+++Vyx0bp3mlwaLUz44j1fzf2fq2YM7s7Fm&#xA;JZmNWYmpJPvkSXfAACgvgtZp+RQARp/eSseKKD/Mx/Dx7YKYzyCPPmqGe2tqrbfvZiCpuWBCrXY+&#xA;mp36ftN9wO+N018Ep/VsO79f6h8yr6D5n1vQbr6zpdy0LH+8j+1G48HQ7H9eQKNTpMeeNTF/e9k8&#xA;v/md5T8yaYmnea7eC0a6LIyXA5WknCnxBn/u9zty6U+1XKpw2eV1HZObBPiwky4e76h+v8bPK/zE&#xA;uNCOuCz0N1fTbCP6vAyMZE4qzUCuSeQA/aqctkRQHcHe9kYssYSll+qcrYqcrdstOBVpwJaOBWsC&#xA;uxV2KuxV2KuxV2FW8VXDJKuGFC4YVZFouoajDpbW+lFZJJGc6hZsKvKhUKvAbNx4lgfT+MbkmlKV&#xA;yAJ3cbLCJlcvgfx+nZBfVLG9JNk/1e472c7AAn/iqU0H+xeh7Ascssjm2cRjz3Hf+z8fBBSxSwyN&#xA;FMjRyoaMjgqwPgQd8mC2Ag7hVsIYJ72CG4mEEEjqskxFQik0LfRkgwyylGBMRZA5IjzFqmoaVMLL&#xA;T7OTSYaHjdc+c9yh25euh9Moewj29zmHnzSugOFxtJhjlHFkkMh7qoR/zTvf9bdjLLLbsknqFJiB&#xA;IvEnkK7qajoSN8xSKdkCJWK2TC21iN6JeLRu1xGBX/ZpsD8xT6cycepI57tcsRH0/L8fj3JihlhK&#xA;XNvLVQwMVzExpyG4owoVYdaGhGZsZiQ2atpbH5Fm3lz80Ly1Kw6tymj6fW4wPV/56IaLIPfZvc5Y&#xA;J/F0Ot7BhP1YvTLu6fseiWeuWWoWwuraZJoDt6sZJWp7MCOSH/JYZbCjyeWz6bJhlwzFFj3mHzdo&#xA;luGszH+kbl6qLGIBiT4OaMF+VCfbDLJWw3c/Q9l5cnrJ8OI/i/U8zlht5b9uNuHuJn/c6baFnRSe&#xA;il6ux/1VP0rmO9gJEQ51EfxS/H2n5F2t6V5hsgh1KyltIa0iQpwjWu9ABsCffc4Da6bPhmSISEpd&#xA;e9K4Lee4lEUEbSSGpCqKmgFSfkB1OQJcqUgBZRDR2Np/esLy4HWJD+5U/wCU67v/ALDb/KOC2u5S&#xA;5ekfb+z4/JCXFxLO/KQgkCigAKoA7KooAPliS2QgIigonIslpwKtOBLRwKtOBXYFdirsVdirsVdi&#xA;rsVbGFWxhVcMKFwwquUkEEGhHQ4VTEalDdjhqaGR+17GB64/160WUf61G/yqbYKrk1cBH0/Lp+z8&#xA;bIqRp47YfWAuqaWtEjuEJDxeChyOcR60RxxO5APXEfIsBRO3pl+Pn8EO+mrKrS6dIbqNQWaIjjOg&#xA;AqS0dTyA3+JCRTrTJiXezGStpbfcttdUngha1kVLqxc1eznHOMnxXoUb/KQg++EgEUWOTTxkeIem&#xA;XeOf7fcdla40zStTiX6ihN0i8UtJZRFMQBRVjmKmOUL2DKr02q2U5MFjbf7/ANrjjJkwn1H099WP&#xA;iOcfmY9dmMXiehK9ubd7eRDxkSapkUjqCCEp/wADmFL3Ozxmxd2PLl+lPdE8s65HZnWJy+n6VQcr&#xA;hozJ6oJ+FVhPwuC1Pt0X3y/DgmfUNg4Oo12Iz8KPryd11Xx6fDfyW3DwtPK0ClIS7GJGNSFJ+EE+&#xA;wzPb4A8IvmjbNbq0RpnupLCKZOJWMkSyoewQFaqfFiF+Z2xachjPahKvkPx5bsj8o+TdV8yK31Om&#xA;naTUpNcMeUsg7iuxb5bL7VyUY26vtDtPHpjUvXk7ug/HxL2ryf5F8v8Al2MGygD3JFJLuWjSt9P7&#xA;I9hkZF5bU6/LqDczt3dFvmC2hn1C5imjWWKQKHjcBlI4LsQcsx/S43EYysGi8/8AM35Ym4s2Xy/K&#xA;LRT8Ulgdo5TXkP3n2tj0D1A7ccrljF27/Q9uGJ/fDi/pdR8P1fa8ivLW4tLmW1uUMdxA5jljPUMp&#xA;oRtlZetxzE4iUTYKgTkWbROBVpwKtOBLRwK1gV2KuxV2KuxV2KuxV2Kuwq3iq4YVbBwoXA4VbBwq&#xA;r2t3cWsnqQSGNyCpI6FT1Vh0KnuDthYyiJCijUmsrl1kUjT71SGWVK+izDetBVomr/LVfZQMWsiU&#xA;f6Uft/b+Oarcupf0tWhMc5FUvoQpLjszAHhMD/OCCevJumI8mMe+B27vxy9yFubCaGP1lKz2pNFu&#xA;YiWSvgagMp9mAOSBbI5AduR7lVNavKR+qIriSAcbeWeNJZIx24s4J27eHbCQDuRbSdJDerjfMAkA&#xA;/L8FUtp9ZuGkuPrD+ly5XE8zExVP8/KockD7NCT4HDxLLHiiBGh5Ac/h3e9WeexS3mnsol+sRFVe&#xA;4df3ZLV3hjblxbb9qu24C0w8wwEZ8QjI+k9OvxPX8XdpTJLJI7SSMXdjVmY1JJ7knIuYAAKDOPIv&#xA;5nP5ftk0y+tfrGnKzNHNDRbiLmakCvwyLXfi3j1xBIdJ2n2MNQeOJqf2H9T2zy35w0TVoFmtLpJY&#xA;9gXGxU+EiH4kPzyRF8nkc2lyYJcMxSzW5oE1CaVnX0/hPKtRsgyeMGmmXN5v5o/Neysw9tpNLmfo&#xA;ZQf3an/WHX/Y/fhM4x8y7vRdhZMnqyeiP2/s+PyeS3t5PeXUt1O3Kady8jdKljXMeUrNvY4sUccR&#xA;GPIIcnItjROBVpwJW4FaOBXYFdirsVdirsVdirsVdirsVcMKrhhVsHCq4HChsHFW64VbrhVFWuoT&#xA;QoYSFmtmNWt5RVK+IpQq3upBxa54wd+R70ZbKTJ6ukzMszDi1nIQXYHqo2CTKf5SKnpxPXC1yO1T&#xA;G3f+OX43U1kgnuQo08tdE0+rxs4jZh1rGAX38FcfRik2BfF6e/8Aby+xfdTR1U3sgnkQERWcJCwx&#xA;13oSnwj3Cde7A5LkxiCfpFDvPM/jz+RQdxeTT0DELEtfThQcUWvgo/X1PfEybYYxH39/VRrgbGq4&#xA;FV7HUb6wuVubKd4J16OhoaeB8R7HEGmrLhhkjwzFhMNW83+YdWhEN7ds0P7UaBY1b/WCAV+nJSyE&#xA;uNp+zcGE8UI7/P70lrlbnNE4q0TgVaTgS0TgVo4FawK7FXYq7FXYq7FXYq7FXYq7FXYq2DhVsHCr&#xA;dcKtg4obrhVuuFW64q3XCqu19eMhRp5GUihBY7jwPtthtgMcedBRrgZurirVcVdXFWq4FdXFWq4F&#xA;W1xVquBLROBWicCtYFdirsVdirsVdirsVdirsVdirsVdirsVbBwq3XCrdcVbrhQ3XCrq4q3XCrq4&#xA;q3XFXVxVquKurirVcCurirVcCtVwJarirROBWsVdgV2KuxV2KuxV2KvXf+sXv+/l/wCnfMb995J2&#xA;d/1i9/38v/Tvj++8l2d/1i9/38v/AE74/vvJdnf9Yvf9/L/074/vvJdnf9Yvf9/L/wBO+P77yXZ3&#xA;/WL3/fy/9O+P77yXZ3/WL3/fy/8ATvj++8l2d/1i9/38v/Tvh/feS7N/9Yvf9/L/ANO+P77yXZ3/&#xA;AFi//wB/L/074/vvJdm/+sYP+/l/6d8P77yXZ3/WMH/fy/8ATvj++/ors3/1jB/38v8A074/vv6K&#xA;7O/6xg/7+X/p3w/vv6K7O/6xh/7+X/p3x/ff0V2b/wCsYf8Av5f+nfH99/RXZ3/WMP8A38v/AE74&#xA;/vv6K7Nf9Yw/9/L/ANO+P77+iuzv+sYP+/l/6d8f339Fdnf9Ywf9/L/074/vv6K7Nf8AWMH/AH8v&#xA;/Tvg/ff0V2d/1jB/38v/AE74/vv6K7Nf9Yv/APfy/wDTvj++8l2d/wBYv/8Afy/9O+D995Ls1/1i&#xA;9/38v/Tvj++8l2d/1i9/38v/AE74P33kuzv+sXv+/l/6d8f33kuzv+sXv+/l/wCnfH995Ls7/rF7&#xA;/v5f+nfH995Ls7/rF7/v5f8Ap3x/feS7O/6xe/7+X/p3x/feS7O/6xe/7+X/AKd8f33kuz//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>675.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Белый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Черный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:cefb4757-76fb-6f4d-8bf7-15642b796689</stEvt:instanceID>
                  <stEvt:when>2017-11-12T18:02:07+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4d418a2f-8d26-5140-ba41-f7a674148b4a</stEvt:instanceID>
                  <stEvt:when>2017-12-23T01:28:54+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:44079238-e715-7642-816a-f73578bf2810</stEvt:instanceID>
                  <stEvt:when>2017-12-23T01:33:29+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f6de3fae-1aca-764c-92c8-79a58d9a28ba</stEvt:instanceID>
                  <stEvt:when>2017-12-26T12:49:50+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:db159d92-b559-6947-9e74-8f2c5b363b5a</stEvt:instanceID>
                  <stEvt:when>2018-02-11T01:49:36+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:380b2f65-0b70-3c4d-86de-d12f3dfbd34e</stEvt:instanceID>
                  <stEvt:when>2018-02-11T01:50:09+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:946d874d-dfd3-5343-8289-00bf8bcd9f35</stEvt:instanceID>
                  <stEvt:when>2018-03-04T13:53:18+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DocumentID>xmp.did:946d874d-dfd3-5343-8289-00bf8bcd9f35</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:946d874d-dfd3-5343-8289-00bf8bcd9f35</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:cefb4757-76fb-6f4d-8bf7-15642b796689</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:380b2f65-0b70-3c4d-86de-d12f3dfbd34e</stRef:instanceID>
            <stRef:documentID>xmp.did:380b2f65-0b70-3c4d-86de-d12f3dfbd34e</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:cefb4757-76fb-6f4d-8bf7-15642b796689</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
675 450 li
675 0 li
cp
clp
675 450 mo
0 450 li
0 0 li
675 0 li
675 450 li
183.335 292.795 mo
183.292 292.795 183.249 292.806 183.209 292.83 cv
168.392 301.42 li
166.643 302.434 165.6 304.245 165.602 306.267 cv
165.604 308.288 166.65 310.098 168.401 311.108 cv
300.733 387.51 li
302.684 388.637 304.865 389.199 307.046 389.199 cv
309.278 389.199 311.51 388.609 313.493 387.431 cv
456.671 302.373 li
460.48 300.109 462.848 295.95 462.848 291.52 cv
462.848 287.447 li
490.464 303.824 li
507.242 313.394 li
512.299 310.354 li
512.299 310.349 li
513.584 309.752 514.413 308.151 514.413 305.809 cv
514.413 181.467 li
514.413 177.429 511.958 172.737 508.929 170.989 cv
315.763 59.4645 li
314.994 59.0204 314.262 58.8113 313.599 58.8113 cv
313.046 58.8113 312.541 58.9564 312.099 59.2316 cv
312.09 59.2264 li
307.224 62.1545 li
305.979 62.7761 305.182 64.3683 305.182 66.6684 cv
305.182 183.257 li
306.108 183.792 li
307.211 195.151 li
381.205 239.031 li
381.205 239.844 li
381.205 248.204 li
381.208 248.206 li
381.21 254.553 li
381.211 258.138 379.297 261.45 376.191 263.24 cv
351.543 277.445 li
351.543 279.745 li
391.099 302.688 li
416.859 287.815 li
419.292 286.41 420.791 283.815 420.791 281.006 cv
420.791 262.506 li
462.348 287.15 li
462.348 291.52 li
462.348 295.775 460.074 299.77 456.415 301.943 cv
313.237 387.001 li
311.333 388.133 309.19 388.699 307.047 388.699 cv
304.953 388.699 302.857 388.158 300.983 387.076 cv
168.651 310.675 li
167.057 309.755 166.104 308.106 166.102 306.266 cv
166.101 304.426 167.051 302.775 168.643 301.852 cv
183.46 293.262 li
183.579 293.193 183.621 293.04 183.551 292.921 cv
183.505 292.841 183.421 292.795 183.335 292.795 cv
386.359 362.3 mo
386.361 363.226 386.917 364.111 388.062 364.772 cv
421.999 384.365 li
423.145 385.027 424.68 385.352 426.287 385.352 cv
428.228 385.352 430.274 384.879 431.873 383.956 cv
464.391 365.182 li
465.989 364.259 466.802 363.078 466.802 361.958 cv
466.808 361.958 li
466.808 356.505 li
466.804 356.505 li
466.806 356.541 466.807 356.577 466.807 356.613 cv
466.807 356.577 466.806 356.541 466.804 356.505 cv
466.76 355.618 466.2 354.777 465.1 354.142 cv
431.163 334.549 li
430.016 333.887 428.481 333.562 426.874 333.562 cv
424.933 333.562 422.887 334.035 421.288 334.958 cv
388.77 353.732 li
387.142 354.672 386.325 355.881 386.356 357.02 cv
386.353 357.02 li
386.353 362.3 li
386.359 362.3 li
249.886 328.658 mo
249.886 330.913 li
249.889 330.913 li
249.888 331.535 250.34 332.192 251.228 332.704 cv
306.188 364.436 li
307.076 364.948 308.213 365.211 309.29 365.211 cv
310.183 365.211 311.036 365.031 311.672 364.663 cv
338.952 348.913 li
339.67 348.499 339.973 347.926 339.883 347.34 cv
339.883 345.484 li
339.999 344.802 339.547 344.053 338.558 343.482 cv
283.598 311.751 li
282.71 311.238 281.573 310.976 280.496 310.976 cv
279.603 310.976 278.751 311.156 278.114 311.523 cv
250.835 327.273 li
250.194 327.643 249.882 328.139 249.886 328.658 cv
261.65 146.131 mo
261.201 146.131 260.695 146.277 260.16 146.587 cv
163.828 202.204 li
161.996 203.261 160.517 205.828 160.523 207.933 cv
160.722 278.069 li
263.689 218.62 li
263.49 148.484 li
263.486 146.994 262.738 146.131 261.65 146.131 cv
211.587 178.528 mo
211.279 178.528 211.068 178.285 211.067 177.864 cv
211.065 177.269 211.483 176.544 212.001 176.245 cv
212.152 176.158 212.295 176.117 212.422 176.117 cv
212.729 176.117 212.941 176.36 212.942 176.781 cv
212.944 177.376 212.525 178.101 212.007 178.4 cv
211.856 178.487 211.713 178.528 211.587 178.528 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[286.82 0 0 286.82 337.5 225 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.101961 .0980392 .294118 ]
/C1 [.172549 .168627 .498039 ]
/N 1.12909 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[286.82 0 0 286.82 337.5 225 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~/1W5$.k<,#.k<,#.k3"u.Olnt.Olnt.Olkr.4H\p.4H\p.4H\o-n$Jl-n$Jl-n$Jl-RU8h-RU8h-RU8h
-RL/e-71&d-71&d-71#b,pai`,pai`,pai_,U=W\,U=W\,U=W\,9nEX,9nEX,9nEX,9nBV+sJ3T+sJ3T
+sJ3T+X&!P+X&!P+X&!P+X%sN+<VdL+<VdL+<VdL+!2RH+!2RH+!2RH+!2OF*Zc@D*Zc@D*Zc@D*ZZ7A
*??.@*??.@*??.@*#oq<*#oq<*#oq<*#oq<)]K_8)]K_8)]K_8)]K_8)]BV5)B'M4)B'M4)B'M4)B'M4
~>
<~.k3"u.Olnt.Olnt.Oceq.4H\p.4H\p.4HYn-n$Jl-n$Jl-n$Jk-RU8h-RU8h-RU8h-71&d-71&d-71&d
-7'ra,pai`,pai`,paf^,U=W\,U=W\,U=W[,9nEX,9nEX,9nEX+sJ3T+sJ3T+sJ3T+sJ0R+X&!P+X&!P
+X&!P+<VdL+<VdL+<VdL+<VaJ+!2RH+!2RH+!2RH*Zc@D*Zc@D*Zc@D*Zc=B*??.@*??.@*??.@*?6%=
*#oq<*#oq<*#oq<)]K_8)]K_8)]K_8)]K_8)B'M4)B'M4)B'M4)B'M4)AsD1)&X;0)&X;0)&X;0)&X;0
~>
<~IsuiqIXQWmI=-EiI!g9fH[C'bH?sj^H$O[[G^+IWGB\7TG'8%PF`hhLF`__IFE;MEF)uABEcQ/>EH,u;
E,]c7Df9Q4DJj?0D/F-,D/=$)Chmg%CMR["C2.KtBk_9pBP;'mB4kjiB4bafAn>ObAS#C_A7T4\@q0"X
@U`eU@:<SQ@:3JN?sm>K?XI/H?=$rE?!U`A>[1N=>[(E:>?b97>$>*4=]nm1=BJ[-=BJX+='&I(<`W7%
<E3%!<E)ps<)cdp;c?Un;GpCj;Gg:g;,L1e:f'tb:JXb^:JX_\:/4PZ9he>V9he;T9MA,R9M8#O91qoN
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
307.046 389.199 mo
304.865 389.199 302.684 388.637 300.733 387.51 cv
168.401 311.108 li
166.65 310.098 165.604 308.288 165.602 306.267 cv
165.6 304.245 166.643 302.434 168.392 301.42 cv
183.209 292.83 li
183.249 292.806 183.292 292.795 183.335 292.795 cv
183.421 292.795 183.505 292.841 183.551 292.921 cv
183.621 293.04 183.579 293.193 183.46 293.262 cv
168.643 301.852 li
167.051 302.775 166.101 304.426 166.102 306.266 cv
166.104 308.106 167.057 309.755 168.651 310.675 cv
300.983 387.076 li
302.857 388.158 304.953 388.699 307.047 388.699 cv
309.19 388.699 311.333 388.133 313.237 387.001 cv
456.415 301.943 li
460.074 299.77 462.348 295.775 462.348 291.52 cv
462.348 287.15 li
462.848 287.447 li
462.848 291.52 li
462.848 295.95 460.48 300.109 456.671 302.373 cv
313.493 387.431 li
311.51 388.609 309.278 389.199 307.046 389.199 cv
level3{
gsave
clp
[297.245 0 0 297.245 165.602 335.068 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.517647 1 .8 ]
/C1 [.12549 .745098 .960784 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[297.245 0 0 297.245 165.602 335.068 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~KS+o/JqAQ)J:N0"IsuiqI=6KjI!^3eH?sj^H$FRXGB\4RF`hhKFE;MEEcQ2?EH#l9Df9N2DJa6,Ci!m&
CMITuBk_6oB4kjhAn>ObA7T1[@q&nV@:<PO?sd8I?=$oC>[1N<>?Y36=]nm0=BAR*<`W4#<E)pr;c?Rl
;Gg:f:f'q`:/4PY9h\5S91qlL8kDTG84Z6@7n,s:77BU46UO4-6:!n'5X7S!5<_7p4Ztni4?GVc3]]8]
3&ilV2`EWQ2)R6J1c$pD1,:R=0eb:80/"q1/hJY+/1`;%.Olns.4?Sm-RU8g-7'ra,U=TZ,9e<T+X%sN
~>
<~s8N#srVc]nr;?Kjqtp9fqYL'bq>'j^q"XXZp\4FVp@e4Rp%A"No^qeJoCMSFo()ABnaZ/>nF5r:n*f`6
mdBN1mHs<-m-O*)lg*m%lK[[!l07Hrkih6nkND$jk2tgfjlPUbjQ,C^j5]1Zio8tViSibRi8EPNhr!>J
hVR)Eh;-lAgt^Z=gY:H9g=k65g"G$1f\"g-f@SU)f%/C%e^`1!eC;sre'landaHOjdF$=fd*U+bcd0n^
cHXVYc-4DUbfe2QbK@uMb/qcIaiMQEaN)?Aa2Z-=`l5p9`Pf^5`5BL1_ns:-_SO()_8*k%^q[Y!^V7Fr
~>
<~bfn;Tbfn;Uc-=MXc-FV[cHa_]cd0q`cd:%cd*U.ddF$@hdF$CjdaHRle'ldpe'lgreC<!teCE+"e^`4$
f%/F'f%8O*f@SX,f\"j/f\"m1g"G'3g=k97g=k<9gY:K;gt^]?gt^]@h;-oCh;7#FhVR,Hhr!>Khr*GN
i8EPOiSibSiSieUio8tWj5]1[j5]4]jQ,C_jQ5LbjlPUdk2tggk3(pjkND$lkih6okih9ql07HslK[["
lK[^$lg*m&m-O**m-O*+mHs<.mI'E1mdBN3n*f`6n*oi9nF5r:naZ/>naZ2@o()ABoCMSFoCMVHo^qeJ
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
309.29 365.211 mo
308.213 365.211 307.076 364.948 306.188 364.436 cv
251.228 332.704 li
250.34 332.192 249.888 331.535 249.889 330.913 cv
249.886 330.913 li
249.886 328.658 li
249.89 329.278 250.345 329.93 251.228 330.439 cv
306.188 362.171 li
307.076 362.683 308.213 362.946 309.291 362.946 cv
310.183 362.946 311.036 362.766 311.672 362.398 cv
338.952 346.648 li
339.501 346.331 339.809 345.922 339.883 345.484 cv
339.883 347.34 li
339.973 347.926 339.67 348.499 338.952 348.913 cv
311.672 364.663 li
311.036 365.031 310.183 365.211 309.29 365.211 cv
level3{
gsave
clp
[-50.7191 25.4422 -25.4422 -50.7191 299.323 337.003 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0784314 .643137 .858824 ]
/C1 [.345098 .94902 .913725 ]
/N 1.49438 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-50.7191 25.4422 -25.4422 -50.7191 299.323 337.003 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~'GM5q'GM5q'GM5q'GM5q'bqGu'bqGu'c%Q#()@Z$(Ddl((Ddl)(`4),(`=2/)&X;1)B'M4)]K_8)]Kb:
*#oq=*??.A*Zc@D+!2RH+!;[K+<_mO+X/*S+sJ6V,9nHZ,U=Z^,palb-71)f-R^Ak-n-So.4Qes.k<,#
/1`>'/M/P,/hSe10/#"50JP::0etL>1G^gD1c.'I2)[?N2E*QR3&ilX3B9,]3]fDb4?P_h4Zttm5!M7r
5X7S#5s[h(6UO4/6psI477Ka97n6*@84cBE8kM]K92&#Q9he>W:/=Y]:f'tc;,U:i;c?Xp<)lq!<`W:'
~>
<~Unjf^Unjf^Unjf^Unji`V5:#bV5:#cVP^5fVPg>iVl-GjW2QYnW2ZbqWMuksWiE)!X/i;%XK8M)XKAV,
Xfeh0Y-+t3YHP17YctC;Z*CU?ZEpmDZa@*H['d<L[^NWQ\$riV\@B&Z\[f;_]"5Mc]=beh]tM+n^:q@s
^VIY#^qmk'_SX1-_o'F2`Pog9`l?'>a2l?CaiVZIb0.uObfn;Uc-=PZcd0qad*U1fdaHRme'umse^`4$
f%8O*f\"m1g"P07gY:N=h;-rEhV[5Ki8ESQio9"Yj5f:_jlY^fkND'ml07HtlKdd&m-X3-mdBQ4nF5u<
~>
<~gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gt^]?gt^]?gt^]?gt^]?gt^]?
gt^]?gt^`Ah;-oCh;-oCh;-oCh;-oCh;-oChVR,GhVR,GhVR,GhVR,GhVR,Hhr!>Khr!>Khr!>Khr!>K
hr*GNi8EPOi8EPOi8EPOi8ESQiSibSiSibSiSibSiSrkVio8tWio8tWio8tWioB(Zj5]1[j5]1[j5]1\
jQ,C_jQ,C_jQ,C_jQ5LbjlPUcjlPUcjlPXek2tggk2tggk2tghkND$kkND$kkND$kkih6okih6okih6o
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
309.291 362.946 mo
308.213 362.946 307.076 362.683 306.188 362.171 cv
251.228 330.439 li
250.345 329.93 249.89 329.278 249.886 328.658 cv
249.882 328.139 250.194 327.643 250.835 327.273 cv
278.114 311.523 li
278.751 311.156 279.603 310.976 280.496 310.976 cv
281.573 310.976 282.71 311.238 283.598 311.751 cv
338.558 343.482 li
339.547 344.053 339.999 344.802 339.883 345.484 cv
339.809 345.922 339.501 346.331 338.952 346.648 cv
311.672 362.398 li
311.036 362.766 310.183 362.946 309.291 362.946 cv
283.517 312.554 mo
252.619 330.393 li
307.318 361.973 li
307.817 362.261 308.472 362.405 309.127 362.405 cv
309.782 362.405 310.438 362.261 310.936 361.973 cv
338.216 346.223 li
339.214 345.647 339.214 344.71 338.216 344.134 cv
283.517 312.554 li
level3{
gsave
clp
[90.8649 51.8756 -51.8756 90.8649 241.189 306.3 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.345098 .94902 .913725 ]
/C1 [.0784314 .643137 .858824 ]
/N 1.28249 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[90.8649 51.8756 -51.8756 90.8649 241.189 306.3 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~',2,q'bqK"()Ic'(`4)-)&X>2)B0V7*#oq=*??1B*ZlIG+<VdL+X&!Q+sJ6V,:"N[,paia-71)f-R^Ak
-n-So.Olnu.k</%/1iG*/M8Y.0/"t40JG180ekF=1,C^B1GgpF2)R6L2E!HP2`E]U3&ioY3BB2^3]fDb
4?P_g4Ztqk5!D.p5<h@t5X7S#5s[h(6:+%,6UO706psI477B[87Rfm<7n6*@84Z<D8P)NH8kM`L91qrP
9MA,S9he>W:/4PZ:JXb^:f'tb:f1(e;,L4h;GpCk;c?Un<)cgr<)cjt<E3%!<`W7%<`W7&='&I)='&I)
~>
<~Unjf_V5:&dVl-GkW2ZbqWiE)"X/rD(Xf\b/Y-5%4YctC;Z*L[@Za7$G['d<L[^NWR\%&rX\[f8^]"5Mc
]Y(nj]tM.o^;%Ft^qde&_8=(+_o'C1`5KX6`Q#p;a2c6AaN;QGb0%lMbKJ,Rbg"DWcHa_]cd0qad*U1f
dF-Ike'ldqeC<%!e^i=&f%8O*f\"j0g"G*5g=k<9gYCT>h;-oChVR,Hhr!>Li8ESQiSieUio9"Yj5f:^
jQ5LbjlY^fk3(pjkNM-nkiq?rl0@R!lKdd%lg*p(m-O-,mHs</mdBN2n*f`6n*fc8nF5r:naZ/>naZ/>
~>
<~gY:K;gY:K;gY:K;gY:K<gt^]?gt^]?gt^]?gtgfBh;-oCh;-oCh;-oChVR,GhVR,GhVR,GhVR,Ghr!>K
hr!>Khr!>Khr!>Li8EPOi8EPOi8EPOi8EPPiSibSiSibSiSibSiSibTio8tWio8tWio8tWio8tWj5]1[
j5]1[j5]1[j5]1[j5]4]jQ,C_jQ,C_jQ,C_jQ,C_jlPUcjlPUcjlPUcjlPUcjlPUdk2tggk2tggk2tgg
k2tggk2tggkND$kkND$kkND$kkND$kkND$kkND$kkih6okih6okih6okih6okih6okih6okih6okih6o
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
283.517 312.554 mo
338.216 344.134 li
339.214 344.71 339.214 345.647 338.216 346.223 cv
310.936 361.973 li
309.939 362.549 308.316 362.549 307.318 361.973 cv
252.619 330.393 li
283.517 312.554 li
.0901961 .0470588 .164706 rgb
f
264.233 322.079 mo
269.05 319.298 li
269.146 319.242 269.134 319.144 269.022 319.08 cv
268.965 319.047 li
268.853 318.982 268.684 318.975 268.587 319.031 cv
263.771 321.812 li
263.674 321.868 263.686 321.965 263.798 322.03 cv
263.855 322.063 li
263.967 322.128 264.136 322.135 264.233 322.079 cv
cp
f
269.779 318.603 mo
269.904 318.675 270.105 318.675 270.23 318.603 cv
270.354 318.531 270.354 318.415 270.23 318.343 cv
270.105 318.271 269.904 318.271 269.779 318.343 cv
269.655 318.415 269.655 318.531 269.779 318.603 cv
cp
f
294.894 347.11 mo
290.509 347.11 286.124 346.147 282.785 344.22 cv
279.464 342.302 277.634 339.724 277.634 336.96 cv
277.634 334.197 279.463 331.619 282.785 329.701 cv
286.123 327.774 290.508 326.811 294.893 326.811 cv
299.278 326.811 303.662 327.774 307 329.701 cv
310.323 331.62 312.152 334.198 312.152 336.961 cv
312.152 339.724 310.323 342.302 307.001 344.221 cv
307.001 344.221 li
303.663 346.147 299.279 347.11 294.894 347.11 cv
294.893 327.728 mo
290.676 327.728 286.461 328.654 283.25 330.508 cv
280.229 332.252 278.565 334.544 278.565 336.96 cv
278.565 339.377 280.229 341.669 283.251 343.413 cv
286.461 345.267 290.678 346.194 294.895 346.194 cv
299.111 346.194 303.326 345.267 306.536 343.414 cv
309.558 341.67 311.221 339.378 311.221 336.961 cv
311.221 334.544 309.558 332.252 306.535 330.508 cv
303.326 328.654 299.109 327.728 294.893 327.728 cv
level3{
gsave
clp
[-24.6809 14.2495 -21.3743 -12.3404 307.234 329.836 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(CVc0$n<&%.MiLC(CVc0$n<&%.MiLC(CVc0$n<&%.MiLC(CVc0$n<&%.MiLC(CVc0$n<&%.MiLC(CVc0
$n<&%.MiLC(CVc0$n<&%.MiLC(CVc0$n<&%.MiLC(CVc0$n<&%.MiLC(CVc0$n<&%.MiLC(CVc0$n<&%
.MiLC(CVc0$n<&%.MiLC(CVc0$n<&%.MiLC(CVc0$n<&%.MiLC(CVc0$n<&%.MiLC(CVc0$n<&%.MiLC
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(CVc0%P/D-/f,-S(DJV@(,ZmF2]!An(E>OR+$^Vd65Ln9(FM`i.SCR.:)>NZ(GSl*1fbDN=r02)(Hc%@
5@YKqAf!jL(Ir9X8oGM?Eu.Yr(K5Sq<IGZcJ/;FB(LDk5@Ytt5N>H5i(M]0ND3l&XRhp1<(O)PhHDMF*
W>C)d(PAq.L9h\Q[MOq8(Qc?IP/.s#`>=ra(S&\cT[+FLe/,"6(TH+)XPObtiYSr_(UrWF\a:3HnJB"5
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.193815 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-24.6809 14.2495 -21.3743 -12.3404 307.234 329.836 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
22 <~$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[@O%1WjY%hK<b&eYil
'GVB!(Ddo+)&aD4*$$%@+!;^N+sS?Z-7:/h.4Qes.kE8)0/,(71,CaE2)[BQ3BB2_4?Ykm5<qM$6UX=2
7Rp!@8kViP:/=Y^;,U=l<)lt#=BSd1>?kH??X[DRA7]=aAnPdkC27X&DJjB4EcZ>FG'A1VH?spbI"$Qq
JV&N-KnY8:Ll%%KNK0']OHGZhPa.Q$R$jD4S=Q7DTV8*TUnsrdW2Q\qX/rJ-Yd(L?['d?O\@B)\]Y2%o
~>
<~.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H_r.kE5'/M8\00JG4:
1GgsH2E!KR3BB2_4?Ykm5X@\&6UX@47n?0B8kViP:/4S];,U=l<E3(%=^#$7?!UcC?t!MSA7]@cBPD0q
CM[j*DfB`<FEM_LGBeC[I!pHnJ:W9'KS>/9Ll%"IN/`jYOHG]iPa.Q$R$jD4S=Q7DTV8*TV5C/hWN*##
Xfnt6ZEggD[C<ZW]=bhk^V@S$_o0O6aN;TJbfn>Wd*^=le^i@)g"G-8h;7)KioB+]k3(snlg4$,nF?)@
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
331.535 357.116 mo
326.848 359.821 li
326.848 359.083 li
331.525 356.375 li
331.535 357.116 li
cp
level3{
gsave
clp
[1.23106 2.44613 -2.44613 1.23106 329.189 358.103 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.23106 2.44613 -2.44613 1.23106 329.189 358.103 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
326.848 359.075 mo
322.568 356.581 li
327.245 353.881 li
331.525 356.375 li
326.848 359.075 li
cp
level3{
gsave
clp
[3.64522 5.59573 -5.59573 3.64522 325.464 354.049 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.64522 5.59573 -5.59573 3.64522 325.464 354.049 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
322.568 356.581 mo
322.568 357.327 li
326.848 359.829 li
326.848 359.075 li
322.568 356.581 li
cp
level3{
gsave
clp
[-8.68138 5.53178 -5.53178 -8.68138 329.628 355.07 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-8.68138 5.53178 -5.53178 -8.68138 329.628 355.07 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
304.388 403.592 mo
302.166 403.592 299.946 403.008 297.969 401.841 cv
178.362 331.221 li
176.636 330.202 175.607 328.396 175.611 326.392 cv
175.615 324.387 176.65 322.585 178.381 321.572 cv
272.878 266.278 li
272.878 134.43 li
272.878 134.292 272.99 134.18 273.128 134.18 cv
273.266 134.18 273.378 134.292 273.378 134.43 cv
273.378 266.422 li
273.255 266.638 li
178.634 322.004 li
177.058 322.926 176.115 324.566 176.111 326.393 cv
176.108 328.219 177.044 329.862 178.616 330.791 cv
298.223 401.411 li
301.988 403.633 306.679 403.654 310.461 401.463 cv
348.704 379.327 li
350.446 378.319 351.485 376.516 351.484 374.503 cv
351.483 372.49 350.442 370.688 348.699 369.682 cv
329.067 358.347 li
328.947 358.277 328.906 358.124 328.975 358.005 cv
329.044 357.886 329.197 357.846 329.317 357.913 cv
348.949 369.248 li
350.849 370.345 351.983 372.31 351.984 374.503 cv
351.985 376.696 350.852 378.662 348.954 379.761 cv
310.712 401.896 li
308.759 403.027 306.573 403.592 304.388 403.592 cv
cp
level3{
gsave
clp
[176.373 0 0 176.373 175.611 268.886 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[176.373 0 0 176.373 175.611 268.886 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
243.729 169.047 mo
243.591 169.047 243.479 168.936 243.479 168.797 cv
243.479 118.044 li
243.479 117.906 243.591 117.794 243.729 117.794 cv
243.868 117.794 243.979 117.906 243.979 118.044 cv
243.979 168.797 li
243.979 168.936 243.868 169.047 243.729 169.047 cv
cp
level3{
gsave
clp
[.5 0 0 .5 243.479 143.421 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.5 0 0 .5 243.479 143.421 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
215.776 177.423 mo
215.638 177.423 215.526 177.311 215.526 177.173 cv
215.526 103.199 li
215.526 103.061 215.638 102.949 215.776 102.949 cv
215.914 102.949 216.026 103.061 216.026 103.199 cv
216.026 177.173 li
216.026 177.311 215.914 177.423 215.776 177.423 cv
cp
level3{
gsave
clp
[.5 0 0 .5 215.526 140.186 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.5 0 0 .5 215.526 140.186 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
440.971 347.831 mo
440.755 347.707 li
440.685 347.588 440.725 347.435 440.845 347.365 cv
488.045 319.783 li
491.75 317.618 494.052 313.606 494.052 309.314 cv
494.052 284.85 li
494.052 284.712 494.164 284.6 494.302 284.6 cv
494.439 284.6 494.552 284.712 494.552 284.85 cv
494.552 309.314 li
494.552 313.783 492.155 317.96 488.297 320.215 cv
441.097 347.797 li
440.971 347.831 li
cp
level3{
gsave
clp
[53.8309 0 0 53.8309 440.721 316.215 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[53.8309 0 0 53.8309 440.721 316.215 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
421.999 383.372 mo
388.062 363.778 li
385.531 362.317 385.848 359.765 388.77 358.077 cv
421.288 339.303 li
424.211 337.616 428.632 337.433 431.163 338.894 cv
465.1 358.487 li
467.631 359.948 467.313 362.501 464.391 364.188 cv
431.873 382.962 li
428.95 384.65 424.529 384.833 421.999 383.372 cv
.196078 .780392 .960784 rgb
f
426.287 385.352 mo
424.68 385.352 423.145 385.027 421.999 384.365 cv
388.062 364.772 li
386.917 364.111 386.361 363.226 386.359 362.3 cv
386.353 362.3 li
386.353 357.02 li
386.356 357.02 li
386.356 357.02 li
386.381 357.925 386.941 358.786 388.062 359.433 cv
421.999 379.027 li
421.999 379.027 li
423.144 379.688 424.677 380.013 426.283 380.013 cv
426.284 380.013 426.286 380.013 426.287 380.013 cv
426.287 380.013 li
426.287 380.013 li
426.289 380.013 426.291 380.013 426.293 380.013 cv
428.232 380.012 430.276 379.54 431.873 378.618 cv
464.391 359.843 li
465.992 358.919 466.81 357.735 466.807 356.613 cv
466.807 356.577 466.806 356.541 466.804 356.505 cv
466.808 356.505 li
466.808 361.958 li
466.802 361.958 li
466.802 363.078 465.989 364.259 464.391 365.182 cv
431.873 383.956 li
430.274 384.879 428.228 385.352 426.287 385.352 cv
level3{
gsave
clp
[-58.7318 -36.9242 36.9242 -58.7318 457.643 379.632 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-58.7318 -36.9242 36.9242 -58.7318 457.643 379.632 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
426.287 380.013 mo
426.286 380.013 426.284 380.013 426.283 380.013 cv
424.677 380.013 423.144 379.688 421.999 379.027 cv
421.999 379.027 li
388.062 359.433 li
386.941 358.786 386.381 357.925 386.356 357.02 cv
386.356 357.02 li
386.325 355.881 387.142 354.672 388.77 353.732 cv
421.288 334.958 li
422.887 334.035 424.933 333.562 426.874 333.562 cv
428.481 333.562 430.016 333.887 431.163 334.549 cv
465.1 354.142 li
466.2 354.777 466.76 355.618 466.804 356.505 cv
466.806 356.541 466.807 356.577 466.807 356.613 cv
466.81 357.735 465.992 358.919 464.391 359.843 cv
431.873 378.618 li
430.276 379.54 428.232 380.012 426.293 380.013 cv
426.291 380.013 426.289 380.013 426.287 380.013 cv
426.287 380.013 li
426.519 335.612 mo
424.797 335.637 423.002 336.055 421.588 336.872 cv
391.927 353.996 li
390.442 354.854 389.697 355.956 389.725 356.995 cv
389.748 357.82 390.258 358.606 391.281 359.196 cv
422.236 377.068 li
423.28 377.672 424.68 377.964 426.144 377.964 cv
426.269 377.964 426.394 377.961 426.519 377.957 cv
426.519 335.612 li
level3{
gsave
clp
[141.254 89.4606 -89.4606 141.254 356.235 312.236 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[141.254 89.4606 -89.4606 141.254 356.235 312.236 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
426.144 377.964 mo
424.68 377.964 423.28 377.672 422.236 377.068 cv
391.281 359.196 li
390.258 358.606 389.748 357.82 389.725 356.995 cv
389.697 355.956 390.442 354.854 391.927 353.996 cv
421.588 336.872 li
423.002 336.055 424.797 335.637 426.519 335.612 cv
426.519 377.957 li
426.394 377.961 426.269 377.964 426.144 377.964 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[38.4 0 0 43.68 388.8 71.28 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 80 
/H 91 
/M[80 0 0 -91 0 91 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 80 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 80 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 80 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
r@/I2/1rP.0JP=<1GgsI2`NcW3]fJ'4V'_A5s[h(6UX@47n6*A8PB%V"&2Kb;#O5l;H3Tp!`iB)rE0,(
r`oJ/s'G_4ra>]Ts475%s4IA)r7_2*rnRM/s5*b4r8@V6ro3q;ro=(@s5j1@qrdtBr9=1Fq<R\EjRh4"
r@/+(/1rP.0JP=<1C5lq2E*TT3BB5ar]LcV5X@\&6:4.17Ros>8P)SS9ES!`:Jh!e!E)nq<<?3'=T)A&
>5hb.?!Ue9?iFI4ec+/"fDjM'g&9Y(g]$"-h>c@2hu)F4iVqj9j8S-=jo+?<k5a`Gkks]DlM9c<oAoPu
p&-?R.kE;*0/,+91G^jF2E*TT3]]>br]L6G%R<<G6:+%-7Rfm<84cEHr_*Dg9i"Ua;#sTprD`o"=BPN)
!*fG-!aT)<ra5Y4s4.)!s4@;'s4RD*rS.>,rn[V2rnmY3s5Et:ro="=roO.AqWIh@r9=1Frp0LJo^h/9
g\(Oq-7^St/hSe20etO@1c70M3&ir[4$5Yh5!M:u5sdn*77Ka:7n?3D!)*;b"&2Nd;#X;n;H$Qn<<?6(
=T2G(>$Lu2s'>S1ra>cVrRV##s4IA)rn@>*s4mS/s5*b4rS[\6ro3q;roF(?roX+@r94(CrTa7F!:9LP
rU]+Bg\(Oq-S$\u/hSe20etO@1c70M3&s#\4$5Yi5!M:u5sdn+77Ka:7n?6E9E%Te:/4S]r_W_p;cN`r
"'/K*=T2G(>$Lu2!F9%1?iFF5ebn"ufDjM'g&B_(g]-(-h>c@2hu;R4iVqj9j8S-=jo4E>kPXQAl2BoD
lN$;DoCqnFo\9'=.fLqE/1rP.0JYC>1GgsI2`NfY3]fGe5!D1r5s[h(6q'R77n6-C8k].W#u45k:f1(f
;H$Qo<=2c.=BJ^/>$>-8>QS/9?N"71@/JLTfDaG&g&B_(g]-(-h#Q=1hu;R4iVqj9j8S-=jo4E?kPXQ@
l2BoEli6>DoBGoFo\9$=.fCk]/1rP.0JYC>1GgsI2`NfY3]fGe5!D1r5s[h)6q'R77n6-C8kViO9hnGZ
:f1(f;H$Op<E<.%=BJ^/>$>/0>lS./?iFI3ecOFRfDaG&g&B_(g]-(-h#Q=1huDX4iVqj9j8S-=jo4E@
kPXQ?l2BoFli-8CoAoQ=p#PcG.fCkL/1rP.0etL?1GgsI3&ioZ3]fJf5!D1r5s[h)6q'R77n?3D8kViP
9hnGZ:f73i!`N&ur`0,&=BJ`*=p8,8>[:ZBrEoP3qpkc!rn.8(rn@A+!o)McrS7J1rSRY5r8IY7ro="=
roO.ArTF+Bqs"%Dr9O@Ko^h/9lLj`@r$s?M/hSh41,:XA1c73O3&s#\4$>_j5!M:u5sdq,77Ka:84cEG
92&&S:/4S];>sGp;cHcr<WcE*=BYW,"^>5:?!^k:?i=C1f)OA$fDsV'gA]k+h#?.0hYl=4i8OUmro3q;
roF(?roX4Cr94%Br9F4GrTs1JjRh7#!;67?/M&M,0JP=<1G^jF2`NcW3]]Ad4[)%o5X@_'6UX@47Rp!@
8kM`M9heAX:Japf;?Bcr<W6#$='/R-r`TJ0>[1Q@?N+=1@/\[UfDaD&g&9Y)g\oq,h>c@1hZ2U3iVqj9
j8S-=jo4EAkPXQ@l29iEli$2BoAoPup&$<F/1rS00etL?,r7A92`NcW3]]Ad4[)%o5X@_'6UX@47n6*A
8kM`M9heAX:Japf;?Bcr<W6#$='/R-r`TP2>[1Q@?=.(;@/\[UfDaD&g&9Y)g\oq,h>c@1hZ2U4iVhd8
j8S-=jo4EAkPXQAl29iElhp,AoAoPup&$<T/2&Y10etL?1Gq'L3&ioZ4$5Yh5!B!35lO(O6UXBB7gqp[
8kM`M9heAX:f($g;?Bcr<W6#$='/R-r`TM1>[1Q@?=3S;rmq&"rn%5(rRq8+r7q;-s5*b4s5<k7r8Rb:
rT*t>roX4Cr94(CrTa=Hqs<tHjRh4"r$rR70/#"61,:XA2)[BQ3&s&^4?Yhk5!M@4639MB7K,dY84cD[
91qrQ9hnG[:f73i!`W-!r`0,&=BJ`*=pA29>[:ZB?i+71f)=5#f`0Y'g&Tn*h#?.0hYuF4i;MX4irA';
jSn9?k5OQAkl'cDlMTuFm.p8NoAoPup&$<V/MAb20etL?1c70M3&io[4$5Yh5!D1sr^$ZR6q7/G$qNr^
91qrQ9hnJ\:f73i!)rtu<W6%u=9)M'=p8,8>[:ZBqd9D4rmq&"s4IA)rRq8+r7q;-s5*b4s5<n8qr7Y9
rT*t>roX4Cr94.Er9F4Gqs4=Mo^hkMmI]0+r@8^9/MAb20etL?1c70M3&ir\4$5Yh5!D4tr^$ZR6q7/G
!D#f]9+Xck9hnJ\:f1+g;cH^r<`W<$=9Vi2>$G39"'f,<?i+42@K+jVfDjM'g&B_*g\fk+h>c@2huDX6
iVVX7j8S-<jo4EAkPXQCl29iFlh]rJmI^#8o_\:8p&-BX/1iM.0JP=<1c.'J2`NfY4$,Pf4[)(q62j1P
6UaKD7fc.Qr_!er9heDZ:f("e;c?Xp<E<.%r`B2(>5h_/>[1Q@?i4=3@K+jVfDjM'g&B_*g\oq+h>c@2
huDX6iV_^7j8S-<jo4EAkPXQCl2BoFlhg&KmI^#2o_J1?p&6HZ/1`A+0/,+91GgpG2E*TU3]fDc4Zttn
5XGB9!^oIHr^Qu[9)_Hp9MJ8X:Jakb;H$Ln<)lt#=8l;&=^(f/"C,2;?XN_=s'boXrn%/%s4RD*!o)Jb
s4mP.s5*b4s5<n8r8R_9roF%>roX4Cr94.ErTa=Hqs=@Mo^h/9lh0f@r[Sj;/1iM.0JP==1c.'J2`NfY
4$,Pf4[2.r62j1P6q'TE7fc1Rr_!Ji9hnJ[:f($g;[$-"<E<1&r`B/'rEBD0>[CcErF#V5rmq)#rn.8(
rn@D,rnRG-!8d\3s5<n8rSme9roF+@s5j7Broa4CrosCHr9O7Hs6]IMjRh4"s""("#V@\_0JP==1c-(-
2E3ZV3]fDc4Zu"o5X@_'6UX@47n6*A9)_Hg9MS>Y:Jakcr_ikt<)rp!r`B/(rEBD0>[CcEra>\5rmq,$
rRh/'rn@D,s4mM-!8d\3s5<n8ro3k9roF%>roX4Cr9+.Fs69LIr9O7Hs6]IMjRh4"!%\"!(+h0m0JYC>
1c.'J3&ioZ4$,Pf5!M7s$UI*H6UX@47n6*A9)_Hg9hnGZ:Jakcr_ikt<*'!"r`B/(rEBD0?!^lFra>\5
rmq,$rRh/'rn@D,s4mM-!8d\3s5<n8ro3k9roF(?rT=+Br94.ErTa=Hrp9XNs6]IMjRh4"!%\"!,V:Z&
0JYC>1c.'K3&ioZ4$,Pf5!M7s5sdq+6q'R884Z<E91oO`9hnGZ:Jandr_ikt<*'!""'AZ.>5_Y0>[:ZC
?XR:>@K+gXfDO;$g&B_*g]-(,h>c@1huDX6iVqj8j8J'<jo+?@kPaWCl2BoFlhg&KmJ-;OoAoPup&$?m
/MAb31,:XB1c73O3&s#]4$5Yi5<hD!6:4+.77Kd<84cEH92&&T:/=Y^;,[Bl!E<&!<rQ/&=BSd1rEBJ3
?!^lF?srn@rmh)$r7M&&rn@D,s4mP.s5*_3s5<n8ro3q;r8dk=rT=+Broj:ErTa=Hqs=@Mo^hhLme#9,
r%'EO0/,+91,CaD2E*TT3BB5`4Zttn5<qP%6UO717Rp!?8P2WL9MJ8W:JXea;Z9Sr<)luu<s)Q-=^(f/
!aK#:"C>GB?srn@rmh)$r7M&&rn@D,s4mS/rndY3ro!e7ro3q;r8dk=roX1Broj=Fr9F4Gqs=@Mo^h>>
r:Jb:r%'EO0/,+91,CaE2E*TT3BB5a4Zttn5<qP%6UO717n6*@8P2WL9MJ8W:Jakb;Z9Sr<)luu<s)Q-
=^(f/#@(P??=.&I@/OI5f)OA#f`'S'gAfq-h#?..hYuF3i;V^7irA'9jSn9?k5FKBkl'cDlMTuFm/QJF
oAoQ=p#PfD/0ZZ"0JP=<1GgsI2`NcW3]fGe4[)(p5sdn*6UX@57n?0B9)_Kn9hnGZ:f("e;c?Xp<EB*#
%Tlk:>$G39>[:WA?XI2KrF#_9f)F;"f`'S'gAfq-h#?..hYuF3i;V^7irA'9jSn9?k5FKBkl'cDlMTuF
m/QJFoAoQ/p%%eR/0ZZ"0JP=<1Gq$J2`NcW3]oMf4[)(p5sdn*6UXC67n?0B9)_Kc9hnI_:]aKl;uT`&
<E<1&=BJ^/>$Lu2#$kM@?XI2Kra>k;@b1P1rn.2&rn@D,s4mY1r8.G1rnme8!9*n9s5X%<rT4%@rTF1D
rTX7Fr9O7Hs6]IMjRh7#!;67@+tbQ'0etL@2)R9N3&io[4?Pbi5!M:u6:+%,77Kd;84Z<Fr_*Af:/Cjc
!`;ior_rr!<`f9&"'Jc1>Q.k3?!UcD?XR:@@K0g8fDaG$g&Ke*g]-(/h>H./hu;R6iVhd9j8A!<jo=HA
k5FKBkl'cDlM^&Fm/QJFoAoPup&-EI/M8_20etL@2&\>12`NcW4$5Vg4[)+r5sdn*6UaI77n?0C9E%Td
9hnL`:]XEkrDWhu<`f9&"'Jc1>Q.k5?!UcD?XR8M@K'a7fDjM$g&Ke*g]-(/h>H./hu;R6iVhd9j8J':
jo4E@kPj]Fl2U#GlM^&Fm/QJFoAoPup&-EW/M8_20etOA2)R9N3&ir\4?Pbi5!V@A5sdn*6q'R87n?0C
9E%Td9i"Ra:]XEkrDWet<rH,&=]np4r`f\6?!^lF?smFA@f=pYf_jG&gA]k,h#H4.hYuF3i;_d8ir8!;
jS\-<k5FKBkl'cDlM^&Jm/?;NmI^#2o\9'</0ul"/het61,CaE2)[BQ3'',`4?Yhl5X7V%6:4.07Ros>
8P2WL"ADKa:J^sd!Dueo;up!#rE0)&s',J-#@1YB?XI2K@Js[6fDjM$g&Ke*g]-(/h>Q4/hu;R6iVqj9
j8S-;jo+??kPj]Dl29iFlh]uJmJ6AOoAoPup&?TB/Kuf$0JP==1c7-K2`NfY4$5Vg5!M:t5sdn+6q'R8
7nH9E9E%Td:/=[b:]XHmrDWet=8c5'=^#$6r`fY5?=$uG?srnArR_)%rRq2(rn@G.rn[S1r87M3s5Et:
ro=%>r8mk=rTF1DrTX7FrTj=Hs6]IMq"3tGg\(Rtr[fNN0JG7;1GgsH2E*WV3]fGd4[)(q5X@_(6psI5
7n6-B8kViO9hnJ[r_NVn;uKYr<`f6%"'Jf3>Q.k-?N4@3?iOO4@K9p;fDaG$g&B_)gAp%.h>Z:/hu;R6
iVqj9j8\3=jnn3=kPj]Dl29iFlh]uJmI^#8o_\:8o`-QA/M/S/0JYC>1c7-K2`WlZ4$5Vg5!M:t5sdq,
6q'R884cBF92&#R:/=Y^:f1+hrDWeu=8c5*>$>-7>[1S6?3=PA?t'"C!+Z#[rn.5'rS%8*!8RS0s5*Y1
ro!h8ro3q;s5a.?qr[k?roj=Fr9F7HqX"7Lp%.59q=We@!%e(#/M8_31,:XB2)R9O3B9,^4?Pbj5<qJ"
6:4./77Kd<8P)NI9MJ5V:JXea;,U?l<!$'#=8l;,=^#!5>?kE=ra,V3s'bn9s'u&[rn.5'rS%;+s4mV0
s5*Y1ro!h8ro3q;s5a1@qW@b>roj=Fr9F7HqX"7Lp%.59lh0f@r%0]W0ekF=1GgsH2`NfX3]fGe4[)(q
5XIe)6psI57n?3C8kViP9hnJ[:f1(f;cH^r<E<3#=9hu4>$G39?![G9s'Pe7s'kt;rn%/%s4R>(s4dS/
rn[V2r87J2!9*n9ro=%>roO.AroX.Aroj=Fr9F7HqX"7Lp@I;9g\(Ir#VIhd1,:XB2)POr3&ru[48qAo
5!M:t6:+%-6q'U984cBF92&&S:/=Y^;,L4i<)cjt<``C*=]np3>?b?<?2e.6?XR;N@Uf=Hrn%/%!878'
s4dS/rn[V2r87J2!9*n9ro=%>roO(?r9+%BrojFIr9F7HqX"7Lp@I;9g\(Ir%PKOk1,:XB2)[BQ3B9,^
r]LBJ5<qM$(ICJW6q'U984cBF92&&S:/=Y^;,L4i<;ol!<``E&=oV\*>Q.q-?N4F5@K0g9A,b*ZfDsV%
gAfq-h#?.0hYl@0huMa7ir8!<jSn9=k5=E@kl'cDlM^&Im/HAOmJ$52o\9';/IsHe0ekF=1GgsI2`NfX
3^!C)&jANG5sdn*6psL77n?3C91qrQ#u+/j:Janc;H$Qo<<?3&=T2G*>$>-8ra#M0s'Yk8s'kt;rn%/%
!878's4dS/s5!\2rnmY3s5Eq9ro=%>roO+@r9+"ArTX7FrTj=Hs6]UQi:Pdsr@JO40/51:1,CaF2E*TU
3BKA&4WHXM5s[h(6UX@47n6*A8P;]M9heAY:Janc;H$Qo<<-&#='5H)"'Sl4>lJ"7?=$uH?t!JQ@fBm:
fDjM'g&0S'g]-(/h>Z:1hu)F4iVhd8j8\3>jo4E?kPXQAl29iFlh]uJmJ-;Eo^;A+p&6NS/hSe30etL?
2)[?O3&ru\4T7J`5!VD"6:+%-77Kd;84cEH92&&S:/=Y^;,L4i<;ol!<``E&=T_i2>?q/5s'>n:?smDO
@Uf=Hrn%2&s4RA)rS.A-s5!\2rnm\4ro*h8ro=%>roO.Ar9+"Ar9=.ErTj=Hs6]UQjn/KCg\(Ot&2#Rg
0ekF=1Gq'K2`NfY4$<L*'0\ZI5sdn*77B[97n?3D91qrQ:&[ol:f1(g;cN`r!`iB)r`K>,>$G82>mObC
?XR8M@:E^FA,b'[fE0^Yg&9Y'g]-(/h>Z:1hu;R4iVqj8j8\3>jo4E@kPXQ@l29iFlhg&JmJ-;2o_A+?
p&6NS/hSe30etL@2)[?O3'')^4T7JW5<qM#6:+(/77Kd;84lKI92&&Tr_E\o;,L7j<;ol!='&N'=T_i2
>?q/5#[UhE?smDO@Uf=Hrn%2&s4RD*r7_;.h;&(erndY3ro!b6ro3n:s5a1@roX4Cr94"Ar9F7Hr9XCL
q"*G9lLj`@r[fKM/h\q61,CaE2E!KR3]]>b4Zttn5X@\&6:=727Ros?8kM`L9MJ:]:BaQl;H$Lnr`'#$
='5H)"'Sl4>lJ"2?=$uHra>q=@UinYrn%2&s4RG+qqD,+rn[S1rnmb6r8IY7ro="=roO.Aroa4Cqs"%D
r9O:IrU'COi:Pgt!;6=C-S@#)0ekF>1c70L2`NiZ4$5Yh5!M:u5sdq,77B[97nH<F91qrR:B"#u:f1+h
;cHas<``@)=]t`-"']#9?2e.2?XWkA#%D%OA7X<Drn.8(s4[A)!8RS0rndY3s5<h6ro3q;roF(?s5j=D
roa7Dqs"%Dr9O:Ir9a:Ni:Pdsr[eF//h\q61G^jF2B=\73'')^4?Ykl5<qM#6:4.077Kd<8P2TJ92//V
r_Eu";GpFl<)lt"='&L,=oMS+>?kJ4?3"@2@0U1M@q9-%fDaG&g&Ke'gAp%.h>c@1hZ2U3iVqj:j8J'<
jo4EAkPaWAl29iEli$2Jm/ZSLoAK8qp&6NS/hSe31,C^C2)[?P3'')^4T7MH5<qM#%miWO77B[984cEG
91quS:B"#t;,U:j;cHat<``@)=oDM*>?kJ4?3"@2@K0g9A,t6[f`0Y)gAK_*h#?.0hYl=3i;;L4irA';
jSn9?k5OQBkks]ClMTuGm/65NmeHD3o\9'</J'Ne0/54<1GgsI2`NcX3]fJ'4qU"E5sdn*6q'O67n?3D
8kViPs%`Ph"]8/q;c?Zp<WcE)=BYT+!F&h,?3"C3@0'hIrabrZs4RG+rS.>,rn[V2rSIV5r8IV6s5X(=
roO.Aroa7Dr9=1Fr9O:Ir9aOPq==UXi:Pdsr[e[6/h\t81G^jF2E*TT3]]>cr]V;d5X@_'6UX@37Rp!@
8kM`M9hnGZ:Jand;H$Lor`0)%='5B(!F&k.?3+D@rF#_9A,^$:f`0Y)gATe*h#?.0hYuF4i;MX4irA';
jSn9?k5OQBkl'cDlMTuHm/68MmeHDGo^2;*p&6NS/hSe41,C^C2)dHR3'')_4oRVG5=#37(ILSZ7Rfm=
8P2TJ9MJ8W:Jakb;GpFl<W6##='&Q&=ohi5rE]M3@/XO6A,^$:f`0Y)gA]k*h#?.0hYuF4i;MX4irA';
jSn9?k5OQBkl0iElMTuGm/68MmeHD9o_\:8p&6NS/hSh51,C^C2E*QS3'')_4oRVG5=,98(ILSZ7Rfm=
8P2WK9MJ8W:Jakb;GpFm<W6##='&Q&=ohl6ra#Y5?XWkA!b,YLrac#\s4IA)s4[M-r7q;-s5*b4s5<n8
r8R_9rT*t>roX4CrTO7Fr9F7Hr9X@KrU0IPi:Qj<j7WC'&2#Ui1,:XA1c@9O3&ir\4?`[-!C&mL630GA
r^IMj84cEH92&&T:/=\_;,U:j<)rou!`rK,r)s2-?!^k:?N=L5@00nJA,^$;f`'S(gAfq*g]611h>c@2
huDX6iVhd7j8S-<jo4EAkPaWDl2BoFlhp,ImJZJJoAK9,p$q_S/J'Nf0JYC>1Gq'L2`NcX4$5\*4omo7
r^$WQ7/fXW7n?5N9+4Kg:/=Y^:f1+g;cHcr<WZ?)=oDM,>?kH??N+:9?t!JQ@UipIAGt0[g&Ke+g\fk+
h>c@2huDX6iVhd7j8S-<jo4EAkPaWDl2BoGlhg&HmJZJJoAK8qp&6NM0/#"71,CaE2E*Q%3&iu]4?Ykl
5<qO6630GBr^HrZ84rkS$qsAj:JXe`;,U=k<)rou!`rK,r`TJ0>?kH??N+:9?t!JQ@UipIAGt0[g&Ke+
g\fk+h>c@2huDX6iVqj7j8S-=jo+?@kPaWDl2BoGlhg&HmJZJJoAK8qob]84/h\k31,:XB2)[BP3&s&^
4?Ykl5<qO6630JCr^HrZ84rkS!DH5e:CU,s;,U=k<)lt"='&L,r`TJ0>?kH??N+:9?t!JQ@UipIAGt0[
g&Ke+g\oq+h#Q=1huDX6iVqj7j8S-=jo+?@kPaWDl2BoGlhg&Im/ZPPmeHD3o\9$U/M/S.0/,.:1GgsI
2`E]V4$,Pf5!M7s62j1O6q.)E!_5gSr_!;d9htmf:Jakbr_j,&<E<.%='/U/>5h_.>[:ZBra,h:@:<VS
A,Ts:f`'P(gA]k*h#6%/hYl@3i;V^8iqqd8jSn9>k5OQBkl0iFlM^&Gm/68LmeHD3o\9$Z/M8Y/0/,.:
1GgsI2`E]V4$,Pf5!M7s5sdn*6q.)E!_>mTr_!8c:B"#j:f('h;Z]ou<rQ/&=BSg2r`]A-ra,S2"^kbI
@U`jGAGt0[f`9b*g]$"+h#Q=1huDX6iW%p7j8S-=jo4E@kPj]Dl2BoGlhg&HmJZJJoCMVBo\9'</fHAr
0JYF?1c70M3&io[4$5Yi5<hD!6:4+.7K,aX84cGQ9*%a^r_ESl:f@9k!E<(t<s)Q->$Co0!*oM0ra5Y5
s'kn:rRh,&!8@G,s4mP.s5*_3s5<n8s5Nt:rT*t>roX1Broj=FrTa@Iqs=7JrU0IPjn/KCg\(Ou!\Z2\
r\GHL2)[BQ3&s&^4?Ykm5<qM$6UO717Rfm=8P8tT!DQ>g:BF?i;Z9Sq<)rlu"'A]0>5h_+?2e.3?XI4?
@0'hIr+,cYs4RG+rnIJ.r8%D0rSRY5ro*n:rT!h:roO.ArTF1DrTX:GrTj@Ir9aINq"*G9q"<_@r[n7*
0/3A]!]2bmr\tcU4$,Pf5!M7s5sdq+6q'R77n?3D91qrQ:B"#j:f1-i;ZTiurDru$r`TD.>?kJ5?34J@
@/aR8@Uo=HrRh/'s4[J,s4mS/!8db4rnm_5s5Et:rT!h:roO.ArTF1DrTX:GrTjCJqsF@Mq"*G9lLj`@
r[n7*0/<G^!]2bmr\tcU4$,Sg5!M7s6:+%,6q'R87n?3D92&#R:B"#j;,L6j;ZTm!rDru$r`TD.>?kJ5
?34JA@/aU7A,Tp<Ac:9]g&Ke*g]-(.h>Q40hu;R6iVqg:j8\0;jSe3>k5FKBkl'cElM^&Hm/-2KmeHD3
o\B*>p&6QF0/,-[1BKBj2uYcH3BK>d4[)(p5XIe)6UXBB7h&!\8kViO9hnJ[:f1(fr_iht<rH)"=oMS,
>?kE=ra,S3"CY_J@q5IJ!+l,]s4RG+rnIJ.rn[P0rnm_5s5Et:ro<t<r8mq?rTF1DrTX:GrTjFKqX+7L
q"*G9g\(Ou!\Z5^r\FX52E*T,3&io[4?Yhk5<hG#6:4+.7K,di84cEH9MA/U:JXea;,U=k<)lut<rcD&
>5hb,?2e10?j'nH@UipIAH-6>f`0Y)gA]k,h#H4.hYuF3i;_d8ir8!:jS\-=k5OQBkl'cFl2^,Jli$2H
mJZJJoAK8qp&6QF0JG6\1BKBk2uYcE3BTDe4[)(p5sdn*!^f@Fr^RSl8P2WL9MJ8X:f("d;H$Oo<EB*#
!E`M(>5hb/?!^iEra5k;@U`hWrac%?rn.5's4[J,s4mY1r8.G1ro!h8ro3q;roF"=rT=+BrTO4ErTa@I
rTsILs6]dQq"*G9g\(Ou!\c;_r\FU52E1Up%QZ^74Zttn5X@_'6UO:3r^R2a8P;]M9MJ7p:Jakb;,U=l
<)lt#='/R->$>/0>Q\8<?=3\>#%:tM@q0%[ral)]rn7>*rnIJ.s5!V0rnmb6ro*k9ro="=rT3t>roa7D
rTX:GrTjFKqX+7Lq==UXi:Pds$SF%b0JG4;1GgsI2uYcH3]oMf4[)+r5sdn*6UaKD7hnQe91qrP9hnJ\
:f1(f;cH^r<``@)"B\f1>?h)3"'o5??iFF;@:E\U@q9-LAcLE]g&Ke*g]-(/h>H./huDX6iVqj9j8S-<
jo"9?kPaWCl2BoGli$2HmJZJJoCV\Bo\9$Z/h\k30JP@>1c70M3&ioZ4?Pbi5!VA!6:+%-77R8H)G!In
92&#R:JXe`;,L4i<)cju='&L+=^#$6r`fV4?=.&I@/j[8@fKs<AH$-?f_jG&gA]k,h#H4/hYl@3i;V^7
ir8!;jSn9<k5OQBkl0iElM^&Im/$,JmeHD9o_\:8oc5Y<0/,(71GgpG2E*TT3BB8b4Zu"p5X@_'6UX@4
r^Rku8kVfN9MSAZ:f("d;c?Xp<E<1&=BJ^0>?h)3%:*:I?XR8M@:E\U@q9-LAHLN;g&BY)gATb+h#?./
hYc:2i;V^7ir8!;jSn9<k5OQBkl0iElM^&Im/$,JmeHD3o_J1?p&6TG0JG6\1bppH2`NfX3]oMf5!M:t
5sdn+6q'R87n?3D91qrP:/=Y^:f1+h;cH^r<``@)=BSg3>Q.k1?!^lF@/aR?@U`hWA7T7_B)C6]gATb+
h#?.0h>lF1huDX6iVqj9j8S-=jo"9>kPaWDl29iFli$2HmJZJJoAK9,p$q_S0*3g]1&a!22)[Dm3AW]Y
4?Ykm5X7V%6UX=27Ros>8P2WK9MJ8X:Jakb;H$Ln<)lt#='/R.>$G39>[:WA?XNb?#\%7Q@q9+]AS1hm
!8@D+!8RS0s5*\2ro!e7ro3t<rT*t>r9"%Bs6'@Eros@Grp0LKqX+7Lq"*G9g\(P!!\c;`r\Oa82E*WV
1c[TZ4?Ykm5X7V%6UX=27Rp!?8P2WK9MJ8X:Jakc;H$Ln<*!%$='/U/>$G39>[:WA?XNb?#\%7Q@q9+]
AnLtos4[J,s4mV0s5*_3rS[\6ro3t<rT*t>rT=%@rTO7Fr9F:Ir9X:IrU0IPi:Pdsr\"=,0J`Va!];kq
r](BJ4?Pbj5<qJ"6:4./+@Sai84Z<E91quR:/=Y^;,U:j;cH^s<``@)=^#!5>?q/5!a]5ArF#\8raYt=
rau)]s4[M-rnRM/s5*_3rS[_7rSmk;rT*t>roX.Ar94.Er9F:Ir9X=J!:BaQq"*G9h":[@r\"=,0f&_b
!];nrr](lX4?Yhk5<qJ#6:4./77Kd<84cEH9MJ5V:JVU";,U:j;cHat<``@*=^#!5>?q/5!a]8BrF#\8
raYt=rau,^rn@D,rnRM/s5*b4r8@V6rSmk;roF%>roX.ArTO4Er9F:Ir9X:IrU0IPi:Pjus7ZFF!\lDb
r\O[62`Uds!':*B,X+FX5XIe)6psI67n?0B8kViP9hnJ[;,L4h;c?Xq<`W:(=]tc.s',G-!a]8BrF,Y7
!G#d@B)^K^gAfq,h#?.0hZ)L1i;_d7irA'<jSe3?k5=E?kl'cDlMg,Im/$,JmeHDFo^;A-p&Fab0*3j_
1B'*32E*Vp3<2,>4X`KY5X@_'6UX=27n6*@8P2WL9heAY:f1(f;H$Lo<E<.%=BSd1>$G81>lnA@@/aR7
@Js^9Ac?<@g&9Y)g]$".h>Z:2htu@3iVqj9j8S-<jo=KAkPXQAl29iGlhp,GmJZJJoB#WBo\T9?p'!*&
0JP:;r\O[72`Uds!'C0C-pBj]5sdn*6psL77n?0B91qrQ9hnJ\;,L4h;cHas<`W=)=]np3>?q/5"(#>B
@/aR7@f9g:Ac?<Ag&Ke*gAfq,h#H40hZ)L1i;_d8ir8!;jSe3?k5FK@kl'cDlM^&Hm/$,JmeHD3o_A+C
p&4Rp0/,(70etRB2)[BQ3B9,^r]MYn5=%S%6:4.07Ros>84cHI9MJ5V:Janc;GpFm<E3(#=BJ^/>$>09
r`ob8?XR8M@:E^F@fg1PAc?9Ag&0S'g]$".h>Z72hZ2R3i;V^7ir8!;jSe3?k5OQAkks]ClM^&Hm/$,J
meHD3o]l,Cp&4Rp0/,(70etRC2)[BQ3B9,^r]N&$5X@\&6:4.07Ros>84lNJ9MJ5V:Janc;GpFm<E3($
=BJ^/>$G6:?!UcC?XR8M@:E^F@fg1PAc?9Ag&0S'g]$".h>Z:2hu2L3iVqj:irJ-=jSe3?k5OQBkks]C
lMTuGm/-2JmeHD3o\fE@p&Ogc0FTZj1,LjG2E*TU3]]A%4YT&b5s[h(6UaF57n6*A8kVfN9heDZ:f1(f
;H$Op<E<1'=BSd1>?kE=?!^iE?smFB@fKs<AH-6?B)LB]g]-(.h>c@2hu2L3iVqj:j8J'<jo4EAk5a`F
kl'cDlMKoFm/-2KmJu_NoAK9!p&+O_0F9Hg1,LjG2E*TV!]iA(r]M\p5X@\&6:=727Ros>8P2WK9MJ8X
:Janc;GpFm<E3($=BJ^/>$G6:?2e.4?XR8MraPn;s().@rau,_r7h8,rn[V2rnm_5r8IY7s5X(=roO.A
roa:Er9=.Es6KXLr9X@Kr9aRRq"*G9iV!*Ar\+U40f(XD2)[BQr]1EK4Zttn5X@\&6:=6c77Kd;8P)NI
92&&T:JXea;,U:j<)lt"='/R->$>-8>[@>8"(,GD@K'a9A,g*>Ac?<?gAK_*h#?.0hYuF3i;MX5irA';
jSn9?k5OQCkl'cDlMBiFm/65NmeuSRn+cM4o]#Q?pAQ`O0ekI@2)R9N3W;&W4$>_j5<qM#6:4.077Kd;
8P)NI92&)U:JV0k;,L4h;cN`s$!152=^#!5>[1S6?3=PB?t'%Ds'u(>s(21Arn@8(s4mV0s5*b4s5<h6
rSmk;rT*t>roX4Croj=FrTa7Fr9X@KrU0[Rq==UXi:Q%%qY'nB#Ve(j1c7-K2`^ju)`p2H5!M:u5sdq,
77B[984cBF91quS:/=Y^;>sGo;cN`s"'8T,=p8)5>?kH>ra#b8?smDP@fBm;AH-6?B)^N]g]-(.h>c@2
huDX5iV_^8j8J'<jo=KAkPj]Dl2BoElhp,ImJQDOn+cMHo^2;2p%e=\0F0Eh1GgsH2E3_r3WM8@4r-@J
5s[h)6q'O67n?3C8kVfO:/4S\;#O8m;cWft!`rK+r`T;+ra#M0"CGPE@:B4GraQ"?A7b^Orn@;)rnRP0
rndY3s5<n8r8R_9rT*t>s5s:Croj=Frp'@GrTsILr9jOPq"*Y?qt/tBq"F\@#Vn.k1c7-L3'$t!!'C0D
(-b&M6:+%-77B[984cBF92&&T:/=Y^rDEYq<W6##='/W)=o_e+?2e10?ia\FrF5n>A7b^Orn@;)rnRP0
rndY3s5<n8r8R_9roF%>s5s:Croj=Frp'CHr9X@Kr9jOPq"*G9q=X+Iq">(L0JP=<1GgsH2`Nhs3WM;A
4r-@J5sdn*6q'O67n?3C8kViP:/4S\;>jAn<)rou!`rN-r`T;,ra#M0ra5_7r+#b;r+>r^rS.;+s5!\2
!8de6ro!e7rSme9roF%>s5s=DrTO4Erp'FIr9X@Kr9jLOq"*G9lh1/Jp\#+O0JP=<1GgsI2`NfY3]fJ'
4oml5r^%2a6q'R77n?3C8kViP:/4S];>sGp;cHcr<WZ?*=oMS)>lJ"1?=%"<?iXX5@f^+OrFQ%Brn@A+
r7q>.rnd\4ro!e7ro3k9roF%>s5s=Droa@GrTX=Hr9O:IrU'ONqsX=Oi:Q1)p@\qL0ekF=1Gh!J2`NfY
3WV<)r]U?I62j1_6UX@47Rp!@8P2WL9hnGZ:f73i!`N&ur`05*=]np3>?q/5!a]5@ra5_8r*ob<Ac63@
BE$Wag\fk,h>Z:2hu;R5iVqj7j8S-=jo4EAkPaWCl2KuGlN$;Nm/68KmecJJoAT?'p%J+Y0aofm1Gh!J
2`NfY4$,S(4oml6r^$]S6q0Wd7Rp!@8P2WL9hnGZ:f1+g;c?Xq<`W:(=]np4>?q/5!a]5@ra5_8r+#b<
rau1Crn@A+rS7D.rnd\4ro!e7s5Nq9roF+@rT=+BrTO4Erp'FIrTsLMqsFIQr9sFPiUl:*p%JA>$o0Ro
2)[?O3&s#]4$<L+!C/sM630GAr^I;d84cEG92&&T:JXea!)iep$WL,,<``C+=^#$6>lJ%.?NX\D@:K1F
"Cu(TAnM$Trn@A+rnRJ.rnd\4ro!e7s5Nq9roF+@rT=+BrTO7FrTa=HrTsLMqsO@Mq"*M;jn8<?r\5!?
1,LjH2E*TU3]fDc5!D1r62j1O6UguD!Co][8dJ'`9hnJ[:f1-i;[HE'<``@)=]np4"C#,:?!dM;"(5PG
@f9d>A7]=aB)ZHBgA]k+h#6(.hZ)L5i;MX7ir%j8jT"??k5OQBkl0iFlMTuHm/?>KmecJJoCMVEo]>c<
pAQcY1,:[D2E!KR3]]>a4?bqn5XGB9!CTBU7KH"Mr^m5b9MPL^!DlYl;[uc,<``@)=]np4>?kH>?N+:8
?t!JQ@q,^QA7T7_AnM$Trn@A+s4mP.rnd\4s5<k7s5Nt:rT+"?roX1BrTO7FrTa=HrTsLMqsO@Mq=E\>
s7GIHoCd\~>

%%EndBinary
grestore
np
324.207 275.833 mo
404.175 322.003 li
375.096 338.792 li
294.893 292.487 li
324.207 275.833 li
cp
level3{
gsave
clp
[-142.121 -81.6545 81.6545 -142.121 375.226 322.006 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-142.121 -81.6545 81.6545 -142.121 375.226 322.006 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
375.096 339.944 mo
375.096 338.792 li
404.175 322.003 li
404.175 323.155 li
375.096 339.944 li
cp
level3{
gsave
clp
[29.0793 0 0 29.0793 375.096 330.973 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.345098 .94902 .913725 ]
/C1 [.0784314 .643137 .858824 ]
/N 1.60608 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[29.0793 0 0 29.0793 375.096 330.973 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~',2,q'c%Q#(Ddo*)&X;1)B0V7*#ot>*?H7D+!2UJ+X&!Q+sS<W,U=Z^,pjrc-RU;j-n-So.Olnu.kE5&
/M/P,/hSe10/,(70ekF=1,C^B1c.$H2)R9M2E*QR3&ilW3B9)\3]]>a4$5Vf4Ztqk5!D.p5<h@t5X7V$
5s[h(6:4+-6UX=16q'O577Ka97Ros=7n?0A84cBE8P2TI8kVfM91qrP9MA/T9he>W:/4PZ:JXb^:Jaka
:f("d;,L1f;GpCj;GpFl;c?Un;cH^q<)cgr<E3%!<E3%!<`W7%<`W7%<`W:'='&I)='&I)='&I)='&I)
~>
<~Unjf_V5C,fVl6PnWN)u!X/rD)Xfeh0YHP17Z*CU?Za7!F['d<M[^W`T\@B)[]"5Jb]=bei]tM.o^V@S"
^qmk(_SX4.`5KU5`Q#p;a2c9BaN;QGb0%oNbKS2Sc-=PZcHjh_d*U.edF$Cje'ldqeC<%!e^i=&f@SX,
f\"m1g"G*5g=tB:gt^]@h;-oDhVR/Ihr!AMi8NYRiSrkVioB(Zj5f:^jQ5LbjlY^fk3(pjkNM-nkih9q
l07KulK[[#lg*m&lg4!)m-O-,mHs<.mdBN2mdBN3n*f`6n*fc8nF5r:nF5r:naZ/>naZ/>naZ/>naZ/>
~>
<~gY:K;gY:K;gY:K;gt^]?gt^]?gt^]?h;-oCh;-oCh;-oChVR,GhVR,GhVR,GhV[5Jhr!>Khr!>Khr!AM
i8EPOi8EPOi8EPOiSibSiSibSiSibSiSieUio8tWio8tWio8tWioB(Zj5]1[j5]1[j5]1[j5]4]jQ,C_
jQ,C_jQ,C_jQ,C`jlPUcjlPUcjlPUcjlPUcjlPXek2tggk2tggk2tggk2tggk2tggkND$kkND$kkND$k
kND$kkND$kkND$kkND$lkih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6o
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
294.893 292.487 mo
294.893 293.91 li
375.096 339.944 li
375.096 338.792 li
294.893 292.487 li
cp
level3{
gsave
clp
[131.011 76.8221 -76.8221 131.011 237.851 259.388 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[131.011 76.8221 -76.8221 131.011 237.851 259.388 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
386.386 315.63 mo
397.751 322.191 li
393.619 324.577 li
382.22 317.997 li
386.386 315.63 li
cp
373.875 308.449 mo
385.24 315.011 li
381.108 317.397 li
369.709 310.816 li
373.875 308.449 li
cp
361.365 301.268 mo
372.73 307.83 li
368.597 310.216 li
357.198 303.635 li
361.365 301.268 li
cp
348.854 294.087 mo
360.219 300.649 li
356.086 303.035 li
344.688 296.454 li
348.854 294.087 li
cp
336.343 286.907 mo
347.708 293.468 li
343.575 295.854 li
332.177 289.273 li
336.343 286.907 li
cp
323.832 279.726 mo
335.197 286.288 li
331.064 288.674 li
319.666 282.093 li
323.832 279.726 li
cp
368.176 311.444 mo
379.541 318.006 li
375.408 320.392 li
364.01 313.811 li
368.176 311.444 li
cp
355.665 304.263 mo
367.03 310.825 li
362.898 313.211 li
351.499 306.63 li
355.665 304.263 li
cp
343.154 297.082 mo
354.52 303.644 li
350.387 306.03 li
338.988 299.449 li
343.154 297.082 li
cp
330.644 289.902 mo
342.009 296.463 li
337.876 298.849 li
326.478 292.268 li
330.644 289.902 li
cp
318.133 282.721 mo
329.498 289.282 li
325.365 291.668 li
313.967 285.088 li
318.133 282.721 li
cp
374.988 321.62 mo
386.353 328.181 li
382.22 330.567 li
370.822 323.986 li
374.988 321.62 li
cp
362.477 314.439 mo
373.842 321 li
369.709 323.387 li
358.311 316.806 li
362.477 314.439 li
cp
349.966 307.258 mo
361.331 313.82 li
357.198 316.206 li
345.8 309.625 li
349.966 307.258 li
cp
337.455 300.077 mo
348.82 306.639 li
344.688 309.025 li
333.289 302.444 li
337.455 300.077 li
cp
324.944 292.896 mo
336.309 299.458 li
332.177 301.844 li
320.778 295.263 li
324.944 292.896 li
cp
312.434 285.716 mo
323.799 292.277 li
319.666 294.663 li
308.267 288.083 li
312.434 285.716 li
cp
369.289 324.615 mo
380.654 331.176 li
376.521 333.562 li
365.122 326.981 li
369.289 324.615 li
cp
356.778 317.434 mo
368.143 323.995 li
364.01 326.381 li
352.612 319.801 li
356.778 317.434 li
cp
319.245 295.891 mo
330.61 302.453 li
326.478 304.839 li
315.079 298.258 li
319.245 295.891 li
cp
306.734 288.711 mo
318.099 295.272 li
313.967 297.658 li
302.568 291.077 li
306.734 288.711 li
cp
327.59 305.439 mo
351.499 319.201 li
355.632 316.815 li
331.756 303.072 li
327.59 305.439 li
cp
380.687 318.625 mo
392.052 325.186 li
387.919 327.572 li
376.521 320.991 li
380.687 318.625 li
cp
level3{
gsave
clp
[-96.6472 -53.5277 53.5277 -96.6472 422.379 346.633 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-96.6472 -53.5277 53.5277 -96.6472 422.379 346.633 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
507.242 313.394 mo
490.464 303.824 li
462.848 287.447 li
462.348 287.15 li
420.791 262.506 li
420.791 251.26 li
418.722 250.056 li
381.202 228.403 li
381.205 239.031 li
307.211 195.151 li
306.108 183.792 li
509.317 301.114 li
509.317 184.525 li
509.317 180.487 506.861 175.795 503.832 174.047 cv
310.667 62.5223 li
309.893 62.0756 309.157 61.8642 308.489 61.8642 cv
308.032 61.8642 307.607 61.9635 307.224 62.1545 cv
312.09 59.2264 li
312.099 59.2316 li
312.541 58.9564 313.046 58.8113 313.599 58.8113 cv
314.262 58.8113 314.994 59.0204 315.763 59.4645 cv
508.929 170.989 li
511.958 172.737 514.413 177.429 514.413 181.467 cv
514.413 305.809 li
514.413 308.151 513.584 309.752 512.299 310.349 cv
512.299 310.354 li
507.242 313.394 li
level3{
gsave
clp
[-173.965 -100.612 100.612 -173.965 552.348 267.857 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-173.965 -100.612 100.612 -173.965 552.348 267.857 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
391.099 302.688 mo
351.543 279.745 li
351.543 277.445 li
391.099 300.341 li
414.84 286.403 li
417.245 284.991 418.722 282.411 418.722 279.622 cv
418.722 269.565 li
418.722 261.41 li
418.722 250.056 li
420.791 251.26 li
420.791 262.506 li
420.791 281.006 li
420.791 283.815 419.292 286.41 416.859 287.815 cv
391.099 302.688 li
level3{
gsave
clp
[-46.9193 -30.7288 30.7288 -46.9193 421.174 288.43 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-46.9193 -30.7288 30.7288 -46.9193 421.174 288.43 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
391.099 300.341 mo
351.543 277.445 li
376.191 263.24 li
379.297 261.45 381.211 258.138 381.21 254.553 cv
381.208 248.206 li
418.722 269.565 li
418.722 279.622 li
418.722 282.411 417.245 284.991 414.84 286.403 cv
391.099 300.341 li
418.722 261.41 mo
381.205 239.773 li
381.205 239.844 li
381.205 239.031 li
381.202 228.403 li
418.722 250.056 li
418.722 261.41 li
level3{
gsave
clp
[-28.7869 49.9643 -49.9643 -28.7869 400.627 252.692 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0784314 .643137 .858824 ]
/C1 [.345098 .94902 .913725 ]
/N 1.49438 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0784314 .643137 .858824 ]
/C1 [.345098 .94902 .913725 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.345098 .94902 .913725 ]
/C1 [.345098 .94902 .913725 ]
/N 1 
>>
]
/Bounds [.329897 .64433 ]
/Encode [1 0 0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-28.7869 49.9643 -49.9643 -28.7869 400.627 252.692 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~=&r=#;c6Ff:/+DT8k;HA779L05sRXu4Zkee3B/rU2)I*E0eb75/hJV).Ocbo-RL,c,U4KW+WqjK*Zc=A
*#fh8)&X8.(Ddi&()7Q!'GM5q'GM8t()If*)B0Y9*?H:F+X&$S,UFcb-R^Dn.kE5'/h\n51,:XB2)[BP
3&s#]4?Yhk5<qM$6:4.07Ros>8P2WL9heAY:f1+g;cHat='/R,=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-
=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-
~>
<~o'l,8m-Ep"kN1dbio&_NgtUQ9f[eU&e'cXicHXSVb/q`F`l,d3_8*h"]tM(j]",>[[^EKLZa-j?Yck44
XfSV)WiE%tW2HPjVP^2dUnjf^UnjiaVl6SpX/rG+YHY:;Za@-J[^WcW]">Vg^;%J"_Sa=2`lH0Bb0/#R
cHjkbdaQ^qe^i@)g"P39h;7&IiSrnYjlYail0@U$mI'H4nac8Ao()ABo()ABo()ABo()ABo()ABo()AB
o()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()AB
~>
<~l0.?pki_-lkN:phk2k^djlPRajQ,@]j5]1Zio8tWiSibSiS`YPi8EPNhr!>KhVR,GhVR,Fh;-oCh;-lA
gt^]?gt^]>gY:K;gY:K;gY:K;gY:K;gY:K<gt^]?h;-oCh;-rEhVR,Ghr!>Khr!AMi8EPPiSibSiSrkV
io8tXj5]1[j5f:^jQ,FajlPUck2tggk2tjikND$kkih6okiq?rl07Hsl07Hsl07Hsl07Hsl07Hsl07Hs
l07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hs
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
381.208 248.206 mo
381.205 248.204 li
381.205 239.844 li
381.208 248.206 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[1.44 0 0 10.08 380.64 200.88 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 21 
/M[3 0 0 -21 0 21 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i
~>
<~)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M5)B'P6)]K_8)]K^
~>
<~AS#FaAS#FaAS#F`AS#C`ARo@_A7]:^A7T4]A7T4]A7T4]A7T4]A7T7^A7]=`AS#FaAS#FaAS#FaAS#E
~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
418.722 269.565 mo
381.208 248.206 li
381.205 239.844 li
381.205 239.773 li
418.722 261.41 li
418.722 269.565 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[38.88 0 0 31.2 380.64 179.76 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 81 
/H 65 
/M[81 0 0 -65 0 65 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 81 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 81 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 81 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
YQrXIhOLgkp'827aIMLbYfQ,8`Ws2IoUN/,i!7X7ZCLrbYfP?"g]t'RprL"eap7)7!1U6`mE!5e^Ba<7
!h#LHZ^_$9j2fQf!!]h9r<N@is-g<brl<a6g;j:"#-nI6Qi<?RR[TbUS,gS-a3huia8cFL#7$N[Q^F2/
R[a&A_OUVFrl<(#nAtS5ZNgf$Q'I]&R$jA2S*lfkSGgJ+a1fXlaSc=M#7?ZYPa.N#Q^O82RcL!kSGU>)
a1B@i"onk9#7QcYPE_;sQC!u,R[]c#SE$.8`r3rjaSZ5D#6kD.#J^QROcbfiPE_;sQC!u,R[_]pm[X<r
q8WES]u^$S!XAo6n-@,A&!)g7OckomQ'R]%Q^O81S&h,qS-$^L`VIOPa1o^j#36$?#QBbqOcbfiPE_>u
QC!r+R@B\:S]%$"`Q#mu`l7bnrPuaqpBK=Vi<L$UNfT6_OcbijPE_>uQ^=)-R[]fGS]@9#`Uq1Ka2?!k
#2][B#8N5XNfK0^OHGZhPE_;sQC!u+R@9V8rgh0$rPeWQqo8WU`5qWV!XAo6ed(FE(Q463NK0$\OHGZg
PE_;sQBmo*R@0M5SGf#&S,gM*`V%7La2Z3m"p,#6#0dDF#QBVrNK&sYO-#HdOckomQ'IZ$R$a>1S"'>H
cCFmPr5J?KrQ"]SdE(k__$:qb#Dn=rMi<XTNfK0^OckijPE_>uQC!u,R[T_9qjl-)r5AQQoZ$jMn&X;*
n-6]6reUf9Mi<USNWkH(O-#Kerf[\SQ'[f'R$jD4S"0AHe"$HUr5AQQou?sNjiHW+mfpW6$\sOpM2I4L
N/`gWNrG+CP*2#nPR!J>Q^=),R[X5GqOQ3-rPSTPr5JKO!6>)YrQ!^7o#Le7nHK%""pW!N!/LQ0!Ju^5
MuJ\:NfX1$#Ek76Pa%H!Qi<?RR[T`HSG8Z.S,gG(_u7OP`V@IQa8a0Xa4&-.aSlA5"p,#6#5/9%#grqi
L51P?Ll$tGMi3ORNK0$[OHKO*%@!*BQ'Rc(R@0M5S=Q8JSH,58S-$UG_YqCM`;R[M`rF*Z`r3s*aSlAA
#4i$##6tJ,#65%Z#:,"XL51P?M2I.IMi<USNfT3]OHG]hPE_>uQ'[i)R@0M5S=Q8HSbel<SG:#"`;R[N
`qd['aSZ56#5e\s#QG(]#6BL3reCE.'8_U'Mi3ORNK0'\OH>TfPEV5rQN!3SR@0P5S=KSMq47&Gn=0Kq
r5/NQrPSTPr5JKOq8_"+q??Eo!=&i,#PSK&#hfLbKS5'YL'<?gLl%"Hrego<NK&sZrf@YQP*;,pQ'Rc'
R$jD4S"-#JT(nl@SGSiU_Yh=O`;[[Q`;R[M`r3pXaSs62aSQ,A"pOQ%n-Amtg]mq6K7nsXL*;>-LkpnF
MMmFONK&sYO-#KdP*2#nPa.Q$R$a;1S"-">rLWhUjdc7cr58QQs24cQrPeTPr5Sl[a2cfQq$$6lo*5=&
#7(/4r<M?f"bMA[KnP0ZL'*3dLl)+g"H/4tNK*pu&s/6=P*;,pQBml)R$sG3S"-%?r1<_TkaVXhr5/BL
rPS]RrP\WQq8WBRrl>)[fuWmko*,7$#6sc)!XK&:r!;p"mKY7oJqJ]/KnP/7LPCS?Ll%"HMi<USNK0']
OHGZgP*;,pQBml)R$sG4S"6,IT(nlBSGpA&_Yh=M_uR^R`;IUM`r3s0aS5o?"pP8&"p,#7#4i'$#RC\4
#j_fl#69>SJd$d[KS>,7reCZ5Ll$tGMuJY?NfB'[OH>Terf[bTQ'Rc'R$jD4S"-%?qO[MRm@=-kqni9K
rPS]TrP\ZRpr3<Srl<^5p'(!k!=&hu#P\Se#QB8UK7edTKER!`L51Q`L]`KjMMqImrf.,COHGZgrf[_S
Q'Rc'R$jD4S"-&FT(nlGSGpD)_>M1J_u.FQ`VmaR`VIOOa8X-]aiVW_aRfZ,#4`!##R:V.#jDQsJ:N3&
K)UB&K`6Z*LAlu-L_P`)MMmFQNK0$[OH>TfP*;,qPa7X7Qj&qIS"-">pn%;Pnso`rrPJTNr5/BLr5AWS
s2=iSq8WBRs2b5]s2j9AoE>7""nMrg#6G/9#PAAh#Q9/WJV&K+K7npWK`Hl,L]3,<MMm@NN/`jXO-#Hc
rfRGKPa.K!QN!6TR[T_9SXoPIpmq)JrPAHLs2"WMr58HNrl"lUr5JKOrQ"lXrlP,[l,`E!nHSLg!XK&:
oa'sj!.Xrt!ePuTre(6(s+UH-s+p]3!fDknreqYQNfK0^OHG]hP`q>sQBml)R@9S6S"6,DT)"rOSG^4r
_Yh=M`;RXT`;R[M`r3sVaSs<RaRmRE"T\f2o*,4##4Vp"#RC\-#k80!J,XruJc:6&K7npWK`Hl,LB*/0
M$SurMi<XSNK0&1O-#KdP*;,oQ'IZ%Q^F20rgNt[SY,VIq47AP!5SKJp;6aFr5ABLq8WBRrQ+oYm)]4J
rrhlr!<r`!"p"r5oEPC&#Oi#j#6K@(J,FftJV*lRs+LE+s+^N.",MejMZ/MDN/`gWNfT9`OcklkPa.LB
Q'[i)R$jD4S"-%@TD"lOSc,)X_#(tF_>qLP_Yh=L`;RXT`r3mP`r3sVaSX*HaSc8>"o&8j#4i'$#RC\(
#keK2IXcfrIt3'#J:W9'rdt3(re1E.L55ba%>ft"Mi3ORNK0$[OHGY(OpmP=Q'IZ%Q^O50R[]fMS=Q7D
TD"lPSc>5[_>h=I_>D(L_u7IM_u.IO`W*sW`VIOPa8O*Vam[=K"S)`f"p"r5nd"Lep]peIrdXot"G),U
K7a)T!/1?*",;SdM#N55MMd=Nrf%/CNfT9aOckn,PRNhCQC!u,R@9S7S=Q5MTDbAXT)"rU_>h=J_>D+K
_u@ON_u7OO`W*sX`V@IOa8O*Uan!OL"S2fk#5e\p#O;Zm#692NIK4lqJ-(:RK)UB&K`-T)LAlr.M#N55
MMmCOrf-o<s,m;DrfdhWQC!r*R@9S6S=H1ArL`eT!1j(ZqS<0Iqn`0HrPJWPr58HNr5JZT!6+cRrQ"lX
q8r9Mq?-g&"S;lf#5nf$#6G/:#O2To#QB,SIXZcqJ,Xs$JUi<'K)UB&K`6Z*LAlu.M#N58Mi3OQNK0%u
Ntd_=P*;)oQ'IZ$R$X5/R[T_9SXuGNTD+rVSc?M'_#hHh_#(tF_Yq@P_Yh=L`;R[I`r3sVaS<mOaS5o0
"nDli#6>)8!!hZm!!iINrdFouJ:IQKrdb'$rIY*'re1?,reCT4Ll%#gM[#-"NK0'\OT(CAP6I29QBml)
rg<qZS"-">T)5/RT)HJ$_#V@L_>M1D_u.IO`Uq1Ka8O*Sana$O"S2fg#4i'$#RC\2#k/,tIK+cqJ,Ffu
JV&LPK)gT'Ka3?fLkpnFM2M:jrf%hVO,oBbOckolQ'@Q"QC!u,R@9V7SXc:CTV24Tq4@K!qS<0Kr5&9I
rPSKLrP\WQou?pMrlFfTr5eR7nceXi!=&i##OMfo#lB#RIXZcrJ:IQKrdb'$re(6(re1?,reCQ2Ll)+g
!fN"rrf%hVO-#HcP*2#mQ'@T#Q^F/.R[T_9SXl@DTV24Tqjmf(qnW$Ds2+`Nqni9Ks2=oSrl"iTr5J?K
rQ"lXou[6ToE=aho*,4##4i)a#QT8NIK+`qIf=ipJ,k0"K)UB&K`-T)LAlr5Ll$tGMMmFPrf-o<#EY%0
P*;)oQ2['NQ^F0>RK]1NSXuFFrh01]rgs))r4r-ErkeZNqni9Ks2=oSr5AQQrl4]PrQ"lXouZh/nHJRi
!=&i$#NuEnI/A?jIfFosJ-:CQJUrFNK)gT(KaEKgLPU_BMM[4Kreq#@NK0'\OT(@UP*;)oQ'R`&R$a;1
S",t=SXuFFrh01]!hR3CrPAEIqSE-Irk\NLqnrEOs24cQrPeHL!64uXrQ+`Tnc\Rg!X8i4o`jslnd,7%
qZm1LqgJElrdXlsrIFs#rdt3($A=(dL4tD;LPUeDre^]6rf$i:(lsc?OcbfjPE_>tQC!r*R$jD4S=H.@
T:c%Srh'2*qn`6HqSE*H!5\QLqnrBN!5ncRr5J?Kr5\fX!6P&Ync\Leo*4gl!XK&:nd,7%r<W7Jr-nWp
r.+furdt-%!/1?*!euGbreLi:M2I1KMi<XTrf.,COHGZgrfd>H%%!<JR$jD3S"-%?StGnQ!2'2)qn`9I
q8*!G!5\QLr589IrPeQOs2Y/ZrQ"lXqT8^>o*"[hnHSUj!XK&:o`tU*#RLD9"pfX+I=6QmrI+csIf4cn
J-(:RK)L?%K`6Z,L51Q`L]E;2M?JirN/`etNfX1$(QjiCPE_;sQ'Rc'R$a;1S"#q=St;RIU&L_]_"tnI
_"kh>_Yh=L_uRdT`;R[M`rF*Z`r3sVaSa0K"S2ff#4i)j#QtG>#RLh:I0>"JI=?VCIK=qIrI=cr"+c&T
K)C6%KnTGZ!euJcreUQ2!/pi8#*"Y'O-#HcrfRYQPa%H!Q^=)-R@9TDS-Y^XT:_dMTu"SA_"tnI_"tnE
_>qLO_Y_7K_uRdU`;IUL`r=!Y`r3sVaSs<T"S`,k"n`'##6sf*!=/r'#Qb;<#lY/1J,arkIf"WnJ-1@S
K7a)Ts+LB*!euJbreUT2s,-i7req#?NfT6_O:787P*;,pQ'IZ%Q^F3?Rf8f[St;UIU&;b)_"b_G_"tnE
_Z.OP_Yh=L`;[aU`;IUL`qd[SaT'BJ"SDri"p"r5o`t$n#mgkD$%d\WIXZ_?If+ZtJ:E*"rdb'$r.G$&
s+UK-s+gW1s,$`4s,6o9rf.2DO-#KeP*>m0!g]+<%@<HLR@9V7S=Q4BT:j'u_>M+D_#V@K_>D+K_u@ON
_u.IP`W*mT`V@IO`rO3[a8O*Z"mZ<d"o\\s#5&3%#RBo+#mgokJqAN&Isuh@If=ftJ:IQK"G),UJV*lR
!ec2Zre1E.L55bas,$`4#)eG!NK0$[rf@bTP*2#nQ'IZ$Q^=)-R@9V7S=T\OrkeNJrP83E!5eWLqSN6L
rkeTNr5AQQ!6"iTpr<9Q!6G/[s2b-Bm0*%bq?Hd#oEXml#RQ6>KS"f,It.0@rdP-&It3*#JV!fPrdt9*
KnTGZ!euJcreLr=MMd=MN/WaUNfT8#O9^r3PEV5rQ'VE9#FV$KS"#t=Sc-G'_>_:L_"bbG_Yh7I_Yh:O
_Y_7K`;RXT`r3mO`r3p\aN2EB#5eYm"S;lh#6"l&#6>)8o*>U.Lkg_<KS+i+rI5B-IXcfqIsulrIt3$!
JUi<&rIY$$s+LB*!euDarJ1H1re^]6repr=NK0)!O91Q-P5^[SQ'R`&R$a;1R[]e;`;ILI_>h=M_>;"J
_Yh7I_Yh:O_Yh=L`;IRS`r3mP`r3sWaSlDA"muNc"nMrk#6>)8oEYb\Lkpe>KnFu.JGalsIf4`uIXclt
rdb!!r.=s$re19)!euJcreUT2s,-i7req&AO,f9_OHKO*!gJt7rg!bUR$jA2S"'Dq!5ncPpV?jFpqcsH
!5e]Nqni'Er5ANPs2P)Xpr<9Q!QYNE#5eYm"S;li#4r/q#lP#:N/NRLLkg\<K7\]*pO<<rIt3$!rdb*%
Jc(*$K7npVL&Zo-L]3)0M>iA<N/NXSNK0'[OT(@OP*;)oQ'IZ$Q^F/.R[X2nrkn`PpV?jFpqcpGrk\NL
s2+KIr5ANPs2P)Xpr<<Rrs/H+r<;QkoEFsn!=&i&#6>)8o`tb^Nf8mRM22@kKnY23JUmQG"+YlOJ,Xut
Jc(-!KE$W)L&H`+L]3)5M2@+JMi@Uo"-/G(OT(@IPEV5qQ'R`&rg3_T`Vd[R_uIU?_>M1M_>D+H_uI[R
_u.IO`VmdV`V@FQa8H8@#5n_o"S2fj"p"r5p':6r&Wr08Nf8mSLkpe>KnFu.J:E%RJ:E'!J:E*!rdY'$
J:[TLs+C<(re1E.L55_`!Ju^4MZA_8N<YE'O-#HcOoCRDPm3P@Q^F2[`V[UP_Z7RI_#V@J_>;"K_>D+H
_u@US_u.FQ`VmdJ`W-;B#Q4l)"nDcs"U+B"p'1-opBVOuOcYZbNJrdQLkg_=KS+l-J:N-"It.?G!J,e#
Jc10'K7\`.K`$N*L51Q`L]WEiMZ/P6N;eh9NrtK+Oco^-rg!JLs2P)Xr5ANN!5eHGs2+WKqSE6Kqni6J
rl"iSr5ANPr5SWRrWrE,r<E0'nc\IdpBL3op]q_%P`q5kO,f3YMi*@HLP:D6Jq8H&It3'!qgeTqrIY$$
s+LB*"GVVbLPPkb!f;bkregl<N/`ksNsh&3OcklkPa%GuQC%Qis2FoSqnr-Ds2+WKqSE6Mqni9Kr58TQ
r5ANPpr<=?rWiK0rWi?*r<;]once^koEY0t'UP,NP`q5lO,f3YMi*@HLP:D7JV!`L!.XlrrIOs"#(qM[
KS5&4re1?,s+gT0#Dn7nMMd=NN;ee:NrG+=OU.,5PE_>tQH.&D`W4!U`;ILQ_Y:nF_Y_1G_>qLO_Y_7K
_uR^Q`;R[N`r-5B#lY),"onl,"n;`e"n`)n#6>)8qZmn)R$a2)P`q8mO,f3YMM[1FL5(A6rdb3&JUi9%
r.+]rrdk6)KS+sUL&Zo-L]3)3M2I1K!fMtqrJ^o>O-#J&OT^i3PE_C3a8EsS`;IOQ_YCtF_Yq=H_Z.OP
_Y_7K_uRdT`;IUO`r?DE$2k/.#Q4l*"oJN!"9AZ/oEFmloEY7!+.SghR@'8)P`h/jO,]-XMMd4FLP:D6
Jq8K'JUr?&JGOirJc^RVKDpQ'K`m-aL5(K_L]WEiMZ&G5N;ee<NfT5+OH>TfP*;,or5\]S!6+oTqnrEM
q8*!GrPA<Hs24fPqnr?M!6+oTr5JWSJ,~>

%%EndBinary
grestore
np
503.832 313.013 mo
310.667 201.488 li
307.638 199.74 305.182 195.048 305.182 191.01 cv
305.182 183.016 li
509.317 300.872 li
509.317 308.867 li
509.317 312.905 506.861 314.761 503.832 313.013 cv
cp
level3{
gsave
clp
[153.301 87.9987 -87.9987 153.301 354.352 219.223 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[153.301 87.9987 -87.9987 153.301 354.352 219.223 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
509.317 301.114 mo
305.182 183.257 li
305.182 66.6684 li
305.182 62.6298 307.638 60.7735 310.667 62.5223 cv
503.832 174.047 li
506.861 175.795 509.317 180.487 509.317 184.525 cv
509.317 301.114 li
.0901961 .0470588 .164706 rgb
f
263.689 218.62 mo
324.33 253.861 li
326.149 254.918 326.143 256.634 324.308 257.694 cv
227.976 313.311 li
226.144 314.369 223.182 314.366 221.362 313.309 cv
160.722 278.069 li
263.689 218.62 li
cp
level3{
gsave
clp
[29.4256 103.12 103.12 -29.4256 232.356 228.785 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[29.4256 103.12 103.12 -29.4256 232.356 228.785 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
160.722 278.069 mo
160.523 207.933 li
160.517 205.828 161.996 203.261 163.828 202.204 cv
260.16 146.587 li
260.695 146.277 261.201 146.131 261.65 146.131 cv
262.738 146.131 263.486 146.994 263.49 148.484 cv
263.689 218.62 li
160.722 278.069 li
259.734 152.39 mo
164.238 207.472 li
164.238 270.39 li
259.734 215.196 li
259.734 152.39 li
212.422 176.117 mo
212.295 176.117 212.152 176.158 212.001 176.245 cv
211.483 176.544 211.065 177.269 211.067 177.864 cv
211.068 178.285 211.279 178.528 211.587 178.528 cv
211.713 178.528 211.856 178.487 212.007 178.4 cv
212.525 178.101 212.944 177.376 212.942 176.781 cv
212.941 176.36 212.729 176.117 212.422 176.117 cv
level3{
gsave
clp
[-2.84212e-008 316.157 316.157 2.84212e-008 212.106 -61.5734 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.84212e-008 316.157 316.157 2.84212e-008 212.106 -61.5734 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
259.734 152.39 mo
259.734 215.196 li
164.238 270.39 li
164.238 207.472 li
259.734 152.39 li
.0901961 .0470588 .164706 rgb
f
161.83 201.043 mo
258.162 145.425 li
259.085 144.892 259.921 144.843 260.524 145.194 cv
262.522 146.355 li
261.919 146.004 261.083 146.054 260.16 146.587 cv
163.828 202.204 li
161.996 203.261 160.517 205.828 160.523 207.933 cv
160.722 278.069 li
158.724 276.908 li
158.525 206.771 li
158.519 204.667 159.998 202.1 161.83 201.043 cv
cp
level3{
gsave
clp
[234.102 101.036 101.036 -234.102 87.7322 158.587 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 .552941 .788235 ]
/C1 [.345098 .94902 .913725 ]
/N 1.49438 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[234.102 101.036 101.036 -234.102 87.7322 158.587 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzz!!**$!<E3%!<N<(!WiE*!s8W-!sA`0"9\l3"U,&6"pP89#6tJ=#RC\A#mgnE$47+I$O[=M$k*OQ%1
NaV%LrsZ%hB3_&.fEc&J>]h',)#n'GM5r'bqK"()Ic'(`4)-)&X>2)B0V8*#ot>*?H7C+!2RI+<_mO+s
J3U,:"N[,palb-7:/g-n$Mn.4Qet.kE5&/M/S-/h\k30JG491,:XA1GgpG2)[?O2`E]U3B9,]4$,Md4?
Yhk5!M7s5X7V$6:+%,6psI47Rfm<84Z<D8kM]K92&#R9hnGZ:Jakb;,U:j;cH^r<E<.%~>
<~NK&pWNK&pWNK&pWNfK-[NfK-\O,o?_O-#HbOH>TeOcbchP*1ulPEV2pPa%DtQ'IW#QBmi'Q^=&+R$a;0
R@9S5R[]e9S=H+?SXl@DStDXITV.sOTqS3TU8+KYUnji`V5C,eVl-JlW2ZbqWiE,#X/rD)Xf\b/YHP17
Yd(I=ZEggC['[6K[C3NQ\%&rY\[f;_]=Y_g]tM.o^V@P!^qmk(_Sa:0`5T^8`lH-@aN;QHb0.uPbg"DX
cHjh`d*^7hdaQ[peCE+#f@S[-g"G*5gY:N=h;7#Ghr*GOiSrnXjQ,Fak3(pkkiq?slg*p(mHs?1n*oi:
~>
<~aiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiV]Jb0%lLb0%lLb0%lLb0.uObKJ)PbKJ)PbKS2Sbfn;Tbfn;T
c-=MXc-=MXc-=PZcHa_\cHa_\cd0q`cd0q`cd:%cd*U.dd*U1fdF$@hdF$CjdaHRldaHUne'ldpe'lgr
eC<!teCE+"e^`4#e^i=&f%/F'f@SX+f@SX,f\"j/f\+s2g"G'3g=k97g=k98gY:K;gYCT>gt^]@h;-oC
h;-rEhVR,Ghr!>Khr!AMi8EPOiSibSiSieUio8tXj5]1[j5f:^jQ,C`jlPUck2tggk2tjikND$lkih6o
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
221.362 313.309 mo
223.182 314.366 226.144 314.369 227.976 313.311 cv
324.308 257.694 li
325.231 257.161 325.691 256.462 325.689 255.764 cv
325.696 258.075 li
325.698 258.773 325.238 259.472 324.314 260.005 cv
227.983 315.622 li
226.151 316.68 223.189 316.677 221.369 315.62 cv
160.728 280.38 li
160.722 278.069 li
221.362 313.309 li
cp
level3{
gsave
clp
[115.879 -67.4444 -67.4444 -115.879 189.107 300.123 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[115.879 -67.4444 -67.4444 -115.879 189.107 300.123 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
253.28 280.233 mo
266.246 287.768 li
282.557 278.351 li
269.591 270.816 li
253.28 280.233 li
cp
244.58 277.501 mo
249.374 280.287 li
255.405 276.805 li
250.611 274.019 li
244.58 277.501 li
cp
251.567 273.467 mo
256.361 276.253 li
290.349 256.63 li
285.555 253.844 li
251.567 273.467 li
cp
240.044 266.771 mo
244.838 269.557 li
250.872 266.073 li
246.078 263.287 li
240.044 266.771 li
cp
247.034 262.735 mo
251.828 265.521 li
257.862 262.037 li
253.068 259.251 li
247.034 262.735 li
cp
259.782 262.05 mo
264.576 264.836 li
270.611 261.352 li
265.817 258.566 li
259.782 262.05 li
cp
266.772 258.014 mo
271.566 260.8 li
277.601 257.316 li
272.807 254.53 li
266.772 258.014 li
cp
261.011 254.666 mo
265.805 257.452 li
271.839 253.968 li
267.045 251.182 li
261.011 254.666 li
cp
273.762 253.978 mo
278.556 256.764 li
284.587 253.282 li
279.793 250.496 li
273.762 253.978 li
cp
286.511 253.292 mo
291.305 256.078 li
297.339 252.594 li
292.545 249.808 li
286.511 253.292 li
cp
242.497 252.005 mo
247.295 254.793 li
253.33 251.309 li
248.532 248.521 li
242.497 252.005 li
cp
268.001 250.63 mo
272.795 253.416 li
278.826 249.934 li
274.032 247.148 li
268.001 250.63 li
cp
280.749 249.944 mo
285.543 252.73 li
291.578 249.246 li
286.784 246.46 li
280.749 249.944 li
cp
293.501 249.257 mo
298.295 252.043 li
304.326 248.561 li
299.532 245.775 li
293.501 249.257 li
cp
236.739 248.659 mo
241.533 251.445 li
247.568 247.961 li
242.774 245.175 li
236.739 248.659 li
cp
262.239 247.281 mo
267.037 250.07 li
273.068 246.588 li
268.27 243.8 li
262.239 247.281 li
cp
274.987 246.596 mo
279.782 249.382 li
292.803 241.864 li
288.009 239.078 li
274.987 246.596 li
cp
287.739 245.908 mo
292.533 248.694 li
298.564 245.213 li
293.77 242.427 li
287.739 245.908 li
cp
256.478 243.933 mo
261.275 246.721 li
267.306 243.239 li
262.509 240.451 li
256.478 243.933 li
cp
228.413 243.82 mo
233.208 246.606 li
239.242 243.122 li
234.448 240.336 li
228.413 243.82 li
cp
269.226 243.248 mo
274.024 246.036 li
280.058 242.552 li
275.26 239.764 li
269.226 243.248 li
cp
235.404 239.784 mo
240.198 242.57 li
246.232 239.086 li
241.438 236.3 li
235.404 239.784 li
cp
257.706 236.553 mo
262.501 239.339 li
268.535 235.855 li
263.741 233.069 li
257.706 236.553 li
cp
270.455 235.864 mo
275.252 238.652 li
281.283 235.17 li
276.485 232.382 li
270.455 235.864 li
cp
209.636 297.676 mo
214.43 300.462 li
220.465 296.978 li
215.671 294.192 li
209.636 297.676 li
cp
203.875 294.328 mo
208.669 297.114 li
214.703 293.63 li
209.909 290.844 li
203.875 294.328 li
cp
216.626 293.64 mo
221.42 296.426 li
227.451 292.944 li
222.657 290.158 li
216.626 293.64 li
cp
198.113 290.979 mo
202.907 293.765 li
208.942 290.281 li
204.148 287.495 li
198.113 290.979 li
cp
210.865 290.292 mo
215.659 293.078 li
221.69 289.596 li
216.896 286.81 li
210.865 290.292 li
cp
230.522 285.484 mo
235.316 288.27 li
241.35 284.786 li
236.556 282 li
230.522 285.484 li
cp
224.76 282.136 mo
229.554 284.922 li
235.589 281.438 li
230.795 278.652 li
224.76 282.136 li
cp
213.237 275.439 mo
218.035 278.227 li
224.069 274.743 li
219.271 271.955 li
213.237 275.439 li
cp
207.475 272.091 mo
212.273 274.879 li
218.308 271.395 li
213.51 268.607 li
207.475 272.091 li
cp
201.717 268.745 mo
206.512 271.531 li
212.546 268.047 li
207.752 265.261 li
201.717 268.745 li
cp
223.613 289.606 mo
228.407 292.392 li
234.442 288.908 li
229.648 286.122 li
223.613 289.606 li
cp
192.352 287.631 mo
197.149 290.419 li
203.184 286.935 li
198.386 284.147 li
192.352 287.631 li
cp
205.103 286.944 mo
209.897 289.73 li
215.928 286.248 li
211.134 283.462 li
205.103 286.944 li
cp
217.852 286.258 mo
222.646 289.044 li
228.68 285.56 li
223.886 282.774 li
217.852 286.258 li
cp
186.59 284.283 mo
191.388 287.071 li
197.422 283.587 li
192.625 280.799 li
186.59 284.283 li
cp
199.342 283.595 mo
204.139 286.383 li
210.17 282.902 li
205.373 280.113 li
199.342 283.595 li
cp
219.054 278.85 mo
223.848 281.636 li
229.883 278.152 li
225.089 275.366 li
219.054 278.85 li
cp
212.09 282.91 mo
216.884 285.696 li
222.919 282.212 li
218.124 279.426 li
212.09 282.91 li
cp
237.59 281.537 mo
242.384 284.323 li
248.418 280.839 li
243.624 278.053 li
237.59 281.537 li
cp
180.832 280.937 mo
185.626 283.723 li
191.661 280.239 li
186.867 277.453 li
180.832 280.937 li
cp
193.58 280.247 mo
198.378 283.035 li
204.409 279.553 li
199.611 276.765 li
193.58 280.247 li
cp
206.328 279.562 mo
211.126 282.35 li
217.161 278.866 li
212.363 276.078 li
206.328 279.562 li
cp
231.828 278.189 mo
236.622 280.975 li
256.634 269.421 li
251.84 266.635 li
231.828 278.189 li
cp
187.822 276.901 mo
192.616 279.687 li
198.647 276.205 li
193.853 273.419 li
187.822 276.901 li
cp
200.567 276.213 mo
205.365 279.001 li
211.399 275.517 li
206.601 272.729 li
200.567 276.213 li
cp
172.506 276.098 mo
177.3 278.884 li
183.335 275.4 li
178.541 272.614 li
172.506 276.098 li
cp
226.067 274.84 mo
230.861 277.626 li
243.882 270.109 li
239.088 267.323 li
226.067 274.84 li
cp
194.809 272.867 mo
199.603 275.653 li
205.637 272.169 li
200.843 269.383 li
194.809 272.867 li
cp
179.496 272.063 mo
184.291 274.849 li
190.321 271.367 li
185.527 268.581 li
179.496 272.063 li
cp
220.305 271.492 mo
225.103 274.28 li
231.137 270.796 li
226.34 268.008 li
220.305 271.492 li
cp
214.544 268.144 mo
219.341 270.932 li
225.376 267.448 li
220.578 264.66 li
214.544 268.144 li
cp
186.483 268.029 mo
191.277 270.815 li
197.312 267.331 li
192.518 264.545 li
186.483 268.029 li
cp
227.295 267.456 mo
232.093 270.244 li
238.124 266.763 li
233.326 263.974 li
227.295 267.456 li
cp
252.795 266.083 mo
257.589 268.869 li
263.624 265.385 li
258.83 262.599 li
252.795 266.083 li
cp
208.786 264.798 mo
213.58 267.584 li
219.614 264.1 li
214.82 261.314 li
208.786 264.798 li
cp
221.534 264.108 mo
226.332 266.896 li
232.362 263.414 li
227.565 260.626 li
221.534 264.108 li
cp
193.473 263.993 mo
198.267 266.779 li
204.298 263.297 li
199.504 260.511 li
193.473 263.993 li
cp
234.282 263.423 mo
239.08 266.211 li
245.114 262.727 li
240.317 259.939 li
234.282 263.423 li
cp
215.776 260.762 mo
220.57 263.548 li
226.601 260.066 li
221.807 257.28 li
215.776 260.762 li
cp
228.52 260.074 mo
233.318 262.863 li
239.353 259.378 li
234.555 256.59 li
228.52 260.074 li
cp
200.46 259.959 mo
205.254 262.745 li
211.289 259.261 li
206.494 256.475 li
200.46 259.959 li
cp
241.272 259.387 mo
246.07 262.175 li
252.104 258.691 li
247.307 255.903 li
241.272 259.387 li
cp
254.02 258.701 mo
258.814 261.487 li
264.849 258.003 li
260.055 255.217 li
254.02 258.701 li
cp
222.762 256.728 mo
227.557 259.514 li
233.591 256.03 li
228.797 253.244 li
222.762 256.728 li
cp
235.511 256.039 mo
240.308 258.827 li
246.343 255.343 li
241.545 252.555 li
235.511 256.039 li
cp
207.45 255.923 mo
212.244 258.71 li
218.275 255.228 li
213.481 252.442 li
207.45 255.923 li
cp
248.259 255.353 mo
253.056 258.141 li
259.091 254.657 li
254.293 251.869 li
248.259 255.353 li
cp
229.753 252.692 mo
234.547 255.478 li
240.581 251.994 li
235.787 249.208 li
229.753 252.692 li
cp
214.437 251.89 mo
219.231 254.676 li
225.265 251.192 li
220.471 248.406 li
214.437 251.89 li
cp
255.249 251.317 mo
260.047 254.105 li
266.081 250.621 li
261.284 247.833 li
255.249 251.317 li
cp
249.488 247.969 mo
254.285 250.757 li
260.32 247.273 li
255.522 244.485 li
249.488 247.969 li
cp
221.427 247.854 mo
226.221 250.64 li
232.256 247.156 li
227.461 244.37 li
221.427 247.854 li
cp
243.73 244.623 mo
248.524 247.409 li
254.558 243.925 li
249.764 241.139 li
243.73 244.623 li
cp
250.72 240.587 mo
255.514 243.373 li
261.545 239.891 li
256.751 237.105 li
250.72 240.587 li
cp
263.464 239.899 mo
268.262 242.688 li
274.297 239.204 li
269.499 236.415 li
263.464 239.899 li
cp
276.216 239.212 mo
281.014 242 li
287.045 238.518 li
282.247 235.73 li
276.216 239.212 li
cp
242.394 235.749 mo
247.188 238.535 li
253.219 235.053 li
248.425 232.267 li
242.394 235.749 li
cp
264.697 232.518 mo
269.491 235.304 li
275.522 231.822 li
270.727 229.036 li
264.697 232.518 li
cp
249.381 231.715 mo
254.175 234.501 li
260.209 231.017 li
255.415 228.231 li
249.381 231.715 li
cp
262.402 224.197 mo
267.196 226.983 li
261.165 230.465 li
256.371 227.679 li
262.402 224.197 li
cp
level3{
gsave
clp
[26.5373 108.944 108.944 -26.5373 217.679 177.196 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[26.5373 108.944 108.944 -26.5373 217.679 177.196 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
212.008 178.562 mo
211.412 178.906 210.928 178.63 210.926 177.945 cv
210.924 177.261 211.405 176.427 212.001 176.083 cv
212.596 175.739 213.081 176.016 213.083 176.7 cv
213.085 177.384 212.603 178.218 212.008 178.562 cv
cp
.894118 .94902 .992157 rgb
f
417.563 152.943 mo
335.478 105.601 li
335.478 105.603 li
335.478 101.834 li
335.478 101.016 336.149 100.432 336.88 100.432 cv
337.113 100.432 337.352 100.491 337.578 100.621 cv
415.88 145.781 li
416.922 146.382 417.563 147.493 417.563 148.695 cv
417.563 152.943 li
343.939 107.18 mo
343.717 107.18 343.564 107.356 343.563 107.661 cv
343.562 108.091 343.864 108.614 344.238 108.83 cv
344.348 108.893 344.451 108.923 344.542 108.923 cv
344.764 108.923 344.917 108.748 344.918 108.444 cv
344.918 108.444 li
344.919 108.014 344.617 107.49 344.243 107.274 cv
344.243 107.273 li
344.134 107.21 344.03 107.18 343.939 107.18 cv
341.891 106.013 mo
341.669 106.013 341.516 106.189 341.515 106.493 cv
341.514 106.923 341.817 107.447 342.191 107.663 cv
342.3 107.726 342.403 107.756 342.495 107.756 cv
342.717 107.756 342.869 107.58 342.87 107.276 cv
342.872 106.846 342.569 106.323 342.195 106.107 cv
342.195 106.106 li
342.086 106.043 341.983 106.013 341.891 106.013 cv
339.726 104.731 mo
339.504 104.731 339.351 104.907 339.35 105.212 cv
339.349 105.642 339.651 106.165 340.025 106.381 cv
340.134 106.444 340.238 106.474 340.329 106.474 cv
340.551 106.474 340.704 106.299 340.705 105.995 cv
340.706 105.565 340.404 105.041 340.03 104.825 cv
340.03 104.824 li
339.92 104.761 339.817 104.731 339.726 104.731 cv
.878431 .890196 .92549 rgb
f
344.542 108.923 mo
344.451 108.923 344.348 108.893 344.238 108.83 cv
343.864 108.614 343.562 108.091 343.563 107.661 cv
343.564 107.356 343.717 107.18 343.939 107.18 cv
344.03 107.18 344.134 107.21 344.243 107.273 cv
344.243 107.274 li
344.617 107.49 344.919 108.014 344.918 108.444 cv
344.918 108.444 li
344.917 108.748 344.764 108.923 344.542 108.923 cv
1 1 1 rgb
f
342.495 107.756 mo
342.403 107.756 342.3 107.726 342.191 107.663 cv
341.817 107.447 341.514 106.923 341.515 106.493 cv
341.516 106.189 341.669 106.013 341.891 106.013 cv
341.983 106.013 342.086 106.043 342.195 106.106 cv
342.195 106.107 li
342.569 106.323 342.872 106.846 342.87 107.276 cv
342.869 107.58 342.717 107.756 342.495 107.756 cv
f
340.329 106.474 mo
340.238 106.474 340.134 106.444 340.025 106.381 cv
339.651 106.165 339.349 105.642 339.35 105.212 cv
339.351 104.907 339.504 104.731 339.726 104.731 cv
339.817 104.731 339.92 104.761 340.03 104.824 cv
340.03 104.825 li
340.404 105.041 340.706 105.565 340.705 105.995 cv
340.704 106.299 340.551 106.474 340.329 106.474 cv
f
396.235 201.89 mo
335.478 166.849 li
335.478 105.601 li
417.563 152.943 li
417.563 185.729 li
397.784 174.322 li
397.618 174.226 397.442 174.182 397.27 174.182 cv
396.73 174.182 396.235 174.614 396.235 175.216 cv
396.235 177.998 li
396.235 201.89 li
379.929 156.692 mo
379.929 158.525 li
394.135 166.727 li
394.135 164.893 li
379.929 156.692 li
356.106 147.827 mo
356.106 149.661 li
383.635 165.555 li
383.635 163.722 li
356.106 147.827 li
353.37 136.671 mo
353.37 138.505 li
394.135 162.041 li
394.135 160.207 li
353.37 136.671 li
369.517 150.68 mo
369.517 152.514 li
377.988 157.405 li
377.988 155.571 li
369.517 150.68 li
385.135 146.147 mo
385.135 147.981 li
394.135 153.177 li
394.135 151.343 li
385.135 146.147 li
342.87 135.296 mo
342.87 137.13 li
367.841 151.546 li
367.841 149.713 li
342.87 135.296 li
362.812 138.047 mo
362.812 139.881 li
380.812 150.273 li
380.812 148.439 li
362.812 138.047 li
342.87 140.186 mo
342.87 142.02 li
354.606 148.795 li
354.606 146.961 li
342.87 140.186 li
342.87 121.745 mo
342.87 123.579 li
383.635 147.115 li
383.635 145.281 li
342.87 121.745 li
342.87 126.534 mo
342.87 128.368 li
360.87 138.76 li
360.87 136.926 li
342.87 126.534 li
342.87 130.609 mo
342.87 132.443 li
351.341 137.333 li
351.341 135.5 li
342.87 130.609 li
level3{
gsave
clp
[82.085 0 0 82.085 335.478 159.896 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~.B)2SW8T2(i@:hc.]MAWWo5J.i@M%h/?Ih_XPth6i\%Cn0<a@gYMq7?i\7Xt0s]gpZf<gJj"n+'1q)F%
\)TBVj#=L.34\'0]Au#cj>t!8420c<^Z7PojZgWD5f;\L`T9G+k!R2O7*4R[b2u1;k=<bZ8C$Bjcf[sK
kY0Fg:=SK&e`]i]kY^!r;VL>6h!%hpkuZd,=Q/OJiTaV,l<NH9?0:H[kj)XAlXK5IA+&\on*FWUm:Z%X
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[82.085 0 0 82.085 335.478 159.896 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~-n$Jl-n$Jl-n-So.4H\p.4Qes.Olnt.P!#".k<,#.kE5&/1`>'/1iG*/M8Y./hSb//h\k20/"t30/,(6
0JG490ekC;0ekF=1,:XA1G^jE1c.'I2)R9M2E!KQ2`E]U3&ioY3B9)[3B9,]3]]>a4$,Pe4?Pbi5!D1q
5<h@t5X7S#5s[e'6:+"+6UO4/6psF377BX77Rfj;7n6'?84cBF8kM]K91qoO9MJ5U9he>W:/=Y^:f'tc
;,L1f;GpFl<)cgr<E3(#='&I)=BJ[-=]nm1>$>-7>[1N=?!UcC?XI/I?smDO@U`eU@q0"YA7T4]AS#Ic
~>
<~Vl-GjVl-GjVl6PmW2QYnW2ZbqWMukrWN)tuWiN2$X/i;%X/rD(XKAV,Xfeh0Y-+q1Y-5%4YHY78Yd(I<
Z*CU?ZEggCZa7$G['[6K[C*HO[^NZS\$riU\$rlW\@B)[]"5Mc]=Y_g]Y(qk]tM.o^:q@s^qde&_84"*
_SX1-_o0L4`Pog9`l?$=a2l?DaiVZIb0.uObKJ)Qbg"DXcHa_]cd:%ddF$@idaQ[peC<!ue^i='f@SX,
f\"m1g=k<9gt^]?h;-rEhr!AMi8EPOiSieUj5]4]jlPUck2tjikih9qlK[^$m-O-,mdBN2n*fc8naZ2@
~>
<~i8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8NYRiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSrkVio8tW
io8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio9"Yj5]1[j5]1[j5]1[j5]1[j5]4]jQ,C_jQ,C_
jQ,C_jQ,C`jlPUcjlPUcjlPUcjlPUdk2tggk2tggk2tggk2tghkND$kkND$kkND$kkND$kkND$kkND$k
kND$kkih6okih6okih6ol07Hsl07Hsl07Hsl07HslK[["lK[["lK[["lg*m&lg*m&lg*m&m-O**m-O**
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
383.635 147.115 mo
342.87 123.579 li
342.87 121.745 li
383.635 145.281 li
383.635 147.115 li
1 1 1 rgb
f
394.135 162.041 mo
353.37 138.505 li
353.37 136.671 li
394.135 160.207 li
394.135 162.041 li
f
354.606 148.795 mo
342.87 142.02 li
342.87 140.186 li
354.606 146.961 li
354.606 148.795 li
f
383.635 165.555 mo
356.106 149.661 li
356.106 147.827 li
383.635 163.722 li
383.635 165.555 li
f
360.87 138.76 mo
342.87 128.368 li
342.87 126.534 li
360.87 136.926 li
360.87 138.76 li
f
380.812 150.273 mo
362.812 139.881 li
362.812 138.047 li
380.812 148.439 li
380.812 150.273 li
f
351.341 137.333 mo
342.87 132.443 li
342.87 130.609 li
351.341 135.5 li
351.341 137.333 li
f
377.988 157.405 mo
369.517 152.514 li
369.517 150.68 li
377.988 155.571 li
377.988 157.405 li
f
394.135 166.727 mo
379.929 158.525 li
379.929 156.692 li
394.135 164.893 li
394.135 166.727 li
f
394.135 153.177 mo
385.135 147.981 li
385.135 146.147 li
394.135 151.343 li
394.135 153.177 li
f
367.841 151.546 mo
342.87 137.13 li
342.87 135.296 li
367.841 149.713 li
367.841 151.546 li
f
201.615 65.2528 mo
195.179 68.9933 li
197.345 67.7342 200.346 67.9117 203.66 69.8254 cv
204.276 70.1809 204.884 70.5895 205.475 71.0362 cv
211.912 67.2958 li
211.321 66.849 210.713 66.4404 210.097 66.0845 cv
206.782 64.1708 203.781 63.9937 201.615 65.2528 cv
cp
level3{
gsave
clp
[16.7334 0 0 16.7334 195.179 67.7424 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[16.7334 0 0 16.7334 195.179 67.7424 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
231.703 49.5387 mo
226.053 46.2766 220.933 45.9741 217.235 48.1222 cv
210.799 51.8631 li
214.496 49.7145 219.616 50.017 225.266 53.2792 cv
228.098 54.9144 230.795 57.1332 233.241 59.7526 cv
239.677 56.0122 li
237.232 53.3923 234.535 51.1735 231.703 49.5387 cv
cp
level3{
gsave
clp
[28.8785 0 0 28.8785 210.799 53.2514 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[28.8785 0 0 28.8785 210.799 53.2514 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
296.313 94.0414 mo
295.588 76.1932 283.099 55.1292 267.764 46.2757 cv
259.796 41.6751 252.579 41.2481 247.368 44.2766 cv
240.931 48.017 li
246.142 44.9885 253.359 45.4155 261.327 50.0161 cv
276.662 58.8697 289.151 79.9336 289.876 97.7819 cv
301.245 104.93 310.285 120.945 310.248 134.163 cv
310.229 140.916 307.844 145.667 304 147.901 cv
310.436 144.161 li
314.281 141.927 316.665 137.176 316.684 130.423 cv
316.722 117.204 307.681 101.19 296.313 94.0414 cv
cp
level3{
gsave
clp
[75.7535 0 0 75.7535 240.931 95.1219 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[75.7535 0 0 75.7535 240.931 95.1219 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
261.327 50.016 mo
276.662 58.8697 289.151 79.9336 289.876 97.7817 cv
301.245 104.93 310.285 120.945 310.248 134.163 cv
310.209 147.755 300.59 153.236 288.771 146.412 cv
204.774 97.9161 li
204.382 97.6614 203.982 97.4592 203.582 97.2284 cv
196.994 93.4243 191.68 84.2112 191.701 76.6401 cv
191.723 69.0787 197.071 66.0211 203.66 69.8252 cv
204.276 70.1811 204.884 70.5895 205.475 71.0363 cv
205.073 68.9534 204.861 66.8949 204.867 64.904 cv
204.904 52.0016 214.038 46.7964 225.266 53.2791 cv
228.098 54.9142 230.795 57.1329 233.241 59.7528 cv
236.09 46.5568 247.591 42.0857 261.327 50.016 cv
cp
level3{
gsave
clp
[-172.836 -105.497 105.497 -172.836 351.776 146.45 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-172.836 -105.497 105.497 -172.836 351.776 146.45 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
436.273 201.088 mo
417.563 190.297 li
417.563 185.729 li
434.834 195.69 li
435.219 197.485 435.701 199.289 436.273 201.088 cv
.878431 .890196 .92549 rgb
f
417.563 190.297 mo
396.235 177.997 li
396.235 177.998 li
396.235 175.216 li
396.235 174.614 396.73 174.182 397.27 174.182 cv
397.442 174.182 397.618 174.226 397.784 174.322 cv
417.563 185.729 li
417.563 190.297 li
402.478 179.162 mo
402.314 179.162 402.201 179.291 402.201 179.516 cv
402.2 179.833 402.423 180.22 402.699 180.379 cv
402.78 180.426 402.856 180.448 402.923 180.448 cv
403.087 180.448 403.2 180.318 403.201 180.094 cv
403.202 179.777 402.979 179.39 402.702 179.231 cv
402.702 179.23 li
402.622 179.184 402.546 179.162 402.478 179.162 cv
400.967 178.3 mo
400.803 178.3 400.691 178.43 400.69 178.655 cv
400.689 178.972 400.912 179.358 401.188 179.518 cv
401.269 179.564 401.345 179.586 401.413 179.586 cv
401.576 179.586 401.689 179.457 401.69 179.232 cv
401.691 178.915 401.468 178.529 401.192 178.369 cv
401.192 178.369 li
401.111 178.322 401.035 178.3 400.967 178.3 cv
399.369 177.355 mo
399.206 177.355 399.093 177.484 399.092 177.709 cv
399.091 178.026 399.314 178.413 399.591 178.572 cv
399.671 178.619 399.747 178.641 399.815 178.641 cv
399.978 178.641 400.091 178.511 400.092 178.287 cv
400.093 177.97 399.87 177.583 399.594 177.424 cv
399.594 177.423 li
399.513 177.377 399.437 177.355 399.369 177.355 cv
level3{
gsave
clp
[82.085 0 0 82.085 335.478 159.896 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~iq<6/p&*hBr8[JJj7W?1p&*kCr8[JJj7`E2pAEtEr8[MKj7`E2pAEtEr8[MKjS&N4pAF"Fr8dVMjS/T5
p\a+Hr8dVMjS/T6p\j4JrT3ePjnSf9q#0=LrT3hQk4no;q#0@NrT<qSk5"u<q>KIOrT<qSkP>)>qYfUR
rTF%UkPG/?qYfXSrTO.Wkkk>Bqu,aUrTX4Xl2:MEr;GmXrTX7Yl2:MFr;GpZrTa@[lM^\HrVc$[rTjI]
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[82.085 0 0 82.085 335.478 159.896 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~iSibSiSibSiSrkVio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWioB(Z
j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]4]jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,Fa
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUdk2tggk2tggk2tggk2tggk2tggk2tghkND$kkND$k
kND$kkND$kkND$kkih6okih6okih6okih6okih6okih6ol07Hsl07Hsl07Hsl07Hsl07Hsl07HslK[["
~>
<~o^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo_%nMp%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"N
p%A"Np%A"Np%A%Pp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e7Tp\4FVp\4FVp\4FVp\4FV
p\4FVp\4FWq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XX[q>'j^q>'j^q>'j^q>'j^q>'j^q>'j_qYL'b
qYL'bqYL'bqYL'bqYL'bqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fr;?Kjr;?Kjr;?Kjr;?Kjr;?KjrVc]n
~>
<~qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp<hr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
402.923 180.448 mo
402.856 180.448 402.78 180.426 402.699 180.379 cv
402.423 180.22 402.2 179.833 402.201 179.516 cv
402.201 179.291 402.314 179.162 402.478 179.162 cv
402.546 179.162 402.622 179.184 402.702 179.23 cv
402.702 179.231 li
402.979 179.39 403.202 179.777 403.201 180.094 cv
403.2 180.318 403.087 180.448 402.923 180.448 cv
level3{
gsave
clp
[82.085 0 0 82.085 335.478 159.896 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[82.085 0 0 82.085 335.478 159.896 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
255 255 255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
401.413 179.586 mo
401.345 179.586 401.269 179.564 401.188 179.518 cv
400.912 179.358 400.689 178.972 400.69 178.655 cv
400.691 178.43 400.803 178.3 400.967 178.3 cv
401.035 178.3 401.111 178.322 401.192 178.369 cv
401.192 178.369 li
401.468 178.529 401.691 178.915 401.69 179.232 cv
401.689 179.457 401.576 179.586 401.413 179.586 cv
level3{
gsave
clp
[82.085 0 0 82.085 335.478 159.896 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[82.085 0 0 82.085 335.478 159.896 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
399.815 178.641 mo
399.747 178.641 399.671 178.619 399.591 178.572 cv
399.314 178.413 399.091 178.026 399.092 177.709 cv
399.093 177.484 399.206 177.355 399.369 177.355 cv
399.437 177.355 399.513 177.377 399.594 177.423 cv
399.594 177.424 li
399.87 177.583 400.093 177.97 400.092 178.287 cv
400.091 178.511 399.978 178.641 399.815 178.641 cv
level3{
gsave
clp
[82.085 0 0 82.085 335.478 159.896 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[82.085 0 0 82.085 335.478 159.896 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
456.803 258.121 mo
396.235 223.189 li
396.235 201.89 li
417.563 214.191 li
417.563 190.297 li
436.273 201.088 li
440.02 212.866 447.62 224.434 456.803 231.857 cv
456.803 258.121 li
level3{
gsave
clp
[60.5679 0 0 60.5679 396.235 218.059 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[60.5679 0 0 60.5679 396.235 218.059 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
417.563 214.191 mo
396.235 201.89 li
396.235 177.997 li
417.563 190.297 li
417.563 214.191 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[22.56 0 0 37.92 395.52 234.96 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 47 
/H 79 
/M[47 0 0 -79 0 79 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
s'G\3#%1hI@U`hWrac+BBDuQ_BkhBuCMdp+Df9T7EH?2CFEMbMGB\:WH@(#:nbr%WoDS=[p&+O_p\agb
q>C*fqr%DIr;?Nn?N+:9?smDP@UipIAH?CUrb*3aC2.O"D/F0/DfB]9F)uGFF`qqPGBeCZH[G\\rUTpY
rUg']r:^-ar:p6dr;-BhmelAJr;HY%ra,k;?t!MR@q5LL!G6!DBGtT"C27U%D/O91E,fl=F*)MHG'8(R
G^4U^Hi3F4o)81Yo_nI\pAXgaq#1$dqYg<hr7q5JrVp4'?NsnG@:E\UA,^$?AnV*V)JNr$CMRd(DJsH4
EH-&@FEDYKG'A.TH$Xgar:0aVrU^![rUp*^rqH?crV?BfrVP4Er;HY%ra,k;?t!MR@q5LL!G6!DBGtT"
C27U%D/O91E,fl=F*)MHG'8(RG^4U^Hi3F4o)81Yo_nI^pAajcp\agbq>C*fqq(cDrVp4'?NsnG@:E\U
A,^$?AnV*V)JNr$CMRd(DJsH4EH-&@FEDYKG'A.TH$Xgar:0aV!;$3]rUg']r:^-ar:p6dr;-BhfDPRF
s'G\3#%1hI@U`hWrac+BBDuQ[BkhBuCMdp+Df9T7EH?2CFEMbMGB\96H$Xgar:0aVrU^![rUp*^rqH?c
rV?BfrVP4Er;HY%ra,k;?t!MR@q5LL!G6!DBF&<eC27U%D/O8(DfB]9F)uGFF`qqPGBeCZH[G\\rUTpY
rUg']r:^-ar:p6dr;-BhfDPRFs'G\3#%1hI@U`hWrac+BBDuQ_BkhBuCMdp+Df9T7EH?2CFEMbMGB\:W
H@(#:nbr%WoDS=[p&+O_p\agbq>C*fqq(cDr;^.(?N+:9?smDP@UipIAH?CUrb*3aC2.O"D/F0/DfB]9
F)uGFF`qqPGBeCZH[G\\rUTpYrUg']r:^-ar:p6dr;-Bhhu*<Jr;HY%ra,k;?t!MR@q5LL!G6!DBGtT"
C27U%D/O91E,fl=F*)MHG'8(RG^4U^Hi3F4o)81Yo_nI\pAXgaq#1$dqYg<Yr9O:YrVp4'?NsnG@:E\U
A,^$?AnV*V)JNr$CMRd(DJsH4EH-&@FEDYKG'A.TH$Xgar:0aVrU^![rUp*^rqH?crV?BfrVQKih>I3L
s'G\3#%1hI@U`hWrac+BBDuQ_BkhBuCMdp+Df9T7EH?2CFEMbMGB\:WH@(#:nbr%WoDS=[p&+O_p\agb
q#L9iqYg<Cr;?Nn?N+:9?smDP@UipIAH?CUrb*3aC2.O"D/F0/DfB]9F)uGFF`qqPGBeCZH[G\\rUTpY
rUg']rUp6brqH?crV?BfrVP4Er;HY%ra,k;?t!MR@q5LL!G6!DBGtT"C27U%D/O91E,fl=F*)MHG'8(R
G^4U^Hi3F4o)J=]oDS=[p&+O_p\agbq>C*fqq(cDrVp4'?NsnG@:E\UA,^$?AnV*V(MRW!CMRd(DJsH4
EH-&@FEDYKG'A.TGli;=Hi3F4o)81Yo_nI\pAXgaq#1$dqYg<Cr;?Nn?N+:9?smDP@UipIAH?CUrb)UP
C2.O"D/F0/D\-l-EH?2CFEMbMGB\:WH@(#:nbr%WoDS=[p&+O_p\agbq>C*fqq(cDrVp4'?NsnG@:E\U
A,^$>AcQKCBGtT"C27U%D/O91E,fl=F*)MHG'8(RG^4U^Hi3F4o)81Yo_nI\pAXgaq#1$dqYg<Cr;?Nn
?N+:9?smDP@UipIAH?CUrb*3aC2.O"D/F0/DfB]9F)uGFF`qqPGBeCZH[G\\rUTpYrUg']r:^-ar:p6d
r;-BhhYd6Jr;HY%ra,k;?t!MR@q5LL!G6!DBGtT"C27U%D/O91E,fl=F*)MHG'8(RG^4U^Hi3F4o)81Y
o_nI\pAXgaq#1$dqYg<Xr9X@ZrVp4'?NsnG@:E\UA,^$?AnV*V)JNr$CMRd(DJsH4EH-&@FEDYKG'A.T
H$Xgar:0aVrU^![rUp*^rqH?crV?BfrVQHhhYd<Ms'G\3#%1hI@U`hWrac+BBDuQ_BkhBuCMdp+Df9T7
EH?2CFEMbMGB\:WH@(#:nbr%WoDS=[p&+O_p\agbq>^<jqYg<Cr;?Nn?N+:9?smDP@UipIAH?CUrb*3a
C2.O"D/F0/DfB]9F)uGFF`qqPGBeCZH[G\\rUTpYrUg']r:^-ar:p6dr;-BhfDPRFs'G\3#%1hI@U`hW
rac+BBDuQ_BkhBuCMdp+Df9T7EH?2CFEMbMGB\:WH@(#:nbr%Xo)SC\o_nI\pAXgaq#1$dqYg<Cr;?Nn
?N+:9?smDP@UipIAH?CUrb*-_C2.O"D/F0/DfB]9F)uGFF`qqPGBeCZs*O\6rUTpYrUg']r:^-ar:p6d
r;-BhfDPRFs'G\3#%1hI@U`hWrac+BBDuQOBkhBuCMdp+Df9S*EH-&@FEDYKG'A.TH$Xgar:0aVrU^![
rUp*^rqH?crV?BfrVP4Er;HY%ra,k;?t!MR@q5LL!G6!DBGtT"C27U%D/O91E,fl=F*)MHG'8(RG^4U^
Hi3F4o)81Yo_nI\pAXgaq#1$dqYg<Cr;?Kp?=$tE?XI2K@:E\UA,^$?AnV*V)JNr$CMRd(DJsH4EH-&@
FEDYKG'A.TH$Xgar:0aVrU^![rUp*^rqH?crV?BfrVPFKqu$Bjs'G\3#%1hI@U`hWrac+BBDuQ_BkhBu
CMdp+Df9T7EH?2CFEMbMGB\:WH@(#:nbr%WoDS=[p&+O_p\agbq>C*fqs41Ir;?Nn?N+:9?smDP@UipI
AH?CUrb*3aC2.O"D/F0/DfB]9F)uGFF`qqPGBeCZH[G\\rUTpYrUg']r:^-ar:p6dr;-Bhi;EBJr;HY%
ra,k;?t!MR@q5LL!G6!DBGtT"C27U%D/O91E,fl=F*)MHG'8(RG^4U^Hi3F4o)81Yo_nI\pAXgaq#1$d
qYg<Zr9F4XrVp4'?NsnG@:E\UA,^$?AnV*V)JNr$CMRd(DJsH4EH-&@FEDYKG'A.TH$Xgar:0aVrU^![
rUp*^rqH?crV?BfrVQNjh#.*Ks'G\3#%1hI@U`hWrac+BBDuQ_BkhBuCMdp+Df9T7EH?2CFEMbMGB\:W
H@(#:nbr%WoDS=[p&+O_p\agbq>C*fqq(cDrVp4'?NsnG@:E\UA,^$?AnV*V)JNr$CMRd(DJsH4EH-&@
FEDYKG'A.TH$Xgar:0aVrU^![rUp0`s7ZHdr:p6dr;-BhfDPRFs'G\3#%1hI@U`hWrac+BBDuQ_BkhBu
CMdp+Df9T7EH?2CFEMbMGB\:WH@(#:nbr"YoD\@[o_nI\pAXgaq#1$dqYg<Cr;?Nn?N+:9?smDP@UipI
AH?CUrb*']C2.O"D/F0/DfB]9F)uGFF`qqPGBa48H@(#:nbr%WoDS=[p&+O_p\agbq>C*fqq(cDrVp4'
?NsnG@:E\UA,^$?AnV*V#\e$gCMRd(DJp,*E,fl=F*)MHG'8(RG^4U^Hi3F4o)81Yo_nI\pAXgaq#1$d
qYg<Cr;?Nn?N+:9?smDP@UipIAH?CUrb*3aC2.O"D/F0/DfB]9F)uGFF`qqPGBeCZH[G\\rUTpYrUg']
r:^-ar:p6dr;-BhfDPRF!+#Y3ra,k;?t!MR@q5LL!G6!DBGtT"C27U%D/O91E,fl=F*)MHG'8(RG^4U^
Hi3F4o)81Yo_nI\pAXgaq#1$dqYg<Kr;$9grVp4'?NsnG@:E\UA,^$?AnV*V)JNr$CMRd(DJsH4EH-&@
FEDYKG'A.TH$Xgar:0aVrU^![rUp*^rqH?crV?BfrVQ![lhp\Zs'G\3#%1hI@U`hWrac+BBDuQ_BkhBu
CMdp+Df9T7EH?2CFEMbMGB\:WH@(#:nbr%WoDS=[p&+O_p\agbq>C*fqtp<Ir;?Nn?N+:9?smDP@UipI
AH?CUrb*3aC2.O"D/F0/DfB]9F)uGFF`qqPGBeCZH[G\\rUTpYrUg']r:^-ar:p6d!;cZjrVP4Er;HY%
ra,k;?t!MR@q5LL!G6!DBGtT"C27U%D/O91E,fl=F*)MHG'8(RG^4U^Hi3F4o)81Yo_nI]p&Ogcp\agb
q>C*fqq(cDrVp4'?NsnG@:E\UA,^$?AnV*V)JNr$CMRd(DJsH4EH-&@FEDYKG'A.TH$Xgar:0aVs7?9^
rUg']r:^-ar:p6dr;-BhfDPRFs'G\3#%1hI@U`hWrac+BBDuQ\BkhBuCMdp+Df9T7EH?2CFEMbMGB\:W
!d]3?r:0aVrU^![rUp*^rqH?crV?BfrVP4Er;HY%ra,k;?t!MR@q5LL!G6!DBF/BfC27U%D/O91&9)W/
F)uGFF`qqPGBeCZH[G\\rUTpYrUg']r:^-ar:p6dr;-BhfDPRFs'G\3#%1hI@U`hWrac(A!,):E)JNr$
CMRd(DJsH4EH-&@FEDYKG'A.TH$Xgar:0aVrU^![rUp*^rqH?crV?BfrVP4Er;HY%ra,k;?t!MR@q5LL
!G6!DBGtT"C27U%D/O91E,fl=F*)MHG'8(RG^4U^Hi3F4o)81Yo_nI\pAXgaq#1$dqYg<Jr;-?hrVp4'
?NsnG@:E\UA,^$?AnV*V)JNr$CMRd(DJsH4EH-&@FEDYKG'A.TH$Xgar:0aVrU^![rUp*^rqH?crV?Bf
rVPsZm/6e[s'G\3#%1hI@U`hWrac+BBDuQ_BkhBuCMdp+Df9T7EH?2CFEMbMGB\:WH@(#:nbr%WoDS=[
p&+O_p\agbq>C*fqtg6Ir;?Nn?N+:9?smDP@UipIAH?CUrb*3aC2.O"D/F0/DfB]9F)uGFF`qqPGBeCZ
H[G\\rUTpYrUg']r:^-ar:p6ds8)`krVP4Er;HY%ra,k;?t!MR@q5LL!G6!DBGtT"C27U%D/O91E,fl=
F*)MHG'8(RG^4U^Hi3F4o)81Yo_nI\pAXgaq#1$dqYg<Cr;?Nn?N+:9?smDP@UipIAH?CUrb*3aC2.O"
D/F0/DfB]9F)uGFF`qqPGBeCZH[G\\rUTsZ!;$0]rUp*^rqH?crV?BfrVP4Er;HY%ra,k;?t!MR@q5LL
!G6!DBGbGuC27U%D/O91E,fl=F*)MHG'8(RG^4W8Hi3F4o)81Yo_nI\pAXgaq#1$dqYg<Cr;?Nn?N+:9
?smDP@UipIAH?CUrb)XQC2.O"D/F0/Df?5,EH?2CFEMbMGB\:WH@(#:nbr%WoDS=[p&+O_p\agbq>C*f
qq(cDrVp4'?NsnG@:E\UA,^$?AnV*V)JNr$CMRd(DJsH4EH-&@FEDYKG'A.TH$Xgar:0aVrU^![rUp*^
rqH?crV?BfrVP4Er;?\'?=*tF?XR8M@U`hWrac+BBDuQ_BkhBuCMdp+Df9T7EH?2CFEMbMGB\:WH@(#:
nbr%WoDS=[p&+O_p\agbq>C*fqq_2Ir;?Nn?N+:9?smDP@UipIAH?CUrb*3aC2.O"D/F0/DfB]9F)uGF
F`qqPGBeCZH[G\\rUTpYrUg']r:^-ar:p6dr;-Bhlhp/Jr;HY%ra,k;?t!MR@q5LL!G6!DBGtT"C27U%
D/O91E,fl=F*)MHG'8(RG^4U^Hi3F4o)81Yo_nI\pAXgaq#1$dqYg<Lr:p3frVp4'?NsnG@:E\UA,^$?
AnV*V)JNr$CMRd(DJsH4EH-&@FEDYKG'A.TH$Xgar:0aVrU^![rUp*^rqH?crV?BfrVQ$\lMUSYs'G\3
#%1hI@U`hWrac+BBDuQ_BkhBuCMdp+Df9T7EH?2CFEMbMGB\:WH@(#:nbr%WoDS=[p&+O_p\agbq>C*f
qu$BIr;?Nn?N+:9?smDP@UipIAH?CUrb*3aC2.O"D/F0/DfB]9F)uGFF`qqPGBeCZH[G\\rUTpYrUg']
r:^-ar:p6dr;-BhfDPRFs'G\3#%1hI@U`hWrac+BBDuQ_BkhBuCMdp+Df9T7EH?2CFEMbMGB\:WH@(#:
nbr%WoDS=[p&=[bpAXgaq#1$dqYg<Cr;?Nn?N+:9?smDP@UipIAH?CUrb*3aC2.O"D/F0/DfB]9F)uGF
F`qqPGBeCZH[G\\rUKs[rq$*\rUp*^rqH?crV?BfrVP4Er;HY%ra,k;?t!MR@q5LL!G6!DBGP;sC27U%
D/O91E,fl=F*)MHG'8(RGQW5;H[G\\rUTpYrUg']r:^-ar:p6dr;-BhfDPRFs'G\3#%1hI@U`hWrac+B
BDuQMBkhBuCMdp+D\6o,EH-&@FEDYKG'A.TH$Xgar:0aVrU^![rUp*^rqH?crV?BfrVP4Er;HY%ra,k;
?t!MR@q5LL!G6!DBGtT"C27U%D/O91E,fl=F*)MHG'8(RG^4U^Hi3F4o)81Yo_nI\pAXgaq#1$dqYg<C
r;?Kn?3"=2?NsnG@:E\UA,^$?AnV*V)JNr$CMRd(DJsH4EH-&@FEDYKG'A.TH$Xgar:0aVrU^![rUp*^
rqH?crV?BfrVPLMq>C0hs'G\3#%1hI@U`hWrac+BBDuQ_BkhBuCMdp+Df9T7EH?2CFEMbMGB\:WH@(#:
nbr%WoDS=[p&+O_p\agbq>C*fqsF=Ir;?Nn?N+:9?smDP@UipIAH?CUrb*3aC2.O"D/F0/DfB]9F)uGF
F`qqPGBeCZH[G\\rUTpYrUg']r:^-ar:p6dr;-Bhqu#:Jr;HY%ra,k;?t!MR@q5LL!G6!DBGtT"C27U%
D/O91E,fl=F*)MHG'8(RG^4U^Hi3F4o)81Yo_nI\pAXgaq#1!gqYg9hqq(cDrVp4'?NsnG@:E\UA,^$?
AnV*V)JNr$CMRd(DJsH4EH-&@FEDYKG'A.TH$Xgar:0aVrU^![rUp-_!;?Edr:p6dr;-BhfDPRFs'G\3
#%1hI@U`hWrac+BBDuQ_BkhBuCMdp+Df9T7EH?2CFEMbMGB\:WH@(#:nbr%YoDeF\o_nI\pAXgaq#1$d
qYg<Cr;?Nn?N+:9?smDP@UipIAH?CUrb**^C2.O"D/F0/DfB]9F)uGFF`qqPGBeB7H@(#:nbr%WoDS=[
p&+O_p\agbq>C*fqq(cDrVp4'?NsnG@:E\UA,^$?AnV*V$#+-hCMRd(DJsG)E,fl=F*)MHG'8(RG^4U^
Hi3F4o)81Yo_nI\pAXgaq#1$dqYg<Cr;?Nn?N+:9?smDP@UipIAH6<BBDuQ_BkhBuCMdp+Df9T7EH?2C
FEMbMGB\:WH@(#:nbr%WoDS=[p&+O_p\agbq>C*fqq(cDrVp4'?NsnG@:E\UA,^$?AnV*V)JNr$CMRd(
DJsH4EH-&@FEDYKG'A.TH$Xgar:0aVrU^![rUp*^rqH?crV?BfrVPILqY^9is'G\3#%1hI@U`hWrac+B
BDuQ_BkhBuCMdp+Df9T7EH?2CFEMbMGB\:WH@(#:nbr%WoDS=[p&+O_p\agbq>C*fqs=7Ir;?Nn?N+:9
?smDP@UipIAH?CUrb*3aC2.O"D/F0/DfB]9F)uGFF`qqPGBeCZH[G\\rUTpYrUg']r:^-ar:p6dr;-Bh
qY]4Jr;D-~>

%%EndBinary
grestore
np
225.495 223.972 mo
175.424 252.88 li
175.424 218.772 li
225.495 189.863 li
225.495 223.972 li
cp
level3{
gsave
clp
[50.0708 0 0 50.0708 175.424 221.372 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[50.0708 0 0 50.0708 175.424 221.372 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
224.971 187.132 mo
175.948 215.435 li
175.659 215.602 175.424 216.051 175.424 216.436 cv
175.424 218.79 li
225.495 189.882 li
225.495 187.528 li
225.495 187.142 225.261 186.965 224.971 187.132 cv
cp
.866667 .886275 .909804 rgb
f
178.842 215.369 mo
178.842 215.673 178.629 216.043 178.366 216.194 cv
178.103 216.346 177.89 216.223 177.89 215.919 cv
177.89 215.616 178.103 215.246 178.366 215.094 cv
178.629 214.942 178.842 215.066 178.842 215.369 cv
cp
.945098 .94902 .94902 rgb
f
180.379 214.482 mo
180.379 214.786 180.166 215.155 179.903 215.307 cv
179.639 215.459 179.426 215.336 179.426 215.032 cv
179.426 214.728 179.639 214.359 179.903 214.207 cv
180.166 214.055 180.379 214.178 180.379 214.482 cv
cp
f
181.916 213.595 mo
181.916 213.899 181.702 214.268 181.439 214.42 cv
181.176 214.572 180.963 214.449 180.963 214.145 cv
180.963 213.841 181.176 213.472 181.439 213.32 cv
181.702 213.168 181.916 213.291 181.916 213.595 cv
cp
f
188.796 214.646 mo
177.89 220.942 li
177.89 219.857 li
188.796 213.561 li
188.796 214.646 li
cp
1 1 1 rgb
f
194.973 213.644 mo
177.89 223.507 li
177.89 222.92 li
194.973 213.056 li
194.973 213.644 li
cp
f
181.803 222.536 mo
177.89 224.796 li
177.89 224.208 li
181.803 221.949 li
181.803 222.536 li
cp
f
190.583 217.467 mo
182.28 222.261 li
182.28 221.673 li
190.583 216.879 li
190.583 217.467 li
cp
f
187.078 230.387 mo
184.154 232.075 li
184.154 242.246 li
187.078 240.558 li
187.078 230.387 li
cp
f
192.585 224.36 mo
189.661 226.048 li
189.661 239.067 li
192.585 237.379 li
192.585 224.36 li
cp
f
198.091 223.531 mo
195.167 225.219 li
195.167 235.888 li
198.091 234.199 li
198.091 223.531 li
cp
f
203.598 218.755 mo
200.674 220.443 li
200.674 232.708 li
203.598 231.02 li
203.598 218.755 li
cp
f
209.105 212.2 mo
206.181 213.888 li
206.181 229.529 li
209.105 227.841 li
209.105 212.2 li
cp
f
214.612 206.805 mo
211.688 208.494 li
211.688 226.349 li
214.612 224.661 li
214.612 206.805 li
cp
f
217.822 223.175 mo
181.25 244.291 li
181.25 243.555 li
217.822 222.44 li
217.822 223.175 li
cp
f
185.633 233.006 mo
182.553 234.231 li
182.59 233.938 li
185.598 232.741 li
191.117 226.617 li
191.163 226.61 li
196.636 225.719 li
202.109 221.077 li
207.589 214.715 li
213.143 209.364 li
216.345 208.33 li
216.293 208.629 li
213.156 209.642 li
207.681 214.916 li
202.19 221.288 li
196.622 226.015 li
196.589 226.02 li
191.128 226.908 li
185.633 233.006 li
cp
level3{
gsave
clp
[33.7914 0 0 33.7914 182.553 221.28 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[33.7914 0 0 33.7914 182.553 221.28 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
185.094 233.175 mo
185.094 232.842 185.327 232.437 185.616 232.271 cv
185.904 232.104 186.138 232.239 186.138 232.572 cv
186.138 232.905 185.904 233.31 185.616 233.476 cv
185.327 233.643 185.094 233.508 185.094 233.175 cv
cp
level3{
gsave
clp
[1.04398 0 0 1.04398 185.094 232.874 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.04398 0 0 1.04398 185.094 232.874 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
190.601 227.064 mo
190.601 226.731 190.834 226.326 191.123 226.16 cv
191.411 225.993 191.645 226.128 191.645 226.461 cv
191.645 226.794 191.411 227.199 191.123 227.365 cv
190.834 227.532 190.601 227.397 190.601 227.064 cv
cp
level3{
gsave
clp
[1.04398 0 0 1.04398 190.601 226.763 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.04398 0 0 1.04398 190.601 226.763 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
196.107 226.084 mo
196.107 225.752 196.341 225.347 196.629 225.18 cv
196.918 225.014 197.151 225.149 197.151 225.482 cv
197.151 225.815 196.918 226.219 196.629 226.386 cv
196.341 226.552 196.107 226.417 196.107 226.084 cv
cp
level3{
gsave
clp
[1.04398 0 0 1.04398 196.107 225.783 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.04398 0 0 1.04398 196.107 225.783 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
201.614 221.497 mo
201.614 221.164 201.848 220.76 202.136 220.593 cv
202.424 220.427 202.658 220.562 202.658 220.894 cv
202.658 221.227 202.424 221.632 202.136 221.799 cv
201.848 221.965 201.614 221.83 201.614 221.497 cv
cp
level3{
gsave
clp
[1.04398 0 0 1.04398 201.614 221.196 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.04398 0 0 1.04398 201.614 221.196 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
207.121 215.063 mo
207.121 214.73 207.355 214.325 207.643 214.159 cv
207.931 213.993 208.165 214.127 208.165 214.46 cv
208.165 214.793 207.931 215.198 207.643 215.364 cv
207.355 215.531 207.121 215.396 207.121 215.063 cv
cp
level3{
gsave
clp
[1.04398 0 0 1.04398 207.121 214.762 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.04398 0 0 1.04398 207.121 214.762 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
212.628 209.804 mo
212.628 209.471 212.862 209.067 213.15 208.9 cv
213.438 208.734 213.672 208.869 213.672 209.202 cv
213.672 209.534 213.438 209.939 213.15 210.106 cv
212.862 210.272 212.628 210.137 212.628 209.804 cv
cp
level3{
gsave
clp
[1.04398 0 0 1.04398 212.628 209.503 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.04398 0 0 1.04398 212.628 209.503 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
231.116 191.365 mo
229.663 192.204 li
229.663 190.526 li
231.116 189.687 li
231.116 191.365 li
cp
level3{
gsave
clp
[1.45341 -.839128 0 1.93788 229.663 191.365 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.45341 -.839128 0 1.93788 229.663 191.365 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
252.199 179.192 mo
231.899 190.913 li
231.899 189.235 li
252.199 177.514 li
252.199 179.192 li
cp
level3{
gsave
clp
[20.3009 -11.7207 0 27.0678 231.899 190.074 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[20.3009 -11.7207 0 27.0678 231.899 190.074 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
231.116 194.313 mo
229.663 195.152 li
229.663 193.474 li
231.116 192.635 li
231.116 194.313 li
cp
level3{
gsave
clp
[1.45341 -.839128 0 1.93788 229.663 194.313 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.45341 -.839128 0 1.93788 229.663 194.313 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
252.199 182.14 mo
231.899 193.861 li
231.899 192.183 li
252.199 180.462 li
252.199 182.14 li
cp
level3{
gsave
clp
[20.3009 -11.7207 0 27.0678 231.899 193.022 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[20.3009 -11.7207 0 27.0678 231.899 193.022 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
231.116 197.403 mo
229.663 198.242 li
229.663 196.564 li
231.116 195.725 li
231.116 197.403 li
cp
level3{
gsave
clp
[1.45341 -.839128 0 1.93788 229.663 197.403 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.45341 -.839128 0 1.93788 229.663 197.403 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
252.199 185.231 mo
231.899 196.952 li
231.899 195.273 li
252.199 183.553 li
252.199 185.231 li
cp
level3{
gsave
clp
[20.3009 -11.7207 0 27.0678 231.899 196.113 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[20.3009 -11.7207 0 27.0678 231.899 196.113 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
231.116 200.637 mo
229.663 201.476 li
229.663 199.798 li
231.116 198.958 li
231.116 200.637 li
cp
level3{
gsave
clp
[1.45341 -.839128 0 1.93788 229.663 200.637 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.45341 -.839128 0 1.93788 229.663 200.637 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
252.199 188.464 mo
231.899 200.185 li
231.899 198.507 li
252.199 186.786 li
252.199 188.464 li
cp
level3{
gsave
clp
[20.3009 -11.7207 0 27.0678 231.899 199.346 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[20.3009 -11.7207 0 27.0678 231.899 199.346 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
229.993 209.515 mo
229.993 207.836 li
231.447 206.997 li
231.447 208.675 li
229.993 209.515 li
level3{
gsave
clp
[1.45341 -.839128 0 1.93788 229.993 208.675 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.329412 .580392 .521569 ]
/C1 [.109804 .439216 .611765 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.45341 -.839128 0 1.93788 229.993 208.675 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~;c?Un;c6Lk;Gp@h;,L.d:f'ta:JXb]:/4PZ9he>V9MA,R9M8#O91qlL8kMZH8P)KE84Z9A7n6'>7Rfj:
77BX6779O36psC06UO1,6:+")5s[e%5X7S"5<h@s5!D.o5!;%l4Ztni4?P\e4$,Mb3]];^3B9)[3&ilW
2`EZS2`<QP2E!EM2)R3I1c.$F1G^gB1,:U?0ekC;0JG170J>(40/"q1/hS_-/M/P*/1`>&.k<,#.Olnt
.4H\p.4?Sm-n$Gj-RU5f-71&c,pai_,U=W\,9nEX+sJ3T+sA*Q+X%sN+<VaJ+!2RG*Zc@C*??.@*#oq<
~>
<~PEV2oPEV2oP*1ukP*1ujOcbcgOcb`eOH>QcOH5H`O,o?_NfK-[NfK-ZNK&pWNK&mUN/W^SN/NUPMi3LO
MMd:KMMd:KM2@(GM2@(FLkpkCLkphALPLY?LPCP<L5(G;KnY57KnY56KS5#3KS4u1K7ef/K7\],JqAT+
JUrB'JUrB'J:N0#J:N0"It)rtIt)orIXZ`pIXQWmI=6NlI!g<hI!g<gH[C*dH[C'bH?sm`H?jd]H$O[\
G^+IXG^+IXGB\7TGB\7SG'8%PG'8"NF`hhLF`__IFEDVHF)uDDF)uDCEcQ2@EcQ/>EH,u<EH#l9E,]c8
~>
<~KS>,6KnY57KnY57L5(G;L5(G;L5(G<LPLY?LPLY?LPL\ALkpkCLkpkCLl$tFM2@(GM2@(GMMd:KMMd:K
MMd:LMi3LOMi3LOMi3OQN/W^SN/W^SN/WaUNK&pWNK&pWNK0$ZNfK-[NfK-[O,o?_O,o?_O,o?`OH>Qc
OH>QcOH>TeOcbcgOcbcgOckljP*1ukP*1ukPEV2oPEV2oPEV2pPa%DsPa%DsPa%DtQ'IW"Q'IW"Q'IZ$
QBmi&QBmi&QC!r)Q^=&*Q^=&*R$a8.R$a8.R$a8/R@0J2R@0J2R@0M4R[T\6R[T\6R[]e9S"#n:S"#n:
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
232.229 208.224 mo
232.229 206.545 li
252.53 194.825 li
252.53 196.503 li
232.229 208.224 li
level3{
gsave
clp
[20.3009 -11.7207 0 27.0678 232.229 207.385 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[20.3009 -11.7207 0 27.0678 232.229 207.385 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
229.993 212.462 mo
229.993 210.784 li
231.447 209.945 li
231.447 211.623 li
229.993 212.462 li
level3{
gsave
clp
[1.45341 -.839128 0 1.93788 229.993 211.623 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.45341 -.839128 0 1.93788 229.993 211.623 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
232.229 211.172 mo
232.229 209.493 li
252.53 197.773 li
252.53 199.451 li
232.229 211.172 li
level3{
gsave
clp
[20.3009 -11.7207 0 27.0678 232.229 210.333 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[20.3009 -11.7207 0 27.0678 232.229 210.333 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
229.993 215.553 mo
229.993 213.875 li
231.447 213.036 li
231.447 214.714 li
229.993 215.553 li
level3{
gsave
clp
[1.45341 -.839128 0 1.93788 229.993 214.714 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.45341 -.839128 0 1.93788 229.993 214.714 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
232.229 214.262 mo
232.229 212.584 li
252.53 200.863 li
252.53 202.542 li
232.229 214.262 li
level3{
gsave
clp
[20.3009 -11.7207 0 27.0678 232.229 213.423 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[20.3009 -11.7207 0 27.0678 232.229 213.423 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
229.993 218.786 mo
229.993 217.108 li
231.447 216.269 li
231.447 217.947 li
229.993 218.786 li
level3{
gsave
clp
[1.45341 -.839128 0 1.93788 229.993 217.947 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.45341 -.839128 0 1.93788 229.993 217.947 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
232.229 217.495 mo
232.229 215.817 li
252.53 204.096 li
252.53 205.775 li
232.229 217.495 li
level3{
gsave
clp
[20.3009 -11.7207 0 27.0678 232.229 216.656 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[20.3009 -11.7207 0 27.0678 232.229 216.656 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
475.286 239.691 mo
471.428 239.691 467.073 238.431 462.466 235.771 cv
460.528 234.652 458.634 233.336 456.803 231.857 cv
456.803 212.929 li
456.803 209.794 li
456.803 208.907 456.33 208.087 455.561 207.644 cv
434.834 195.69 li
434.134 192.418 433.759 189.176 433.759 186.049 cv
433.759 173.062 440.225 165.555 449.644 165.555 cv
453.503 165.555 457.859 166.816 462.466 169.476 cv
462.466 202.805 li
491.171 219.378 li
491.111 232.253 484.661 239.692 475.286 239.691 cv
level3{
gsave
clp
[57.4123 0 0 57.4123 433.759 202.623 ]ct
/12 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,BBJ&EhO^uTd+TO,BBJ'F.jk#Td=fT-$5k-FJ:((U*b#W-[)43G+p@.U*k/Z.!VI8H(la5U+(D_.XRm?
H_N$<U+C\d/:F6EI\SNFUFq%k/qB]MJYOoNUbRIs14uAXKVUDXUbmh%1l%kaLnlqcV)F1,2i=FkMkrFm
VE0^64-$1"O/>%$VEL'=4d)[,PGUR/VEpKE6'nK9Q`!3<VaQrN7@L/ES#AiJW(<MY8=uhPTVtJVWCrtb
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[57.4123 0 0 57.4123 433.759 202.623 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~+sJ3T+sJ3T+sJ3T+sJ3T+sS<W,9nEX,:"N[,U=W\,U=W\,U=W\,UF`_,pjrc-71&d-71&d-71&d-7:/g
-RU;j-n$Jl-n$Jl-n$Mn.4H_r.Olnt.Olr!.k<,#.k</%/1`A)/M/P+/M/P+/M/S-/hSe10/#"50JG49
0ekC;0ekC<1,:U@1G^gC1G^gD1c.$H2)R6K2)R6L2E!HP2`EZT3&ilX3B9)\3]];_3]];`4$,Md4?P_g
4?P_g4Zttm5!D.o5<hCu5X7S"5s[e&6:+"*6UO4.6psF277BX67Rfj:7n6'>7n6'>84Z9B8P)KF8kM]J
~>
<~EH,u<EH,u<EH,u<EH,u<EH6)?EcQ2@EcZ;CF)uDDF)uDDF*)MGFEDVHFEM_KF`hhLF`qqOG'8%PG'A.S
GB\:VG^+IXG^+LZH$O^^H?sm`H?spbH[C*dH[C-fI!g?jI=6QnIXZ`pIXZcrIt*!!J:N3%JUrB'JUrE)
JqAT,K7ef0KS5#4KnY58L5(G<LPLY@LkpkCLkpkDM2@(HMMd:LMi3LPN/W^TNK&pXNfK-\O,o?`OH>Qd
OcbcgP*1ukPEV2oPa%DsQ'IZ$QBmi&Q^=&*R$a8.R@0J2R[T\6S"#q<SXl=BSt;OFT:_aJTV.sNTqS0R
~>
<~TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV8'QTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0R
TqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS3TU8"BVU8"BVU8"BVU8"BVU8"EXUSFTZUSFTZ
USFTZUSFTZUSFTZUSFTZUSFTZUSFT[Unjf^Unjf^Unjf^Unjf_V5:#bV5:#bV5:#bV5:#bV5:#bV5:#b
V5:#bV5:#bV5:#bV5:#bVP^5fVP^5fVP^5fVP^5fVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjW2QYnW2QYn
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
456.803 212.929 mo
436.273 201.088 li
435.701 199.289 435.219 197.485 434.834 195.69 cv
455.561 207.644 li
456.33 208.087 456.803 208.907 456.803 209.794 cv
456.803 212.929 li
level3{
gsave
clp
[57.4123 0 0 57.4123 433.759 202.623 ]ct
/13 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~iU?L!n+P`/p>YQ7ipZU#n+Pc0p>YQ7ipZU#n+Pc0p>YQ7ipZU#n+Pc0p>YQ7j6u^%n+Pf1p>bW8j7)g'
nFtu4pZ(c;j7)g'nFtu4pZ(c;j72m(nb;)6pZ(f<j72m)nb;,7pZ1l=jRN!*nb;,7pZ1l=jmi*,o(V8:
pZ:u?jmr0-o(V8:pZ:u?jn&6.oCqA<pZD)Ak4A?0oCqD=pZD)Ak4A?1oCqG?pZM2CkOeN3o_7P@pZM5D
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[57.4123 0 0 57.4123 433.759 202.623 ]ct
clp
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~i8EPOi8EPOi8NYRiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSrkV
io8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tW
io8tXj5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1\jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_
jQ,C_jQ,C_jQ,C_jlPUcjlPUcjlPUcjlPUcjlPUcjlPUck2tggk2tggk2tggk2tggk2tggk2tggk2tgg
~>
<~mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2
mdBN2mdBN2mdBN2mdBQ4n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*fc8nF5r:nF5r:nF5r:nF5r:
nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r;naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/?
o()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABoCMSFoCMSFoCMSFoCMSFoCMSFo^qeJ
~>
<~p%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"N
p%A"Np%A"Np%A"Np%A%Pp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4R
p@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4R
p@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4R
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
np
456.803 231.857 mo
447.62 224.434 440.02 212.866 436.273 201.088 cv
456.803 212.929 li
456.803 231.857 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[22.08 0 0 32.64 435.36 217.2 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 46 
/H 68 
/M[46 0 0 -68 0 68 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 46 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 46 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 46 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
##\B"<E<1&r`BV4>$>-8?!UfF?t!MTAH$-IAnPdjBkqL#D/O:kE<gN*FEMcej5g4$!p8Y.roj@G!p]+;
rp0XPrU'gWn*ol;rpg'\rq$Hgp@e7Uq"aaNp%A"Yp@n:c;H$Rq<``B%=:JD:>$G6;?!guI@:EbXracFK
B4tsmCMRa'DK#Mo#BFm-F`ug*jSn6Bk2tk+kl0fJlKdd8li?GOmKE"InF?&Jnc8:\oEY'_p@n@Wq>'=K
!;?*Zp\+ki;cQgu=',B'%9Zk<>?kH>?XR8M@Us$KAI<$^BP;*qCM[j*DuO_]EcZ>FG2qWDroF4Dk3)a-
rojLLlg+Q:!:BaQ"RkgKnaZVL!;$3^#PIfap\=OZq=O@Sp%7tPpBFMo<E3($=8l;2=^#!5>[:WB?smDP
A7Y[N$>*paBPD6tCi+'.rc&0`F*)PJj5]5"jT=T,kPj]EklU/9li-5NmJZGUn*fc9nc&(ZoD\@gp%J+R
q"X[\p%@\Eo_/%R##\B"<E<1&r`BV4>$>-8?!UfF?t!MTAH$-IAnPdjBkqL#D/O:kE<gN*FEMcej5g4$
!p8Y.roj@G!p]+;rp0XPrU'gWn*ol;rpg-^o^iF]p%J+Rq"X[\lLjfCp\+ki;cQgu=',B'%9Zk<>?kH>
?XR8M@Us$KAI<$^BP;*qCM[j*DuO_]EcZ>FG2qWDroF4Dk3)a-rojLLlg+Q:!:BaQ"RkgKnaZVL!;$3^
#PIfap\=OZq<IYFp@n:c;H$Rq<``B%=:JD:>$G6;?!guI@:EbXracFKB4tsmCMRa'DK#Mo#BFm-F`ug*
jSn6Bk2tk+kl0fJlKdd8li?GOmKE"InF?&Jnc8:\oEY'_p@n@Wq>'=Ko_/%R##\B"<E<1&r`BV4>$>-8
?!UfF?t!MTAH$-IAnPdjBkqL#D/O:kE<pT+FEMcej5f;)jlPXekPj]EklU/9li-5NmJZGUn*fc9nc&(Z
oD\@ep%J+Rq"X[\lLjfCp\+ki;cQgu=',B'%9Zk<>?kH>?XR8M@Us$KAIE*_BP;*qCM[j*DfH)'EH6,B
F`ug*jSn6Bk2tk+kl0fJlKdd8li?GOmKE"InF?&Jnc8:\oEY'_p@n@Wq>'=Ko_/%R##\B"<E<1&r`BV4
>$>-8?!UfF?t!MTAH$-?AdN*`BPD6tCi+'.rc&0`F*)PJj5]5"jT=T,kPj]EklU/9li-5NmJZGUn*fc9
nc&(ZoD\@ep%J+Rq"X[\lLjfCp\+ki;cQgu=',B'#$G,5>?kH>#%(bG@:EbXracFKB4tsmCMRa'DK#Mo
#BFm-F`ug*jSn6Bk2tk+kl0fJlKdd8li?GOmKE"InF?&Jnc8:\oEY'_p@n@Wq>'=Ko_/%R"]A9!<E<0$
=8l;2=^#!5>[:WB?smDPA7Y[N$>*paBPD6tCi+'.rc&0`F*)PJj5]5"jT=T,kPj]EklU/9li-5NmJZGU
n*fc9nc&(ZoD\@ep%J+Rq"X[\lLjfCr:g-`##\B"<E<1&r`BV4>$>-8?!UfF?t!MTAH$-IAnPdjBkqL#
D/O:kE<gN*FEMcej5g4$!p8Y.roj@G!p]+;rp0XPrU'gWn*ol;rpg'\rq$Hgp@e7Uq"aaNp%nCZp@n:c
;H$Rq<``B%=:JD:>$G6;?!guI@:EbXracFKB4tsmCMRa'DK#Mo#BFm-F`ug*jSn6Bk2tk+kl0fJlKdd8
li?GOmKE"InF?&Jnc8:\oEY'_p@n@Wq>'IOrUogVp\+ki;cQgu=',B'%9Zk<>?kH>?XR8M@Us$KAI<$^
BP;*qCM[j*DuO_]EcZ>FG2qWDroF4Dk3)a-rojLLlg+Q:!:BaQ"RkgKnaZVL!;$3^#PIfap\=OZq>'^S
p%7tPpBFMo<E3($=8l;2=^#!5>[:WB?smDPA7Y[N$>*paBPD6tCi+'.rc&0`F*)PJj5]5"jT=T,kPj]E
klU/9li-5NmJZGUn*fc9nc&(ZoD\@bp%J+Rp]C6dq<IYFp@n:c;H$Rq<``B%=:JD:>$G6;?!guI@:EbX
racFKB4tsmCMRa'DK#Mo#BFm-F`ug*jSn6Bk2tk+kl0fJlKdd8li?GOmKN(JnF?&>!qPpRrq$Hgp@e7U
q"aaNp%7tPpBFMo<E3($=8l;2=^#!5>[:WB?smDPA7Y[N$>*paBPD6tCi+'.rc&0`F*)PJj5]5"jT=T,
kPj]EklU/9li-5NmJZGUn*fc9nc&(ZoD\@ep%J+Rq"X[\lLjfCp\+ki;cQgu=',B'%9Zk<>?kH>?XR8M
@Us$KAI<$^BP;*qCM[j*DuO_]EcZ>FG2qWDroF7Ek3(t.kl0fJlKdd8li?GOmKE"InF?&Jnc8:\oEY'_
p@n@Wq>'=Ko_/%R##\B"<E<1&r`BV4>$>-8?!UfF?t!MTAH$-IAnPdjBkqL#D/O:kE<C6&FEI\/j5]5"
jT=T,kPj]EklU/9li-5NmJZGUn*fc9nc&(ZoD\@ep%J+Rq"X[\lLjfCp\+ki;cQgu=',B'%9Zk<>?kH>
?XR8M@Us$KAHlaZBP;*qCBJBiDK#Mo#BFm-F`ug*jSn6Bk2tk+kl0fJlKdd8li?GOmKE"InF?&Jnc8:\
oEY'_p@n@Wq>'=Ko_/%R##\B"<E<1&r`BS3>$>-8?!UfF?t!MT!+c(?$>*paBPD6tCi+'.rc&0`F*)PJ
j5]5"jT=T,kPj]EklU/9li-5NmJZGUn*fc9nc&(ZoD\@ep%J+Rq"X[\lLjfCp\+ki;cQgu=',B'!EiS6
>$G6;?!guI@:EbXracFKB4tsmCMRa'DK#Mo#BFm-F`ug*jSn6Bk2tk+kl0fJlKdd8li?GOmKE"InF?&J
nc8:\oEY'_p@n@Wq>'=Ko_/%R!)`u!<E3($=8l;2=^#!5>[:WB?smDPA7Y[N$>*paBPD6tCi+'.rc&0`
F*)PJj5]5"jT=T,kPj]EklU/9li-5NmJZGUn*fc9nc&(ZoD\@ep%J+Rq"X[\lLjfCp\+ki;cQgu=',B'
%9Zk<>?kH>?XR8M@Us$KAI<$^BP;*qCM[j*DuO_]EcZ>FG2qWDroF4Dk3)a-rojLLlg+Q:!:BaQ"RkgK
naZVL!;$3^#PIfap\=OZq<IYQp@e4SpBFMo<E3($=8l;2=^#!5>[:WB?smDPA7Y[N$>*paBPD6tCi+'.
rc&0`F*)PJj5]5"jT=T,kPj]EklU/9li-5NmJZGUn*fc9nc&(ZoD\@ep%J+Rq"X[\oC_nOo_/%R##\B"
<E<1&r`BV4>$>-8?!UfF?t!MTAH$-IAnPdjBkqL#D/O:kE<gN*FEMcej5g4$!p8Y.roj@G!p]+;rp0XP
rU'gWn*ol;rpg'\rq$Hgp@e7Uq"aabp$MGEp@n:c;H$Rq<``B%=:JD:>$G6;?!guI@:EbXracFKB4tsm
CMRa'DK#Mo#BFm-F`ug*jSn6Bk2tk+kl0fJlKdd8li?GOmKE"InF?&Jnc8:\oEY'_p@n@Wq>'=Ko_/%R
##\B"<E<1&r`BV4>$>-8?!UfF?t!MTAH$-IAnPdjBkqL#D/O:kE<gN*FEMcej5g4$!p8Y.roj@G!p]+;
rp0XPrU'[S"7PaLnc&(ZoD\@ep%J+Rq"X[\lLjfCp\+ki;cQgu=',B'%9Zk<>?kH>?XR8M@Us$KAI<$^
BP;*qCM[j*DuO_]EcZ>FG2qWDroF4Dk3)a-rojFJs6K[N!:BaQ"RkgKnaZVL!;$3^#PIfap\=OZq<IYF
p@n:c;H$Rq<``B%=:JD:>$G6;?!guI@:EbXracFKB4tsmCMRa'DK#Mo#BFm-F`ug*jSn6Bk2tk+kl0fJ
lKdd8li?GOmKE"InF?&Jnc8:\oEY'_p@n@Wq>'=Ko_/%R##\B"<E<1&r`BV4>$>-8?!UfF?t!MTAH$-I
AnPdjBkqL#D/O:kE<gN*FEMcej5g4$!p8Y.roj@G!p]+;rp0^Rmd:;ImdKW6naZVL!;$3^#PIfap\=OZ
q<IYFp@n:c;H$Rq<``B%=:JD:>$G6;?!guI@:EbXracFKB4tsmCMRa'DK#Mo#BFm-F`ug*jSn6Bk2tk+
kQ'iMl07L!li-5NmJZGUn*fc9nc&(ZoD\@ep%J+Rq"X[\lLjfCp\+ki;cQgu=',B'%9Zk<>?kH>?XR8M
@Us$KAI<$^BP;*qCM[j*DuO_\EcZ>FG2qT_jSn6Bk2tk+kl0fJlKdd8li?GOmKE"InF?&Jnc8:\oEY'_
p@n@Wq>'=Ko_/%R##\B"<E<1&r`BV4>$>-8?!UfF?t!MTAH$-HAnPdjBkqL#D/K>lrc&0`F*)PJj5]5"
jT=T,kPj]EklU/9li-5NmJZGUn*fc9nc&(ZoD\@ep%J+Rq"X[\lLjfCp\+ki;cQgu=',B'%p<(>>?kH>
?XR8M@Us"\AIE']B4tsmCMRa'DK#Mo#BFm-F`ug*jSn6Bk2tk+kl0fJlKdd8li?GOmKE"InF?&Jnc8:\
oEY'_p@n@Wq>'=Ko_/%R##\B"<E<1&r`B;+>$>-8#[L_C?smDPA7Y[N$>*paBPD6tCi+'.rc&0`F*)PJ
j5]5"jT=T,kPj]EklU/9li-5NmJZGUn*fc9nc&(ZoD\@ep%J+Rq"X[\lLjfCp\+bf;cQg!<``B%=:JD:
>$G6;?!guI@:EbXracFKB4tsmCMRa'DK#Mo#BFm-F`ug*jSn6Bk2tk+kl0fJlKdd8li?GOmKE"InF?&J
nc8:\oEY'_p@n@Wq>'=Ko_/:YqY(1l;cQgu=',B'%9Zk<>?kH>?XR8M@Us$KAI<$^BP;*qCM[j*DuO_]
EcZ>FG2qWDroF4Dk3)a-rojLLlg+Q:!:BaQ"RkgKnaZVL!;$3^#PIfap\=OZq<IYNpA+FVpBFMo<E3($
=8l;2=^#!5>[:WB?smDPA7Y[N$>*paBPD6tCi+'.rc&0`F*)PJj5]5"jT=T,kPj]EklU/9li-5NmJZGU
n*fc9nc&(ZoD\@ep%J+Rq"X[\nFc\Oo_/%R##\B"<E<1&r`BV4>$>-8?!UfF?t!MTAH$-IAnPdjBkqL#
D/O:kE<gN*FEMcej5g4$!p8Y.roj@G!p]+;rp0XPrU'gWn*ol;rpg'\rq$Hgp@e7Uq"aa_p$hYHp@n:c
;H$Rq<``B%=:JD:>$G6;?!guI@:EbXracFKB4tsmCMRa'DK#Mo#BFm-F`ug*jSn6Bk2tk+kl0fJlKdd8
li?GOmKE"InF?&Jnc8:\oE+^Zp&t-bq"aaNp%7tPpBFMo<E3($=8l;2=^#!5>[:WB?smDPA7Y[N$>*pa
BPD6tCi+'.rc&0`F*)PJj5]5"jT=T,kPj]EklU/9li-5NmJZGTn*fc9!:g'Z!;$3^#PIfap\=OZq<IYF
p@n:c;H$Rq<``B%=:JD:>$G6;?!guI@:EbXracFKB4tsmCMRa'DK#Mo#BFm-F`ug*jSn6Bk2tk+kl0fK
lKdd&!po:@rU'gWn*ol;rpg'\rq$Hgp@e7Uq"aaNp%7tPpBFMo<E3($=8l;2=^#!5>[:WB?smDPA7Y[N
$>*paBPD6tCi+'.rc&0`F*)PJj5]5"jo=HCkPj]EklU/9li-5NmJZGUn*fc9nc&(ZoD\@ep%J+Rq"X[\
lLjfCp\+ki;cQgu=',B'%9Zk<>?kH>?XR8M@Us$KAI<$^BP;*qCM[j*DuO_WEcVD+F`ug*jSn6Bk2tk+
kl0fJlKdd8li?GOmKE"InF?&Jnc8:\oEY'_p@n@Wq>'=Ko_/%R##\B"<E<1&r`BV4>$>-8?!UfF?t!MT
AH$-CAnPdjBa&9fCi+'.rc&0`F*)PJj5]5"jT=T,kPj]EklU/9li-5NmJZGUn*fc9nc&(ZoD\@ep%J+R
q"X[\lLjfCp\+ki;cQgu=',B'$<^P9>?kH>?XR8M!b,\NracFKB4tsmCMRa'DK#Mo#BFm-F`ug*jSn6B
k2tk+kl0fJlKdd8li?GOmKE"InF?&Jnc8:\oEY'_p@n@Wq>'=Ko_/%R##\B"<E<1&r`BV4>$>-8?!UfF
?t!MTAH$-IAnPdjBkqL#D/O:kE<gN*FEMcej5g4$!p8Y.roj@G!p]+;rp0XPrU'gWn*ol;rpg'\rq$Hg
p@e7Uq"aaNp%7tQpBUFj;cQgu=',B'%9Zk<>?kH>?XR8M@Us$KAI<$^BP;*qCM[j*DuO_]EcZ>FG2qWD
roF4Dk3)a-rojLLlg+Q:!:BaQ"RkgKnaZVL!;$3^#PIfap\=OZq<IYHpAaj\pBFMo<E3($=8l;2=^#!5
>[:WB?smDPA7Y[N$>*paBPD6tCi+'.rc&0`F*)PJj5]5"jT=T,kPj]EklU/9li-5NmJZGUn*fc9nc&(Z
oD\@ep%J+Rq"X[\lLjfCp\+ki;cQgu=',B'%9Zk<>?kH>?XR8M@Us$KAI<$^BP;*qCM[j*DuO_]EcZ>F
G2qWDroF4Dk3)a-rojLLlg+Q:!:BaQ"RkgKnaZVL!;$3^#PIfap\=OZq=XFSp%7tPpBFMo<E3($=8l;2
=^#!5>[:WB?smDPA7Y[N$>*paBPD6tCi+'.rc&0`F*)PJj5]5"jT=T,kPj]EklU/9li-5NmJZGUn*fc9
nc&(ZoD\@fp%J+Rq"X[\p$;;Cp@n:c;H$Rq<``B%=:JD:>$G6;?!guI@:EbXracFKB4tsmCMRa'DK#Mo
#BFm-F`ug*jSn6Bk2tk+kl0fJlKdd8li?GOmKE"InF?&JncA@S$2!l_p@e7Uq"aaNp%7tPpBFMo<E3($
=8l;2=^#!5>[:WB?smDPA7Y[N$>*paBPD6tCi+'.rc&0`F*)PJj5]5"jT=T,kPj]EklU/9li-5NmJcMW
mdKW6naZVL!;$3^#PIfap\=OZq<IYFp@n:c;H$Rq<``B%=:JD:>$G6;?!guI@:EbXracFKB4tsmCMRa'
DK#Mo#BFm-F`ug*jSn6Bk2tk+kl9lLl0@U#rp0XPrU'gWn*ol;rpg'\rq$Hgp@e7Uq"aaNp%7tPpBFMo
<E3($=8l;2=^#!5>[:WB?smDPA7Y[N$>*paBPD6tCi+'.rc&0`F*)PJj5]5"jT=T,kPj]EklU/9li-5N
mJZGUn*fc9nc&(ZoD\@ep%J+Rq"X[\lLjfCp\+ki;cQgu=',B'%9Zk<>?kH>?XR8M@Us$KAI<$^BP;*q
CM[j*DuO_]EcZ>FG2qWDroF4Dk3)a-rojLLlg+Q:!:BaQ"RkgKnaZVL!;$3^#PIfap\=OZq<IYFp@n:c
;H$Rq<``B%=:JD:>$G6;?!guI@:EbXracFKB4tsmCMRa'DK#Mo#BFm-F`ug*jSn6Bk2tk+kl0fJlKdd8
li?GOmKE"InF?&Jnc8:\oEY'_p@n@Wq>'=Ko_/%R##\B"<E<1&r`B>,>$>-8>mFYB?smDPA7Y[N$>*pa
BPD6tCi+'.rc&']F*)PJ!or>%roF4Dk3)a-rojLLlg+Q:!:BaQ"RkgKnaZVL!;$3^#PIfap\=OZq<IYF
p@n:c;H$Rq<``B%=:JD:>$G6;?!guI@:EbXrac=HB4tsmCMR_fD/O:kE<gN*FEMcej5g4$!p8Y.roj@G
!p]+;rp0XPrU'gWn*ol;rpg'\rq$Hgp@e7Uq"aaNp%7tPpBFMo<E3($=8l;2=^#!5>[:WB?smDPA7Y[N
$>*paBPD6tCi+'.rc&0`F*)PJj5]5"jT=T,kPj]EklU/9li-5NmJZGUn*fc9nc&(ZoD\@ep%J+Rq"X[\
lLjfCp\+ki;cQgu=',B'!a/]1$<pb@?!guI@:EbXracFKB4tsmCMRa'DK#Mo#BFm-F`ug*jSn6Bk2tk+
kl0fJlKdd8li?GOmKE"InF?&Jnc8:\oEY'_p@n@Wq>'=Ko_/%R!E)i!<E3($=8l;2=^#!5>[:WB?smDP
A7Y[N$>*paBPD6tCi+'.rc&0`F*)PJj5]5"jT=T,kPj]EklU/9li-5NmJZGUn*fc9nc&(ZoD\@ep%J+R
q"X[\lLjfC!;H9_##\B"<E<1&r`BV4>$>-8?!UfF?t!MTAH$-IAnPdjBkqL#D/O:kE<gN*FEMcej5g4$
!p8Y.roj@G!p]+;rp0XPrU'gWn*ol;rpg'\rq$Hgp@e7Uq"aaNp&=[Zp@n:c;H$Rq<``B%=:JD:>$G6;
?!guI@:EbXracFKB4tsmCMRa'DK#Mo#BFm-F`ug*jSn6Bk2tk+kl0fJlKdd8li?GOmKE"InF?&Jnc8:\
oEY'_p@n@Wq>'USq=XCRp\+ki;cQgu=',B'%9Zk<>?kH>?XR8M@Us$KAI<$^BP;*qCM[j*DuO_]EcZ>F
G2qWDroF4Dk3)a-rojLLlg+Q:!:BaQ"RkgKnaZVL!;$3^#PIfap\=OZq>L!Sp%7tPpBFMo<E3($=8l;2
=^#!5>[:WB?smDPA7Y[N$>*paBPD6tCi+'.rc&0`F*)PJj5]5"jT=T,kPj]EklU/9li-5NmJZGUn*fc9
nc&(ZoD\@^o`k-`p\=OZq<IYFp@n<3~>

%%EndBinary
grestore
np
463.582 170.121 mo
463.582 202.153 li
491.171 218.082 li
491.173 217.908 li
491.173 200.314 478.82 178.918 463.582 170.121 cv
cp
level3{
gsave
clp
[27.5908 0 0 27.5908 463.582 194.101 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[27.5908 0 0 27.5908 463.582 194.101 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
487.901 258.536 mo
463.691 244.558 li
463.691 243.469 li
487.901 257.447 li
487.901 258.536 li
cp
1 1 1 rgb
f
474.381 253.574 mo
463.691 247.402 li
463.691 246.313 li
474.381 252.485 li
474.381 253.574 li
cp
f
486.224 260.411 mo
475.534 254.24 li
475.534 253.15 li
486.224 259.322 li
486.224 260.411 li
cp
f
468.722 252.727 mo
463.691 249.822 li
463.691 248.733 li
468.722 251.638 li
468.722 252.727 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.0.1
%%For: (MONKO) ()
%%Title: (DigitalTechnologies17.eps)
%%CreationDate: 3/4/2018 1:53 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6HZLE%OsbL(b=pdo[V("8m;5/ZN_%F_R1TERUKr&P:=VMVCXZcKM?QSAAs$XM9ASl/J,XN`aG^67,fjFdS2jUc#r3>807S=n
%Gl6\_MlZT=DpC"c=BtglbF+d3$IR'q:,DM+-boK%5Fm;1\Ja"d)e5tk[:84SV=s3>m/>\`jmC[O=(e"lS)r2>eb.1RZfTN2Qa>S@
%r]krnSc/$%`PpA7B8_\sZbOjK7pj5RfB3s>p!r`ie(\#o)_Ud?o#lNqTsps$r649ugTTI3dHf'E/IdNik'k)@a$n`/VLdp:J,OG3
%p<Par5Ngtg1XKe4F3[fM,JFS8rjU5$bgBK`\p_8;GC"[`H[^*/*ITrSoR',XS?4^,T>&(MQ1<(Q>4gkBk;+sbJ'WTD%OF(3(+g`F
%Cir#92d?-1qRj-/5?-D9#sZ%iT*=KBl`XCR_b#PmAg,TpS\AKU3^Cf"4@lRA+#\&p?(Bbh(o6$OH(;Qg0%*8e9<CnWiJOgrT8.=X
%.QTLaZQ.0Dk?3!"i3_Ws!1TV+2h1dHp.q1,2k+T:o?m6ulgqk)4:,e:\42CkH%3*0ro<,9/M1/cZ;/4)gT*9&$_$/GqYK39J\F9;
%Xmq1qlQ8$oKX"SpmfA+qB>rB8rU0X=PLH-_^dkGrr;PO7ndeh%bQE8.#j#@4&5'*p=VF,U;k-upQ^*-$:#^T6?/*VSbh%N>^V;u4
%iV`7>:G>Mg.cUHfp%b'XDmPoJq8P#49Cp]a0-)FbqY#)R=U/j#\'*Ye'O^(<IB@qqiQ(\2^UlTka/Z[*/+aon>&7k3X4,hP04uoK
%O9dCeRk9*'h;$@aM0t<Wpmr,4G9+CNQaP=iI!UjgHB5ge07R92q/ps7,udMD^SQTu.A9p;lZI'OlVOMF:oC(<r-Htg>1]GdI_p;.
%>:rci\\tPl-2t2TU<\(E^TQ0;na#Ku.]h7mOpkNK/0g<Ajf`p:rnVpI*?V57H/Uib@:")bni'5LhbaWB_KVSu>n2,to>5_LL.U>c
%RZbXQVD0NIkIKUX'OtJ5<Rt,=J81Gi^8&u"NNrm;*k\S]XJIH_^<<Q4H^TBm?UcFAoAD-tC)-Q"C7$6[UF?5>bZt.EJAVnrL,i:*
%bL4JTQm9?*2b[';!8hqg.)L1-_]82PJ19\+M^p#;T+r/en.h-:k[]LTp8B<r=4]oR0,*9[bL!%tBtJskWmlNsK*bQu`<?!ZRCW55
%F2W9%'3rQtAR4A.Hq,2NOC#+m?7AI3:\kVrYNT5RVW&U,?;O+QU(U%OXfT6q:Y&iuQGqn#=2<>]am`00p+OZ`"7g[3Vh5dP(!IHG
%b5t6KC]5][4A`f*6a'SV*U'RWej'Ill'2GW9]Xe1CoW^a5eF2l!"Fmd/gnCt/4gk"*HLOM)O=I,2>duWassOmF&)]kI*028jS.V3
%rmC$d9%!,Ws)OF_LJR_IMYpdQhg<b#7n<-JiD]_-(@q@l.KAW)eOk^R:\f3^/AD^fo$?t.Pg9Gdpb)'$hs54OM)i/O%+3IY+9'6m
%m/JjnmeF,I5O%k.U3f+o-L^3td=XZb!?V1!qu72tqP2ttkfR*]gA9SjS#oHphG(c=Im+))pO1H`4=jdh590OqCuPADM2^TrGdq\P
%fNi=1%\K"lf\JdJq5I)&n(YO(i8At3puMPN9OE;-dbXM+GM'kmm8&Us$++EICu`;Om,N_Ch1%b7Z2Jen]>3UIqS/(sliM=s@nO"I
%COQ.Ym(s8!_G9eKTD(mFHdUt#!6uT4j-MqI(tq1$O"7t=R?lpT9O[a'iV?,Vh#j#3Nj"">p_^YNV+b[?X$C#m<eF)2#1iJ5:an2O
%$ge!ZKkb->bU2a]H*W+-!`NH.&OMgf=4"r-_a=4PE'K"]m%VM59@r+OLrZ]#-Fa\LH>H[i2@Nr3ER9JFpFdT:n&]_Mqn5ZjdH3]I
%H-F]"@.*c<V(j:smK5eWqF*t2NHJYTMMs)eZ"!ju+/"::aPaP3io/*r1eqJE.p\)cB$l&>Aq91L.kRkonI(TS]g"n"*H4;NJ)GqG
%b^D]MNBRkTH"U0%0al&=XG/D<ph)ir"UbA:)>uQiXmo?+I5E*mI:o\n>e1[f4$[!,b:Z>W(hO_XU.5)*Jr-%*`hO=KkiP'P0nhAE
%Cu[dNImT#K7d4EP?1\M';.F/MZNr't6U'`bPB$jOEqbt$pJJgQ-0t`#Y5'!h*<Y6JIWcko_7E,L>c;npb'-Jk-:-Y`(j@Vc8FP;J
%a2)--go!\Ulgk--n!I5NZ3s?iGCQh>Q!LI!>`T!a=I2Lo9]3eJ264@A7>i&h0&7RldHZruNPoXCMI#]fs4KmR#33RH^!<[_<2.Jc
%@>&#lFtmrtLTlaCi;=6d>k>N>bd&CT(,`<?ecsMYk\KQAl"VNJe:R*79Z1^50Scrn%iG3HQYnpGD0@W6AhCb"gW/ZT`si]p=ZP0P
%TF[bE)j7$Dl(ShtC.,8'ogkt>`Ec)MM[fuuNNK`eOcF]$];T)>+W+Va2S2N4mDR$.ZEaq:.matH2XM(g$r@/0K@pMU$nlPRq]g6a
%44o6I5g.g+0(ooqoE0[)Fd`Q]^Ln>bgYh3201mc'k-q<@NlmK*\N6:7X(3NDL\OKt"*+=>.*`=+DqX:j'Rd,'Jk>N%g4lSOEO7pp
%Nd.>S.)?#tN(=fBs!fRqkY8OQD*/!*Hd&ScYmX]c2;,0qIU=UrG7Y4B'Cl[2)Mnl2(FqcZ@M^;!$Y8NP)-S!r?)*R6==j'<Sos\F
%aQ$CB0"X*1<?/O>]r3!qg('F^Y_t(!JekF9]G%D5TU"H=Z:O<j!O7H&W<NcWO(8MCQ7`\kJ..'[P_LnpOnWN)rMQ\U!Oa.0/7CE%
%JiH=L`8Q_NeMPn%,,3uuiPHN.+iI=q]['>8Xm2ld$"^YSZ94:U4;.(+&PhAij'hIORE!kG:`IV+mD:70%g<Pd5Rf+ap_*!=K[LJ@
%f#+S\DXce^g;VY*a0p@;!)mODL0)85A*C]8raOI;8n3g9'O_5;JrqSI;,MtsKHsi=^T_0^Ki1<0[HR-'QLU*FM`R`RNpnI(:7oXN
%i;Y9<`4]01&@X"2,%GN_\JeR?`=$lp2,R4CF7X.OT!@]+ehJ6Dj0X`U"*#upW-H.C!M1EQ2^?hN?\ABQg:+&dkZ5AKK1AeV19Jqk
%FAl$>"LB">(H7L4/ZLphANYNe@=$q;Xml_[dAmIL^#oFhSa%ffYJL07;$5>W<d@EnI2$.ihG`&c^U/0((V=WY*%Tkd)E8`K$[C((
%lasukW`9NMco?1MO]2K/jX*5d=9W"hdRN5BoK"Qp!^Ai<D+r1P.G4kY4b=KOWtBYOdt?0OSD\Xl*RnbN(JHN^EISOJ&F2:W?AR?k
%Q@WWVoS@>Q`UTuN^b,c,pTTQiPh9O\(d>mXR[YW3$UN4B;#i28O"b=I6m5PE%_oXt=@[;"p9"qm^0is]$;4DB7T./aK(]OD<5u0Y
%!B,m.kIuQs#;V7YD.WE-K6tYo#WEOh-or4#11-=nl\:oj#S"+TFcFOXQ!BPVA<s<mIUoPP]"n_sOn=#kp>[4?0WJm[5SgmNB>m31
%cAJ"CEENE?b2I@,=B)+G6,Mmf(51>sg6c.dJur6`$aF*5HfS[U"YbqQqRdZWCQZ!J9h)_6K/XSVAJY0iL?P(<CR$`:`Kh(qMb9!1
%9Yh+LhMiA,A_hr=_hQm`Lj?4O*NOb1(/HA^.4#OH?:eB(.Tim7YWE`BeDMFA@l-ifO'+_.JAK$ciCakT3:J,KQp;2e.g4T86b^Wf
%0umB*`fJP'O6UsM#"ekQ<5,FV>tP[:_(4E1raU+kkLRc2/E9Uo6B#hL:;dP_XfF[@oL<eFTER\cFUZ9JC<'DPgosAeE3BDnkRO>I
%<^hG`3<ff5oI8SX*a*L`g,ts4LgtK08B)-_"?U).q:BRP&BY:GZWkSA<l^<R>7P*Z4X+[l\ba8MmAj@r@]+%$?npZ'O$kg%:ub@m
%A$:2476640$i1M&p**:um#iRAS)*oL>^),Un:hjORTh><X.NK>i]`d_a27ID:Jj\6]4_r_,bh6bX.fF\i\$`c5f]6o\k/)R=U)eN
%];%Dn#uQ[![`<LmZ'lXhdoHVmIs"'mO>9(`fVkUHata)WKOliDF@NZsMAKLB`eS:HO4,_7AI-+=VI2-7dj7NqJh6f8.s$BY;H<mI
%Tj\n2kk"Wq%p^JT6SPKWg+$EZ)sM+)=EU*'ZAc%hH2*;WhaVHM$r]t)RiI8K7A'3LnY*dU-=k(:EHk6H6kLT0<MP,45p]6nD:mLC
%)<,0?a0>\lT1@p:CZ5HK`IJjnfci=>)1i7UQB;&h=bpY$-m4nCD2^Y[680TpLg[aS?7D^RPE+CD2"kW$#I=doWF\c.Mn?BUCd\M=
%Pu2e^(.q7(m"cU")_ZLd_i#[YFZ!k"e:Rp2(ir[IEV.6ZGi?mPYRA:*8$`TCM^?-p7T2#5dk5VKX4">:Ps&TdD^un(h0Mplql2qA
%&M#DJ`Wq[foQjiCQhV.D@qY4j@i%:sW&3H])_sq3Gh1Wc>G#ZO8u"E5fITe!=k0naSSQ=]-X(lcr30VO[d5,2p;N9Ra"ETfgnA<7
%M`,C%W7ZWtd0tFLg;Psr/1[eV]:Rm5Y>rPuqYCg7:;J2&R,5C(3'eq]i^)p?(GG2Y\nSUhIf*Mg0\j^I0Yo*#SZ(kjD6]!K2$R74
%lCA'6Yq\@Pj0I9M28Lp1k95s_O(B-=nid4A7Yb[Z)9OrD[X&>?ii)QCh2g-e'nr$;)?fF9%^;d$K6C\sTuM`;`<04s);P+$7%!:K
%-$Ep.VhWO_Hr/g1PZT`;X&?O3St$RUP^.GiT%"\EcYi>6R(8Jn4ITP(bLf0KLJ&M^n5301&?7SL,h>U"5sM2<&RMlkFiqP.Y:jHQ
%`ka^AXXF<.X^rJ-pcGjA]@b(Cq^#"ENU!jelnBB4mgp2H@c@qr_((oA_WOtBYSDpFl.Q7n9OdD&>Hdh**BY22(XM&%C9!<gh]Jq,
%I/)h*s2]$'XQhiGC*1Z]/MgC:+Eods0nERA#&BkNW7u=slD\2mkpp\g2UV^#Mb,/cU"j7(O1"/!B%=346!uNR=t2H60p\(m"pRrl
%2t9sLQKgs:1=`(7PbNP7:J%TolisU45VgfIia.d^^=L:^>FVZZ4_eqb!k/&&o_.8n)NB?"D)86Bo,IV1Z3:qU<qjE./k3+*(O%Lf
%r`BR<e^?.Rj$pIVES86rcdV*DL,+d3%3-EKmBSZ<Pd`%j3VAt]7t"k@7(c!s[n!\27?%ge(BU\u3m4D%)Z`rJ12L7;B)eE14'42M
%7Dm!;Y;>%)D<*eQoDsSo"NqXWbmrJNoJg_4,K;h'CC-LrBMRAdApBB;LmHksVsNeaK*+WG<c0[sO1jD."4`$P,kNc>_nf=>\6?]<
%ApNica;Ue>9lqUdJG#kdY]`sel5!#S4(2%Q^AK[pho.3AUL,"JFSj_q2H#f]oPC9="2&!8peV&Ao_2j(*S&uD&k5TXaCT.Dr2QB0
%ghhur+6:%IQL:HR[VtCCc`8\GH6h)TDm!9mLJWpf;X5%h'f``mrZi4W8_ddVS=6$[`anRIK7=HMR)6EdVSNg(mK7TU!%/@:a,8I`
%0dU3PO-iG&1otQ28bB!8lVppimm^G]m_jg7)C(+U#9<"kpe.tIG5E-*a;,Xsa.)5()Xq;2:5Ir8*[5Q!MC+<tWnPX:+/??<hX<Qi
%o>%2lAfA8a4.sQ4n#NC5#.>:_'S]UlVDgHp`<6QL:8Kca;7Ed=K#G^La9*9uB^$R5CBlF3,6t9'>F8j<ZMp*+o88)<:G#OUL:n40
%WI1Co3QF.g5-r%]k2KlH5sMVtZ%lbp4KuX1iXspGV!Q%'<$@A-l]DGFHFmsh)l_S\H?1G0hLlbBVHl<O@14[4B*B2G3o2r/d45"q
%c.]dS.2n\Pb*-eRVE#+[qi9>m9Y9MNBnp+jHOiM%m&EC`/R+HjFE3J2;+#I2-_Fkk@TTAYA/\mLN*rku>;SA8lf5:/dFSBi*MmjC
%S+VGHalSL$`7-hDjET@4nACQ0ibR-H3X-SqK>F!1We.#I9jAS&fh$l`r&4$S3pWZ^`LRq!iTt$:Hp4)`V=idthkNg.nK9\=lCG+#
%/2hZY^R%s-Gk("B`9j<hAe09uX\/CpK"9ZcDKEn^'<qp6N<cZ&LCgO-Jq;BW2K:+qIiNXZU;haWGOJ3qd+NoA<Bg/^M$^<49YgXX
%KmV$0joa8T_<g4B!Uas2+2fdjC)E"D(X:+k8X"-Jg`O`e`pD^$Cgmq/r9AfZ7^#$qkmmJ,&b6cUmRm+2of4!DHl/>tjP\:XfYsVH
%SGZ9(5F>/]c2I0\n(YQ@R!fso/gaG-^q*%HqXt?s+j9U*2XE)I2@n05+*Z5uM9tBF^ReLd8=kn4q'cC+jN#;go';?`p"At4+29hM
%I"Rn=oZ-(D>MLl`HRn/XMm'=f0!9ZM^CJ$Jhd15=hnT%fmcr_^Dgut"0:ZD/k)<)#q47GcI/ETUHhube?=1BqpXSC"=.as4g!Q:i
%ml%M%hOND.?(_.Fo4I^nn,Al,q0_nhT=o;qp<!6c#Pq%n^7paqR&HPS*Zb5DP<X`%J$?hK!P_,SO&@?<C:iqQIX;"]o6U]9ou61W
%l1L#8^uI1FRR=F7$r'6ME<I9aI3q`SdoR#8C$NI[b;?ZoF[F=UF.UJVn-`R^$2$+P0@Vc^ZFTq_+_+hq^;%7.4-MmYi1Q,aJ(e.4
%^"Z@>dd/+Z=C7S)Dhe8efD9d>U2R2Qh@Z!tJ#]XC!4]L)o;=se3]Xt1C#[Iq<\Ro1dOr11WqaLAcoYUJfpiNg/0311lb@7Rc[Peb
%^86ZVp&=XKm>nTm`THa9c%i(%c13%h&YH>Z#NhTh.&<b.#.?Y-\2aNIqXiU)k@_-?p%t4#B7IG&\p/fm\q[jIM>:ahK//fT)-b3Y
%knCg"1B8]lm+V"#E&$&K+`P'(^ARr+JDplJlMSF,;k9&56/OJfU[),%d/RINd_GI^\>O?r4-`<27`l1S9]J=TRN9.'-]u)4(>N'U
%oj:LO7@p$!G7a@krU\e4XtJ"<h@?&8N]AdH9,P$nMMS@"a>uploHWD`XO0M=+u1enra9Ak@`,</WI]a6=r%RCg?J:tq:WaLp!5S+
%RtG8@lSDk6D>;jX9[0+&pFPoeFs=FmLD&lG'NnE0b&u?3-B,?u/ft5TB0T)Jm.]\0DeP*5hk/eD6oh[8iJ";7l-KRETb0%0BX7)^
%0f8fS(d\(co]oP-IeE!T:WdKng$72hG^]GNSCI-`BdhZu/W7On1NgsO0BT@F/k.FfQ-(qBS8\o^^-]Mr;(<kNZQ[a.T")V)RCV#1
%c)733l_gBQpJ4"F+[qC'/ubW/-nWk&XjV2mVfaoi=@C/>@N+l,%X?(*j=VP9"[,Me>h6m@@uI+YEQ+8pPYd(6Pu9Yh(A'0$MOn=J
%L[#:4QBS*=0$k9ZH'bLNf,\uAHC!BE*\rG\@sZ]rL)s!K47`:PI\K$uo;A5Y5<L=b`;b;&(+h]+"F:\4BP/*':4->JTZ?S4U((ma
%Nl-aGAQ\G2FL:Bp&4lKV/Kt1j8I3<XqdVeLLnu<rIJSf]B>V2k\J3Cp00'5;DFn3Bbj5e]/l@BLopr@'qHDRK>n@i6>AWGS9cfXQ
%)1n&TRAF'5e'Zf(boi`rT$u9WBhjD\7;1\[(JFGQ0RsJ#(5,d1@88.;MhH*rg'@ikU#Rl$jc\!^LbP[pJUp@5-#1ItV7;Q+ECC8C
%N6![#`=d5c]P,6LBI'lcZ;bt?iikt&9hU-[kliY87n^dU^HE_T/WHOE0cXqa`ECR9FT'Vj=rQS*1DNmTp%k&IeTsg5@Z<2@*M3DW
%CX?#`gt'sqXgP"GT^qXCnVWq"nUd>Wi;7LSV?JtTa77VSNoP*Z"HVBDV8o[9EE$;I<_I`SX!;pO:tI2#BTZ=-=L%EI)Xb`ld[PtX
%NDjEd,G\Kad6eVV/5'1;AQmNf/H]L=>7uSqN\pCIELdcXLX(qUTo#ICC)[\0Ogo3!)X0ik&3+r/"a%su4JK)5d*/D[e2u=H_/.]C
%L*"R!6_J_5JKFqDX[;$taL!FN=/Vfn3o\[nn;mqHe<Km+oirGbYeHX_JKLsTTaB$ob^T0NigRENR1m8%;@C_(&262V=ESLe%(M4[
%(oZ]oEmeK=$,f!%R1Vo`!Sfm8m:5$\gn8T&[H&=BiCPr<bWeRd;olHlF^F-g[_K`;5p)$8+NLLPqY7?HqBqS7e0*WNXKp#M>*FHV
%UZ^&)P^:s[pS$sd<EHasbUDu`A<sL=,m*Uq9[GfZ(nW[j?:XpIY_.0pL.m8r,Q>$BB1^$^9F,?gSU4u9KL<\m13"q0L+:djc0'["
%-<0Ip'm0mn\LU!ggs5,?)+U0P/JhmB8&V8jat&C#V+;go,2NLOZGb-Ed\>bak&Fk+6lRu.N^gKe@NcG_nY#nn>U.csOpb2]5Q<&$
%_ZfYM,NaniNNM?!>4BVo<,+G]L4oqYVIR>sa5@!'&mR`0bQrm4n/R`FFQ?jNT^VopSl=,,SNTWLeGj^<UOHA8d8TplK[cHT>7B$c
%P-6d,94XA6kuHi382-38gH:EJB:djK?tD6,D$SobWgb[c93m0EbX5G?Yp_O=EF*\V%:Apm2S`tpG#nsu;;!<`Cp%SPi<BTW]7`47
%?8lrW;'0A9TmgrJ^E2!":X&IZ[_BK.rHG&5f0$-R067((r[jLe/:p']kC@`S7F2T"*4]T&<CKflL-X#+5>oUa$9e25M6>)A\7:CM
%h4!CZAGhV%-57d9*_Lo/I3+n0OG<4\2D'$"dY!QO,="jR1t[qE_!,r2MI94Z4di?O^m_5b_K:Ip1D;p-*CMO[.Toh>`_`A6Al'-a
%/$$:`RN<+M?'93D__XmW<mb1.#A`smpt%<GY>=ASaA3`QS7&.L5m7q$s'2jC=OI&tr#H^P>"+.A\]]3C:LMQ^<.H5/+JfYo_A8h@
%).f<R@0OSEZ0#H"M4(NN?[V=,0cqjGQMQ#[iNXGJj6qt-+ScXl3;$_M_Z5@;.m1b1LO$hUX92bm?tH9!=;iOcGoj$q[19Xo@1EB$
%AqeY%\i;U,!ZO^mm$VB2UcTa1?YF9I0rpVY/m3d,BeT%kA$`8'odoL4b'X%ZOS0FEC=!G;D'WT.PPJX5@7'&@Nqi^4Jlk=IA7iXN
%U4pBDe*r1#60OGf5;P[jppJ(M8^E9Zk;BJs(='2Q+%Qg&YTf!uY]XnQ's$1e)F%s'<SJ%cj_*-3O'&H<2SWiU?8VGmRX8Y+rJ:,g
%B]s6_b?^Yr>6NF$nr@AJ+.H*Vic4Rk[i`%7g;f3p2gX+o-Hj9l':L:,:MQKV4Jd>UC>$!XM!l5/h_"aQ<j__[AdFrIpp?hn`$sI$
%EUShQOicf?/G+ip3C'C'-#]V?(b6YW7,eRb#u"U83#F?kbtCWBA<VCc>JHWVG#'Zsh6bZql=I:mjOd,b5lr.saBk"@8UXhnFbs7W
%e30s4G=Ud"Q+9o[<k0`D[q!NaAT'uR`St#%46EY7jm\`/GfA*Ua_G]DP?0;d$d2hrnoi!8[]l!-q9%,cUf(nh66B?^5.&9uiW^H6
%A?";Q\;saP6AchboQ:#mHH@U6Z`m6,MP?B)'8%-2M7FiaZ^NFTM-6\;Z8]#K-R+UXHEK`MC;';pQ9;9miF!P'PjF/OZ8"5R]?8'%
%QA9(6LEuh%GmK8:.h,^../%T9Z@>:mZ<SZea09BeCaf/:,)2&0Pg!q[Q]\Y6//nsi`!&fNA!V\3je#)XbYkWCWOGc^-h8mo0s/la
%I:<TWF0W+,P'%u93qZr6<T6um<V9H_Q$L=F8T"rc.eZ`=LT:3KD"US@ahiIHDGmLj--Ks)>I&'CP)X&+=IO(u1hq#7Y)VMsnGMI2
%FMZ6Y&]Kr)\tQ65:XXA]/Es_J-!b=4Sa1.;.dIip=]]H6hPq\bGA:WJXN[hWM3iM>BTRIub\O$2+SSFtOef%`0+IK5m8'pEfN&mB
%9>N(a72?C(E%+iQ?tf""a1PJ7[dp[qa1_'65ME9ki=^8Y;nY4H>F@P)Tu<'bQn?:elUBE-J8Is1grn87\ot2U3c\[^X.8Q'm$+U=
%AaDf6>I&:/a$(rB7oFT^87C+CiRCu-N>u!B'XK+6J9YWsS6-E)D;*1m5oPZ(>359^Tsd/L,BsrM\\&hk1L$tNc#D:XB9CObUT9n+
%A@5$GP3\r.&!5SKm&lLu/A%sb9(YW:];VjC;!D9I[oN7[9(5l9pJSYdj%_2?mCfDIj,Wu,Ve%O3S"6I+n#=HR/(SU!&J(6%qrRcI
%ifBo6rA&k,l;'s"C2r"&h.PR#Wt/13i'3]ci8YfanK]$id+5Ct+aEUc)?R=UV'.\j^AVut4@f>cFf-2/FfS];W*@h`N9J9hCgO`b
%?NeCbDdr<-2EaBFbJn>SqT73ZVm,3_>32XOM[suVX/UoXid*b!_CGTXPK"D&jU(BJ;/<i=K=<!9I2%M++8(KuK@\;@@qORjock4^
%Eki>KcloV!0H(J=aj\n%W=^:J1e<T/3G-)P&ejh8i]qb;9K1'/.\@@bL0c)Zk=.Z.gj@OZ6QYSiT@PJ5Vj42-P5D0@e+K?N1\f94
%qT)I_S)41`hK3^E"LtrnJ%A_5p#&[h"FjIMoqM0pW/$pdS!@_IWYCE!*3WS6J[[H\Df1H,:mHa;d;;FPi=4537e@*-c'6dWopO5%
%7XJiMeFnsPB=q(rCeUX:\a-QdE`.g<H_N!@F^r9G>7sf"Y58$VROsBHaNO&)b?s'UC#mC'd\4UK;)P;l\*k,5HQr#oI2RYbj+3g#
%ZKe&3*[NE5&-uo+(s]Au'/Uu;#/t.c,DD,K,Mlm60N[<83<[BBGanoW3=Ut+Wb(:@f3k;`euIUZW-\]bnjMXZ['%A]QbY@tD=ju;
%lY:SK#*"Q5S(RL0qYbtoLZ#uHJOTbNcdB\;fQtR;HD/4XkdYohp#1]Re&4,ofI#3<37TFT)X0X#br#)h[1>nDq(tK(*Gt%g@pQ:i
%n462e[C`[rfBR6`%o'6O4YP'[(nWSU*:HEd@)(R.Pe3l6;DDYX*e@4b"o5Z@Hf5&Fq=Sj/nAMn;f^ZDOFTYDtnZ3@;-.JS?cFU!A
%7iQeA\Ei!NndWuiNK^\-O[_W_Xg:rb,*;7)GUHpD@ef`\#rN-PK-A92ee#s^M)u6-;*uc-2uW/%Uf,&ZCM5#L=7V^B_^pRm.h0$7
%;:GhW*bk+TVo0i(R!=;B!mfUO8Qm99%E9C)0hLeJ87i=RXC7MS0XHLG[_\@ESgh8>T^f%jgM"-8Utm)u::k??DPGOU/\de2dURWp
%nu1_G/0'thQFkN4_rjng=au`3kbJ-Z't:^2p=B3)[.MPHY\ZIlqV/mPn+^UVT6Qn):\[#\\8J$>f%ShUB7oYCWgU?1`(kGsnL'3c
%NpjE&(%Ih_-[i8>/m:?N+D)#Im"r,nHpKSnf%NQ65??Tg!Ss<"Ht!!0ZNb>*Q3@PI?*fR/__MIQ797Po_S\o)QLHR2L`uI5!Fgl*
%&'9=t$#)S`"2n4[+Ek\SJHu\m'%@>dK6;VC\a(KT4Y&(<_jOT-h\T=4U4tEbDq(tuk[V9#L;f"9nsI>O3``j*lh(;TXi?JS<@9sc
%K1fiZp%h\\and9jPu8^-n#MMYLP>#K'(_/[L!"B[qiCTOW!>;_RM6H*^@D5\'OI"=.q(rm;q0gLlCEOW'u]i.o(_LQ-O9DeATf&7
%L`\of+mEa?T>D6Q?"h%2&YH%aTYI-cJ"G[59cs3ZY[,6P#QJp/SCE=sHZcmP52q'k60tEY@Sa(mHElq+#thT)K'g11Xh1Zp6AbCX
%!nr\mT`%C`g=$V[Y(;s5<Ob'ST59b?gO"L"fTn7%/Z_c#VB^)PlR;gjVdcuPf=,%*Lq.>8"5P?AgkDNcSsKd3ANi^kFObD.Fpf)Z
%'EmQh_DB"]X7`*M6TX(L5A!)+*$YG&=V*-L'+f=!<YB"!4tV!i!E^T!Z=4`um.DXH-IK51MXHk'"4Qcp6[QW\:3)L"gR\PsQ,9k2
%l2jC7N6j<WpaC_\9k\aMHgeL*K#!-QfJ7BkBVaoC:hTk4CPLA;C&(;:h[6X<5gB%CBWcXIcLVEIoM[?%mF8s5X]F[G=AJ51UFjso
%\Clo+m83K1n(OIn;/"_r(g"0j[]RoZRcV,758@gSQT$".Z"I^?UUGAVbE%"r^"]hdLDY)h-sn]Lim)8]63kBJld;rT8&L3*%BG9%
%NgmppSe$Ua8&N?%_t\Hn0jr16YoXBJrUI*:(8CctYl8='=MjIA0KC%0*"8m'_OMYQM]+6MqC&o2hIUJHGCO%3l])I:NA5+^SecO9
%\rh-jq_&(f.`SF1LN)HjB>8(!%PksI<p._P^Sf'p.W,f-hho!Yp3=G&hP,<Fl=g@Ta&f4+6I$J\.p=>J#Tbr@<V:U0^qVlL\-)We
%:uIL2i+#0qbFq1U\NjD["'0XS[&kANN!ear_"h(q)sl)t73bRCG@/k?^6js)_NAHdmhrOiMb276"8iqpdm^WCCmu@3#slL=jb#kM
%k1#mH;s0#ZpnmIi6p`Kl0B=`#cTg@U!)tm8"`8s"$M0G&Pd]D<`)pjM0-8f`Y@_L8V_tghltl^Kpq?'^L2lkB&2>j7/Qc-2+isEG
%%V1Q!\1^JRn;+_8*cI*@rb:Kd5nO-uXVeZiKO+!jm)3\"UJ95j1K)tGT!sjG]5d&?f7.0BqK16B\qum1jkWRHEo>_&ebR:'l1oKQ
%dAOY#;d;Bm>l.B<E;MY)p#[mW5PgW"n@lU(adqi_]A*`Fh<UZhgV,<nqsLELs3BRcHE;NfJr'nO23o\>AOhb0\K<b:HJa)6PK*=J
%aSmE,W@ZRKF$.lWj?[UsmuR%\_4IIZqlE!ZU61N0WW&?WJ%t9RH.O-_(]CB%'1&t)>AIUJd&0F\AST-refCEps!.Q:!'tT:VhT#d
%aHBP4?e4VISnY>tiNknb)Ksl,DEQ>\L,H=d2s1SG;rD,@l/ACI293WX.r(:p2TgbA2dXD<L4_Ku0WB2iEMWkDHc/Fu[bPf,<hleq
%=a,8TC"V1Y0gjFQ'\LYY+@kOK_t*K1r).a#M29g-OED@"oR7#71ou&9[JCh'[9mur9X>ed<*NCiEI9$Q3/f<`AeM6o#D80lD8/5?
%TDifDdj+V-HJJKjO4kuSm]'W\4V+UMlVMo26Z]=MITqeE=>jL?XRQV7EI.0**]Lge+o7jXCATf4Hm6lHIaG2Vaf8Ea,QCs4rG-g>
%N&Dp#aJV1G[d2DJaYk-;AZDM%U7G,UET$B<&Y%TD3$X_rO6oX>]B]aLhLe0kZ2Ks)S1s_jG/1JA%gt%bG.a;37sop`U8BX_eH72\
%oA!LkAfn653&GW2Z*9_+dbU15a*CPLU"1SAT/k;#[0ttfFF=(A$DX3jH-D36<ZH[dKDd;,*?m4=k-FbH[qr/)-V;\#[IJn*6;hN,
%<a2M:,c[uEkoK'4;tf3\>>Q#^`7lBfq]g8s*s&F1HSh,SeJCLN&qHQEZ?:*^>02E?q8"=ND4e^>EgQauo^_X0c1UGtf5ES!TATC`
%fq$eK^S(&ac[MDZo,"%FjuOVqiZ/Kk,>;r]2GU9VDhRm)(c)I!?ie![J]"*U5Q":UG'&00qY'*1%0?Hds)iV[f1Z*[p*G^\?iNgR
%)UfL"U3^Pu;.>2g-4=Cjf7kaHh`dZ\n[m8ZS(W:dQ<p2uI<Vs\Rkh>-j-r/sT0Jm@jI=&8@=L>T$b$'.1Of4no[CQRfjAI(B"so8
%lbAk@Rnr:0hak&457p-Tip0O3q!9(drFGW@C@aT;i5sH"2,h8>%DP*?f\G>$A/\g)GPJ\QN6]Sg"Xg>VelDNK?,7*Pm;lU)5Q+m=
%rm6uqrT*:NWRYj5D1J#KeS=J3=hg+J,j"7N#@EiqOQJk\K9M-W+$^-HqCusrV]!n5?'a'*Bg$[o_e70m5p2l)s%Ql#l[KI,lQ6o"
%5s]b.4Kjs5:M*cp@/@*i+0AjskeKRf4oN`0-t7.&0*W]h;=S'/IWBmYqZs4YV&*k0O_i&Vq4j_o78s4V/Z6Us9DA+P;d3Ou]goq^
%9u6hr(UX6:#JZk&h4@tZSmMGu"b6C9amZChD"df&+(h/DmHqk=<HrY4H[C2?h>>sOc0&JJ<;GbSqXbS@k)"CulCIluIduQHF/cS&
%m#/&\WVSj>g[3>.=jDNrm/OZ0q=^`8l^NAHcMj8Y\GTc?pSZJupO-WNiFYm)9+hV9:IfI^rq/MR;LNb<q1bb`%p:>bdasuChsm-T
%YZu&<s7RujH[0bEDs3sQ?<j'"Ab5&W8_0n;M%h&G&GGOG3"4C$Vr(cr%\enLT_kbls5?Z1bF]8W$`NqbO<!jSH[g*`p%B9-^Q48H
%?f%;>=bdD37WUPdrXs<?"+"kFq9MLP2rFZ.);t7=!)@uaEIRVRLQ.MF2uDU(c0<1f1]H_9S(f"q!kHm0(5t=CF77>%gmnE6j$AX#
%YPKg4p?Ia]rHuu)IXWVB136ra]m!A(4,ihpP=a/L(0=R]c0)^>>LG&t2W*Ekrq`.'HTGP\].Z;d-%`\fl`9d3B:HljHbLKa)+\TW
%DU2c3D`>/'Db.QfK#)ON4IH0?NVZ0U_RZPPctc);UT_8^]@1tnle0PYg\2M^TWg$55aC*ie'"5)V_it2T4^AnT>.)bJ)>(E/1R5t
%hgTclHMqH!G'.eIXVDCa;"dqY3GNQ_0?q1q^Dg2s`TZ@]](SF4gHjV!q78M+miCjneKPNK?aVr*QD^'6S_h"#X_.ft[Bm'?2`I5l
%T/O#?D#SV$fDM.fGCFO\>?S]]KF,6imH3QOff,ff\!u^T^G@i^he[250&AOKok*j=n)*$:H[gD"9;Wdj%B=X!na2+<PLI\shOjeO
%R=0MV%egHMiu#I,&TIH1bH%ta>Z#u8a;m]neNKfbSDJ,hN#Qra<-Gc'$@JlFH$B,Ic$#Rp:N-6,A[s#XRs4&emH)'-G?*lPBJkD#
%olbDS([$ceI.YtUkl'mK^Nr%ori=h<;_NjBV,I!K.CgOu?Ak&'9%f.VCuiioT"Lt%IXQe%HnL8)),G-_NJFK=e27':YBbG>HTn3-
%SDNU:cRjG6H?8UPVmk1Iajo)/"a[];$IdG&Y>$OW\c->$Wn[OO%ktuLou))L1L<D6$f"[*9*A'mf623kDuFd-3VmLhro0Y)cTc?N
%DeMW4f*S1?CAd5fqW]`I^l>1gOQK$OIjE&.m5NB;O8jAb0[i*56ctJTmMj0X9'',=D6Dd494!C:#<jtjj-gSJePCR`kNoh0MpokU
%.1Xe?F*;R&Nqa7b"FhZ1oE25BJBB^&Z`ECNRl;!O1&KsS=1@5)B-#P0NT3QThH-a,N1,"%16X?q<Tf9i^\VjIh>-Hm;lms*pXk>f
%ms]NYQT659k0;HNhp:3;C^BY@r*!a_o7W[DhO\'RjT]X[.Q3sWT)*jgU\^X&gL#!`L\p+NI9F7_YJ5B@[?TJ?5V2&,_i*',maQo.
%DD1-j2W(.@^URhXfi6ImDAUj2?D@n`;>8n9\"krf>TQ(dGAlnd<IA^PbpgHCHZuUbmK,=IdXE_"F`Hgr@7F7$>IFYrn&iA5,L^TM
%#H65L>7tlG$R4cOC>N:1CPHQsN`0\"2abAob;AY\ouD;*2\X1n(,d^6Hm;G@HfOmY6PVl6b3a'=$<+K2D@a0b%$r1NZTHI=D#iq+
%FoUGo@mk]'S,;OM\6X"XNOTmBZZf@M-[N,03WJ&Y8fuoma[GinRS.k5aYg995JPhj;XsBK\D`u8L>$-^lq[B9H4J*3Vom]C-&J3t
%-p`(%"''[cp"dUO=]MS/SudD>Aq"l^fV?n%?#mR>pEZA[]Xn)h-(R3LhHes-O'A*h#O_ABq;"$/Q0NOH21)C[OQNn6>J%B(:\W**
%k3UpCg!=m34/m=FH#k>k;l*\R#("O=s""Ie(T6`Ujk+.L2tICbmGRX1Ne)V.GrpLsE=YC0d`q[XmMrkro^;SQX33RZNe[5_3AcS-
%^$HX5k,6JCiM+(u\Hc*KQh-:1KRs"r:'c!q3rJF<q>o<m!Ne\d,>In(53`sq\!`bY7Vl8cRibG`Cp#_k5jEC]_^VtM]5%GhW2Z7p
%P^B28L.NrapAFXDD@K(dPa.&j^Wp-?4+5O(T_WL4Wi=s?8:_8!8L#8^@rd^?W_Lq.gNcfmYASjF>i3L&L8nm)J*n3AFA6FpkImGV
%fcTC\kHfZkHoG89OTk\qp?0b.s3'lGrq#<ZTA2V!'YUp&C!VkZd[tF@qT\]X=J<@%hWa.`ea6YCb-e5UF6C\<c1dQ;pXRr%_XacX
%ksqu-gE-CgXqf;^^nVf,n)#icr:S,%gWc:":6i$>]m5*7NLRO.ODC@lh-C+h!d51bdU`b/W$\Ug]A$6>U+tTZCGf,bLE5E9=jg:"
%l^b&$8n4N_44`pBK+phkU%7h.3A3MZqL5UGNcb-hbO;Y&l?(7TYK(DL*QIVtQ#7-?G[I:%_<bauUtf97:1n]V,&[.Resu-tpVanQ
%p%A.<2A]_=Y.rka9mKJ"m.fnun6*'Ok4Qf4e(/THUT\9&3'<MlnG$VVnCVULm`L1RPPa6\du9i7n-[%UFu1P=E@%u5?S.j<Sa7F:
%#M;Od061uT\J/7\PUqL_4hpc)EC2<)$*Bi?p7csd-Rf7CW+U42:X'N]F62B<1Y$3,m7#B>G'Priqe##Xm$NE:dmj]#j$]Br@tXH!
%ED^p(C?PIG82)0lM1<$n6aeT(A%pgtjnp-eL6mD#Vqs;1m+41c.m=\gh\bZqg2ZOr(d>@VgM'^\5Hhf=h=`EF)Ju/Rq!*^(g$.T;
%h,Ck*(Id1A!Q:&%jXo>mfm.AgQQY1<4-S8+l)it"[U]1,jls_?bNmWL2SXZiEI1G3n7W2Vra>j1Ro:/.1#0N0'KC7a5&DLc:JQDr
%>g&Oq2SMA!1[E2BcR?m1V3C?ZC!Wj]/hH]ed2S_(:+hqgBP^V@3.Lj@28cu4XV\aK(Bk&f\+Jf)HS772s",Glq+Sr'rqbk,n,#I)
%#G4ga3D/cCLNU8KTa^j6Z4rfc"oMS3J,ENQN8k<=&BNj$/Cma,m(De;K.CYB/<5nAo;_i8q`Kp%6:]&FJgU8@4Ua%SM9gF\oWR5r
%MoF']iQ!lY,<*up^=-_mk?i[0.!A6?IaJ?IU\odap[sTFml"O%q+l\6(Rs_KRX/U>:g(]7`@o"(lLGp0mJm(_'TAiSVI*X.7(VfU
%XWEu+^4CcprpY]8dD+E_YH?MO"@E.]]N;t>J=is4s"rs?h/;ZGRcN*[`$F3sI/0VLVtQ7Sh#gif#;:_B2dV/m]leR,j!FF1RaL08
%p96_qm3W*WX8]jjY(_Xj`&r(**kT!q&=$Iqp@[\Cl._[jIie2Y@\2H;\I#O1^%/"hgTGVULu*f18^TDlhRIh\+ebjYP>@U(E+[Ab
%]3mY;H^;VM;OIc":hoCQRM*C^D+aC69gC-[Vp9R";k,6#Ru0n-]2G^G3A*pFQVs9CiE_ZdFA:e9!KmW2i@aP"(g$5!'DhBmZRE-N
%JGZl3Rc<MUFO[&Ngq;"+GViCb?*R:r@kKPO"_7[rMT/1aN7LX!8'UO:W&-Mn`c[m(:9*DN$Z,"&-mTJ%a<d>Aarp/'N3G^U.!T;/
%!g1(SWFQVV4?MVLOpM@0M\ZaP'6Rk_>*mU)KQkgKk'&nU>3L3BB^Ilaqih3#$./!1Kq<k&3>'?mBX0mpqa!:e4%0@/L_t&E<^(kY
%QPPi)$o-/88"!X!4N!^jJ_CSD.m_'E"Gr5qSEtleU*p[mMsNQ0WeCY4dR'=#Lhokq92-P16P2$$'q1<3dREMuNY\2-S(Yid<O(mK
%<lVi<=NYlA-f`W7n"OeX9K3a(bCJp24.70A9Zk$I"CWi#QCjHsF=t`L#3:WVne9,!+UOFmD(NHF\Vt3ALM3$KLchg1&`OhR8!eoD
%=o#;Q#sf"7luJ4GrY%#N@[n*@+'3rW9*>=,VZ,TA+g!EcBY=FBgN]n3rD>C1**5nAcT\!"l!FXKdY2RFBQ1>u%V/3X5s:n^CBLMn
%i0Oi!_?igrTEIMJ?$A;kDG7RhjXBdq/r<2V9lu(r%<H#(o*"O0N<aHW#enE*eX#>XrDmZIQX,a%%Vu/7KN`%G&DQTN+7EpDbdsdL
%Zec%t=fTO/,DCD87.uRV###eW6jnn]]8Tq4g*B*N40X!>18P,!2^!JLBj.:&43+1haN=W4G8HD!`-<`=*Ao)M=g4!ZOIOaI/OHof
%fhWUZULq?=PR1e#$n!,!eT&Nqk#Of])207@Lh(J74Ju;/gqj"l1fL4*,M]#i$][4e^cE]n/qG>Za;<0-S<gI%KJam+=4peE(MA$H
%1VopS^71=a!RO`l>!rXpN\U9*SLtE>e0P`7(77H?c4cA"WF_.\i/ue=G5bh.6'VpA4*ihT8>9/3"n[fUG9Pk#\h7ra+5p0%'n\o3
%-gF$\/JcDD!bAuS[#Y>='X8pm@/3E::6^kL0meK"Si@0f]?dgLK!E73el"Q&/agkC'DsJS[3.sZ.XN3[O>O0e,oe4bVdg-2-=Sg=
%a:Tu(,oE:Y`tDX69@q!l).6*k[(_:1hpO!T1dm_CCO#ObBEL2:^S9#1:2+<pd>$-O;Di,)Bid'3Zp]ac^7koMS9KHoBdj/1d=Q#Z
%E^re-/*<dR+CtnE5pO[^"Hb/H,G]HRSY(0&'b\N=5nLJ;9@T)c8F#Q(*A7okfE]h0*)#;L87<h>*(D&"&T5-H$,eNK?nR,paE(4a
%"esCh]+0-GlYr.G7@;BQ%XDVZa@:2?,l/s0WX)(CRmegGkY!3VB9O(YZ!R2`jG3m]E+pYiEi)8saGsG`Zh@[&663%M99CDT/k/mg
%PugD;KU)#-+=F.^:g6IX\#d"H73p_@;m!^u7CJ:;#>m:VpeF8oc?)g+nXjLJhcJCi8BNs=@[>LNP23cg/p5MO\U.Ks.$k`JC'1N[
%-m_VFj!*JK;Ifn.`:#`6<.r)"i\TL=Um?3]6nJkTJeq<gU?<:"'QcE(&Xcs3Ma4WtMBsWuf*eo0`fRN8=\0;m9^G(Q'Cl]-@3Y@*
%U;C<6+rWf+U>4ikB4%,YOh!3h&p9r9FX]s,;$4`@n0huWR,c*lSinBuYb!k!\jd7[$D>]>U4ogl>_WG(j&V<6_i'mpL3s<]>(lAb
%(BkcKkXCO7"SsIQT;9s[S^V6`[:C+is!F#.3\Y9_/Wi?cbjn=AOd+b+._U>ef;dEh)X[=7^@,4SN9u-L0--OT!U8p/kfLbKac>mc
%.K#C\8O`I^r59>u*"/qlE?.qPZE,NIe&3(rCmL#O5V:<Gd$0=T+`(qP8/`b!F!r9',^(rl`e%lr$+a'a.jUN+3ak_`'j7@Uh28<=
%(i\>c4=Yrj_U`#a/iXt^HI5J-EGb1n)dPZB;F0"\N*+jAD5g9)RM5'q(I7h.iu0H0N#3('g(Z=&"XXN4Y3XlZKIisR`\,o0N*UV8
%W^(,k"fXLm"N1XHP.eRY"].QAWqm8SnSIBMR#Stq,>l3,09HdG87WMJIqS^0ZF%UQd>QhZBE79ner`*^K[R=ti]&5>,G[i1R\*Sl
%=Lr6h@tG+&)!!Tc>%B5>2USH%h-`Z#,FpDAGND$"Nccr:=Sg)u`^MIALJj[Ee!s0>\rCU?7XuIe>&G.?+D2.Q9)XqA_WG>Fs)O_M
%BmUldFsK*#n>=TrAqU\0.Dd[u%.9::1D8k-?.*ZE3c\bB(9G6(a,^+:73n^(5S(/:8G3Sr1ZFTURu!<]4E;I\Lr&*'`1AD9<Hd4G
%>m-$)":jte.)sC[P(ogV!DWVM!lU#'od9W&oZ"gW5]C0T*S.@Ya=_H=aA"^Q_]I2r"oPQN3U+3^/EV='?aICREcp&TrS(91n:0Kc
%f?]aQ?e+Pb5C@s'rDrpKm%bg[hRD/0X*LMT*JUl%GtRM54sS\"6)Nm7?)\E*DJM1Lf10=N!j*gDs4#Kt)N!BiOnk>fBoZu1:eGE\
%XS>sgV1sqA;2AZQ0ni*60?iutZJCT)NBgs"K?_)20_c!^[!=Bgf_G.A'#u/`!=.gNO:3@sK#1VT>Ch2^n-Y<K9]%Pp8B)>%1oQCm
%B`eZ/"Ht!cMLfNOo/:hr,"%8>bgb$d'[gt<nK6BSip`PU6uuh"*_CcP/fnPE)7J20mSIJ.$OPaTAqV>%9=Y]]Lh)VU_SA+P+t8\0
%>YM[1@<UE((^Ql`\g:Z_fL1cSO@u$N,:%GM#@g:n#SHL"36/FP[(N2]^_V;d@h8(BZ/t*#)[)c<\02E<TM.U]-[Hus!8cA8qsl8#
%_S!EHp_'j,5jQC.HW7b<KDPhTF]m?Q.4-`q%`+H4%n.;^Ij`TQ$Yd\lFd^LYD;J4^DCM@$`FQRs+,S1RJgW5XQQ]@KNggYo0`,8B
%m^PAFSJIAE_Erg]8?,46*^G$1l"'8pOM)I`91@oF8epWj1CR<9'g,jA5a(#QRtNN\]5XbTZD$3GZm+$Bea_YgN_,]?af9]XOEY?0
%TXB<S8*3s`TOAHS>B-_]dN;AE9e!G.d]n]E)5qi5f]WrQ)Zb;9=F0<BB'*r:%#Cq*gJ#bEY9%]=W\UmuW1S^@LbteR7FnbF:36K&
%3uBc?MXc_S&p*0sA.'.Y<q%TH;2k>U,'4uQ?a9di@@JeofF>F4;+jL@_L@d)/L;EPL6<$lc+1b.>eu['gq$[GMcd=[ZGSc,kdO`2
%9=WTM]^#A+#'dOO[S%ie1G85PS%,Cack<q/Xsb)4=;2*mjF-]'(uGW"GV<'&)nb-]7C6*36;m7cF@.Z!!8nOk8K>2J.;'g4d9I5a
%%.O>5S,3qa`$9I_Dq;G$^q"%\7tOaGK3_L("s[&uHNe"L6FLSWK#%HA;9W-k(E,%;`DEd-"20ET@1U*U=sO;FHkc_g,$6VP8[fkN
%)-ka*X<G$%\VPYW3P^n3Ae(05>tk=^7/#'!j!$5mZ#PYM;oan\\2W>#`FuLEO=IAqAg)=J/JE+GQ1SV06cl5MPI/D/dp0bm?'H0>
%A2%[Nn.;jkJaFWqYld7KJejL>YDg$L)8e(0W'b[#e<M2kS7F)p@PTT(f2%c-\thbn/(=/aR)!XM\]Fb7^cN,OF18D@K\1CLY1.9m
%8]0<ajNWc6kX"YN2WCqr0HbWkY\,j->j3'^'F*"_luh%uU_[o>gVBO7Fp11sZ75.20WB'b\g\%[l!IP_4f%nm*R,+&)`<*&Y-99b
%#3N!uIrH0A=5X8V9dtrdQAX=@-J:.,b-4d1nue;4,$94J0$Q]b9d`o)]-*[.BPPq_]N]=sr4$4FgKZ]*=%C`!a*=mqg.t1"BrAVO
%2SV3Q_L?*1PDVoRGh4Q/[Yh:+N-^f>!\PSFB$>%j0$XrBEj<C$G+G+'&&U<KnM)-g&fh!ZYI@EPEbd'l&b-[>aNigCM9R4LRSr/l
%E9(QA'O,lX(SoS8HYg]"MpCD6Nd"'aMMZT-\@&c@L9!/-FbD-sV0+-=76B>-Fnt\aNArsjXjjM`0sVM1j@ENpq5AJUZs%U*Bm2DE
%f\^5ObY>,C@9Ns/L27lm'u0hQDl'h&*,J6X#Td\4,2GVD36k3T$p3uV#X_;n@j+9slT+M/,N:-tBe9JTeg'/cYuZPr'$%&8Cb2lc
%(clKkUPuR'9/[I:.\rX*:b6<F#_$QH%"s%jfWDlPPYgYK9@@-Nb#0$E2?D?)7.t$J,5/e_7;)0D.<9F/@bbfQNr.AS`:4[?7\q),
%j;kl1CucE70Q$*,f#;d5^c:]$9,q:EG&Ch\%a0pJT4k48YR,EsOA1EQh;`@F\HV\6S<2YrTp60o:)OP<TXY'H"M6P(^e@EUT1Jp%
%j4^Le+C8ZY&)9CVmD](5>9GgUha^]87pa?qo?@f+P[:m%ar$I9]B#Gi\cfX,L.(l1a-To$+Rfki_#A/jH70t<ZW`fjO2P62]]6&$
%1'PZP_\1?>oOjC"oigl<j?s-+=*$9"Itj,7-J^Y<nA==BOe#fVjl,1d`'I1V<1*pV96dL+_37J1aC)DIG'43N-AmI[7RB_-VkJP@
%>^C'<@=O;)>pCn1RM^ppA[NF2!<ti:6ua5kMiD:M4D<(dVLs(U#RhaOJ3655d6&GDYf,Li0[!_!7>7hXfu,As\Wck\G>KE/ZC%:+
%5jX$7e\]7e4G9Gc(uYll-Ld8Q<RJ?<B3gl;,RgE81Rj5(pm0,AS<,n4@6A0jT9dlp1P-.#`;C+46iGpY6FJO>,%)7qa)ZaM6:JVE
%(Cm-n`/M5T-FKe2``GfI>BnR3!Y^R'$D`bB+f3]^V28gp0=N/QcGQn,_$gHs*T(<gifh?ACuH9T4fka2YS`&nBX(jK-m@4p5*:F4
%U[Z\4%YVX-5Ye&$,:mcP8/LM<J[L\='=lh#_Cd)P<\+jsc)%6ic,-!+;T4la.J3F<>77WR,p"Y4#9O0-7o06i6%i0F2pd\+_Sa/_
%5Qk!S$E+TS"2T6S!WP@\lj^g"L^#0L&M?2/4/h+WSA=O)RYa&L1Lj`65`oVdCRjF;qck,n-Z]HJ#m#iLgu@KKk9B8F5NAl-@c_X_
%eLdV\@V(=J#4QlE9U"r`ZF/esTuW+X'71^o:a4$FdnB-LgrC*QgY67;'Y*HU8F]AFBpWFU.!p^QN(L"SM_.ilq8t>afk")l;Q;9B
%OaMrY9le<0.@eM\K\<pHU]Erf8!D9)=rGb)!dl(YUCf9(Hq>p>"j_r:YXKB+`!.6]?7nS3k9q##0LL@@p+QOZ(bVA4."UI?KRkpS
%/Cd]\\E0uF(-IW.=?`LcrUqbiSMNUf#t-&i#m\FZo!j\rLNa^M6E;IL$j'4Je>'o*M]NL_6j&Mq(dq6fqI-uQfU=nTX^q$gYee0C
%c=_`bP7Z9&?kb%X-"O`oKn+^:cEVLX`7Toti&gXF>!\ttR<`oDkS:qM/kS_'\,AA9BnR2"1t4Z2f"TNMM%7LPJqTVe='(?D+t8+Q
%rA[<9-[YgN02<uPYX=P?'JlIIS4NV(Yn5(1/A^-<FeMF?^UBY;XcKjp\PL8DV9W@0c%1,!Y-Y]]*.gS[P/ek05.6oTgT%A:^>h3B
%>+`8<%r?Tt^[62uR[./'G'jp1-MIR:"slA7JYtgM+?0e:*l:;.Xc1[T+>13Z?t.FqRQc`SG>VB.gf`3^2(hEqWs&Wc>YI$PZ*k9*
%.a)rg[VWmAFZ;ZW$j;@#G'"(#bc&q68-)79+HQlVqZnSP\W@G[&FY^GEe>[P,$K\S.0F8sXMq`^k]YgZ1-"-qdhP1l6_i+$m72<2
%34)lpNPdImKest[29)@+Cp8@6`*a4D$?n^hHX#do)V@L`C%Ys9fQDD/"@G_d="cXqrfPmh%*OL@X2L!Gg9/#iC2NWuoi:)ZfO<#W
%p,C_Y=OV:$OU71r4"_gf!84f!SKC1T+"QQ-<6W:NknPBicl#/H-arKGL]7T/5UOV9+P:'no/6tN,8?T%KDk97a=G,TE3b(\ONruu
%P?ht0@iTkm47BmUM:Be7fNuJ+<>-Z>mZAMC%ddBlkaZ[3CqYg<o%n/\1+Oc,M&QKGM!P9KG).-rj/ieL?W(eL[KnngRe3UNZ:*W1
%fKh%_e1%mTR_9P)Br,IL_<4$-r.`uY2Gh"\NsRdU,Tm5iXlg`VdQ%G=pc*g;3D(#=Fe$FafPU7IkM18rP(q":fGX_iqSd>J-O6@j
%)(87WCD#)-`<KYQ"?kj565h&N=Coa=e4Q.tDS*;loZH>>fFpdBQd,r-,MYtY@h3Nb4,Se"qrJu64kO%Z>(jp/62@UC(?eFIgYI&-
%?3t>O*0R^K9^,]HK^_\rQj'lm_eTmF?a:j6fOC"HnX1&kk<"Q`=\Z9Xp50mN_H%?0?/`qSX8!7>7Y=p,l3MMD&!qCk@=lY<&=C5O
%l2Z$s*A+K:Gc0Ya[/<e*f\lg#.Dg-GU.9@R35bkL.3T-!6FN'uEZd(69G(@[7'ga.co"1ha65VDP`V$?'@)BF""[Zr<ZGX[-(.,*
%Jmp7u]]SDdi*?siA>7ng=#_):")a'B/)SL04UYLY$D0l>P>d'h3+hR)^k.hC_$2R*\IZ%T5mOpKCtgBqL;Y5Q-3O2lWf+BJn0^D.
%M5(E:*Z;6];97:U.&$d`'I>B(L6>r#?VImi67"SRPKGj)9I?RnDt\.qkWp4QGG+/^NNa`_*1r"<&.U_]&*l4_rpDVtp6fXb9@iU)
%KS*fR>N[#R:9:`gLTmQmYb#CI^j(dt9af<L8]i<&RN8(T[E;&cp`'LF`4$Aq!UoD+K^HCGgm7^img1`G+mp&R=;<!Z_',b8a_"&!
%ADm1)dQVQ*(.<al,rC6a%,P"NTLQ&fT0a=_QrPkh-"W1Mm>`k,=rJb8+Jqba-Kn+F@C5C.5gYN@&s6aL-TGt=9,r]JUS1@ef[%0s
%CimT#,E;d.iM[6![MX:p4(@K+<s6&^DNmnX_o$17V1W"SF[;_9Qu$u"]LDT8T9Tjc_Vn0?CNh=N.Rn"iEu3tN,[>31PF9'_)Xb$q
%i^qeY@;R3p&[(:9,6E@b,XcZAAJS7,<+T+IG3OfG(9!9h@kr7s*FTRi9a/iU+t44iYjkja@go?.>@p6r8h<ACNOU4.H<-WMg[#3.
%pe5'-5#*LZ1,WJROPS=hBW0@C,aKmmY(0pQ&U.bbO33Z1gDrQpVni,0Z[qCA,W/7"GmX>a[@u;/c6LKj8.6tk>MP>ces(OKZoVYf
%*_1E3TaCFCR3Rj0#ja$pC7koh7s5A@7C1#Eka4C$fl#om43^Bii\G(8.O#of):f(u&SO$ud]0>+41GJeNVoj"d(gL'8_YO3gJ5@&
%bNs\3n5^#[Ysc,,XsTZ:7Q/7,WuHgq!g,qt`.T?=Gr!0"BpKg&X(:Z3a,fMC/N+n4\fGTn*;B-%6r=[s5e#XInR1I0NWH^j#A&RJ
%mRQo\34)c4C>_bH9A$&n3KLK]]c.7[3X;g+1G[meW0N"r6oOOl-Tr2=6BgOu,E&'X7hX\rVKA'4,R=8V4/a?dj/>0SKr++2OP$C_
%nR^[bYAho34.'1g*M7)EQJp=W&Ik5U&u2[UES*S%-[+c#kbX1qNZ5B.UF;8B!No'ZPtZj$,(^biW62hYbeeQ:GS"SfKV+\QaN)EN
%:pcGe;S7`:YTGH#M3jM27+%#eTEZ.f%Hn0kTqINZD6=Xp'Mh6&nfAZ=2Bc'2<L\Ni8+bu6i1cQTYmr"0f.SFFI^JFXb0WM;?4#DR
%[.kLs#Eef(=t"/'4Mip#]H<SGm(,eb3749/,2rSF":+D.9Zf,f/suna,,@h30@lnE?6%`V+7:fK^E>S\cl^;g/7LGuo2r8N$mAW'
%[[(Ohg;8nZ3(a=XiRBR*H:]VPm!BFd(I[-e2HL9i"Ba9A=@83M'.fh;'"TO7:p-@*%Lo818K$1'BG!--mm1sa%;[)F99Jg;ooc`t
%$U_fBI*gcM.M44@BV8R"$2ah-deMj7P/rf`.d?@VI7,5dLqLE2e:l#e)nHe(#!7V[Ye?'!DhPq@hIAF=29d=U/,$C`U_b?,.S:0U
%4i?6O0Oi3XHDkWKa)/MZTdS<H@Y:U5%2h11opB&%L\;(Ga*CGC#$&KW8+]QLk$,+3/[4RVEZ.m^&*J*9%[*CrE*<<hL?#X#%RK;"
%-\&[_1MfCGO'_O-Y^$GMm2Rn>M7U"u0mAb)>WQ9i"AN^]cIkB:RjQ6)a2%7+a"c]B,^5F5fH0+/0a>\EG;.D6?8OJBR)Cu>#Gi.N
%1!W96%0a2.8Tld-^]h&b:6L*;8pD=1b;O@'69F^\KFa1\E0^k%Z=-g6<"Um&&j1;)`hE1,=*H`<2!bc(#R(ie!^!]2hR&+$Zg'eA
%kDKS(R'ZZ,9atd,h=>".nQlg&)Fah<C!KK(jM!Gn$:6;e#-"iQRmOSiMBaI#9"idCa5U2\XQU5S_$G['UqCuE4APA4b$*4TA6/sS
%Yu%k1HgZu0OaTC/E@aTl,)o.WW/&K'X`L5XS3$"Xj2\9g4fHR@1)_nQ7!;Ebf>i!F34R^n]M`%WC,P!]aqi2IGd)mL1i/ZddGYLS
%+L1JE22,m>*;V,7H])Q!pgG^O0-]?h<&+i:+)?c=Z%6a(#e$V,l:VN]&K)HH@$O)R%F/PmgM0@h:9e`h78>t>*n'.0d_gu%.c[F`
%q0\,8<k:Le=qO81,(in3@6qekm(BCTEW.nY,IRUi7NAN3dNo)/$?kkM;:BMs9?oC;i>UB]=OPiJ`465ugE&HF^.Mq(_D>=+(VhI'
%A8CI-r@STJ2mT\$2&dq-LKg5'P6F@'Gk.jMX"9:dBk#d30-)5V:>/Scl)X6=U!SW&4qL,603U06#iQp$e2`hk"&AEUL87pXOVc&t
%1)=jHU?1kmqPc&5lr;IMGNNr:U]ID)M*6*e&I=Qb$6*TYcLTPOd:;WUp9KUs+b2Uf?5\N710g01SdlA-;WNIHg*Q+%n[kN8dpaO?
%(e6_#R\YBpc\FPV:l(Gu6j%$Zih7C$[>VB!LfW@U91X*r<VRAL>S@+%NC8H6ON,Nsm`stUUG3F7Ym2%O#)O*/r%?i85ODJ4-6u$"
%-4&?-RUY+(*V7&O+o"/.BYYsb0277X-:4u*SN15N3AFgNO@5`Fj=H--WFR7;hnTNTH(10d_1!k/rY*A76RMZ@X8[pX(Pd2D;Fl19
%)a7ba"0t^k7In/T.[,ej+#@]T]ngi-,*ebPq]0WR0o<q;^;*@"7D.5K!I8aN8o`c;Fdru&6q`c%`&"_6FbYg3S-WHp2!;n9-hPNh
%:d^j'NI7n^)8n#9e<b3c[tDR()Rnf/i@$jZ'Fr0O/NdI%OciCSB9][fcK@sBqLW:*dm1h[f:\r'5r);88aaJL8JMGp_MDHMf.oBI
%UWCKnUQe5a]J@Z<is5!97PZSfHB>BSjkH39C(_Waa2p6X"&!F^BBJgV*>bF(XL3GR.2@s_')Se9$4@k#*@p,sShR'GA31Z5/t2g"
%90$nkquYNojOUF-*[;M1QqbfuCiTtKR\sd:;YQ%g,Q#=n>-Bf2hNFEu0O$ei$13&d@:/\G&uSO^aH=`H\'UY!TdY6JTq*_Ue;6.f
%J4qVJjHh4`a6,7*=h]Brj2c)0[d4=+r5P0/M:=:#\WE$YI45X<e(\p3"XdpDO93AE+cFs^PfPMnNH[/2maK8._.MA')dX1Ks5NiH
%!/!?N>a>\]3@@FMNY7jm??;XANF`HWpN2p;]>LdCefoe63n?Al]s4,pU[Va_WIgni61<_`?5+<&cqn74'0d;LO#*JOYXu-qTUa).
%7[a`7D,^;VNafBNX$jf%a,V4+,#UZ9"Z!FF6UD:1H!*$1KnXQYGSA$B73")ib94^031Dk3hB+&;UgYaIhBFJVYS\T6Sa`n(gtfYE
%'@I"$L*O_&8K?bO#gXh*T*"U?=JgHM(6p+rB->P,mRSSF2GHLh;$XkOcHF!6LHIW)VTBs+=!u#2j*G#OhD7JaN9;Eb32-E_k!djL
%*&P:"@o"bdC[]Zh-(so@d,/_YJ%U*64$3?7UEVHW]C5ELdj+-)nVs"@4EJZ;_HrQ_o")&L`X^jn_.@+H/t6/0cA=sR3PKJ7V&!ca
%;3X+:]7i(h3!mDiigYd\[#iN%>`V8>pb[;umA3Q`lE"/]%ii68i/Gn)"\G9S$Ja:$0_h%Chl4M%2j3!-\e&UkNL!8J]h&ut"4Oac
%q[pK@Hrpf\egmSa0,M<?Li)19]e69i\9n^O'TaAN!oJYSd0mKpN<-M5jTCl#P1(*j)c++DaN)fm&SZAj!$Z8<*2"Sn#m!b.>Kg<"
%k%#15$G"'oQh^Bb?@HHKJk*J/i$rOgKI@3+UO$5dgbV:,Z36<\!V7,YqXLfV5%C=uSpq=EMtC?&ZjRMNadsnK$qB)@7m+FpIXqu@
%=bjl5.=04qEL'VMi^!^=O?2i@ZIp%Ld,P1"$:9]Wp`8&.7sZWtrg6&`BK&Q6>Yh0R<ZGI78[:<</Q)o\[;e-XW(mUe3YBu8iu8+@
%+!6ZQ2@pp\doms:_Kj8:443I(e:2&./!U>FGQnS(BmPh*66$3q&]Ce7dPV#\)89aa5U<I#9-I=rmN)T7EV\8/A@jJpIhi%)Kb]EX
%#%TM&r,?u#>W7md8XBs^)FYW,kbP58ot%V!`][sI7;,@e>.WPT$acN0[,LCaVi9ZZU*L6O7o`ad;"+K)8b@X[8J?d#_^eTk'QGnp
%$it$!e*p,50Aq9pi5Q77$5ssdE/=.g>Zg*4LE>C9i)^+,&i^8SmNa+)8`fkDh0`:?XP<GQc+_!j=hn6ZRq+iDaPgf$>pD@h__K5K
%b1V#>7?9b02IL3(e^8FP]dtB4_:C\7\!h_rpToCZ,k(uIE*Nf3B&8D9QMY\Fa+LrW,k.5^A<Gg$M968r4=?.`_d/,5PaXd\X5+SB
%57<!'4,:G?+^:[BV]i3d'Rq0a'f#pfhC=0fYqDqH38*+2Z'R,ZPpj3CG2%Cqos90+m\o4d,68WlM,i$Z'g>q(VAuqEVRPa3E)G.c
%((\.J7*^RuSd=(fo`a'q!np10cF4]7L<nVU=(GbJR<,=Bk@3L1,2@fZpbHD-G\;GikcX\QaBi.l]C!<4r)j#io/j1jNSBMPS7He&
%_<-^Y4QS!^)#Gb0f-oof6u?rndarOE*Z3j,hK(I*mL-h&"i).N^u]u"1:oTh;p$02OCab1+PdA\BrK]ciSAX&`<6Te^2"0Og_mff
%B=HP1GWuR\LE`^Q)72SR29*9M\)d=O;!kE'DE=hdkY`/]&GDYr1aqWchei&jhTl8[#fVZ@Q%N&27'4>Qi@bRFGK5^<8fZ_G*OW%k
%l@Q9si>+j'ac@\oBVO<!J3OElA*;Q<F9TrK=5Q$D/9>VK&gk6U&4a;KY='<TO<,`mPdA40n#2Wo-CT@6pToB/#:;D>P0$JIlbKGG
%6X+&+U(&<3ID,MLJ>eh'3PM60aZ1r.+T%AEG$b7K/-&H9f/OEon$\q0[;qj/3Jh&6`i[/q`b<d$A%]""3@D'I5-NPh7(Y)PIhi#S
%no[,-#[/S#X8Z(m@*gj<!+khm7`=9j<T?uT+V;-saX#E]3o`hDo38?2JGWK")iG>S?NWUF[,_X5K8\Z>^cMdD\QGmM5#IT__HAb6
%)9Pdn-DAeW9K)bLmq2Z>LQ)mE@o.5C$QS-2*:/4RMON[cdi5>jh8q7V-Yfb65KEH(``KFZea<g\T*<%+g;,%Ra[r6JS=.E61lG0=
%V1od6.5NsC=>r^,Eq;Cp?G=nJ$`'BuUiH>i#L7C0Js/#A+C^O[?N_0T>GJW/6qW6WiHksWBZ^SBg0V6]G2%EGpi?GF70]@-.IRm)
%KsU!O?(WMaG7Vea/3$5_\tV&f-b_HKfSOuc&K`p[/%^"0I=_*5J2UMLjKp5C@*V;tDt%T33W9`E:Z42Qh>-bR9nQoU4Uru*aX-LI
%npm<*2>[ICB)uo*T?\73!&,;df%u:21b(H1P1K7nG0H+io73'Or@SrEil"<ta!I`5PO6'ar)j#ibj!nOA_]a.;hE^<3K"#,(/*q?
%T/=XZS\HV:3??YJ68cE3oVd^qU=C'!57;ED2g,NFCi1L!2dZlEPM8&ai'Q8m/9@lM:?!X$s/O+6Td$GcjI0cV"lR]-i3q/-SY0NR
%,_\2J(V7g0g:3KdMCE.!^.)G^][mfa[c:jBb.;*0]"@@D!;nhW*:c&24WAdFO%(TCj!nCi!J#A4TnH'+`2(CudS`G:@MXEQrU?sh
%Tt](@$acN0ZuIgViU,ujb=J/kN(#"#i5?G9U=ED$/!bS6N$c)MmB"KhDMRTm4`%FYmL-h&"2Jd9`68WXAAiF,l[TD4Y2_$J1NpZH
%kLt(^7*!,;)/&9S\Rl5$;f`M#a'tid\(qjN57<#%L-uMEbj^b<iG\KfP4<iuBo9LbC%s=<,^!thqG!(b30l"%'23ZNDR2"SILb9?
%4#W7oROMB<<-]`!&9)2?;*mDs;T)!r%,DiHUB/t^WCi]0_kOcf^;0V+^`0bl7$C^d-P4*u$Mm3n7UoP+6Y:'fZB3,[1ElA/@%*2d
%8Ws2\/S/21(pnC_fb\lt#C(k?a-8D.RBo*,SSu('$^Y*8U[a,j,$h)[JCgRnf_S@_WhdqC$^JnR[JL$pk5]IZbAWnL9'hKOq$g4r
%ohlGt=4\2BrhVKC*Wa7"8;Z>qJQKMu:9`R<$a?6*YU(;[;8-m?OaN*/f+uG=2$P\>>Yk8E:@c=n]q)$H8%cC9)lLgD3T/_:?NC'V
%!)Cbj438+m.q@YK<%r2?f@q*#pRsWF39OLHTq:PK+mbXt6(KkSICIlGGWuFXK,_kJ]3E6F3Y(!Ep0$iO1LBfEpg//./s?$6)ddg(
%P?a6(N7o_lb2g%#I=_.!J2`$HDn#u:p(E]!(J8^AZj#XcSN=o5o<MVZB94FLGE`oS3>WKiC%@jPG$b7K)uu#c)j.<K7;e^\p$aoG
%.^Ab#\F7E0kJ;bPaXp/L_'(h!9LX!FW6oCmc+_!j=hpN1H/eV:K"JKQh(Cu39o`'PW?][IM&[=oSCa9h8[C#-7%&2JFph(2m^Duo
%nE0gkgeYur_D:"Ohl$K+5q(MTmI'6GhbouA't7$@mNNWe7EfeE._p8^I0'+a!&uef+093i&XW7)(%'6A:9Olp`N.%ub\]83;QV9H
%KQebaU6^DS(o?Xg].X/6('$"85er8aG"&S3KQcL9.-[-./R'G@K(r1C_s3#n-$V`;HL=C,osh,)?blU[^^[W]7(GuLiIJXsW"KXD
%#9;a?J.VQeTW&cnlS3+f754b)<*&1`LI6:?I0',L!'"ks1`SVOJE[W2_@.I,oJjF5!7!US:?9nq-]Tt_&biW4A)5;$n:H=NRakuY
%h%tT+#CqFMH_j,8958S[4QDT!!3n>!N2tP6<thf>'gP`*$p/-[393WuLW]R>g3j"sEr\0:EjE@@;%VrQ6tPDjiqX!I!2oX9E)%ea
%5)W5EWGHlcO>Q\G3,"H$^cJU0g[5HbT*<">Em\NZ2lCQ4NG]BS#A&a!MVdt8o,*j\&[3&C&=LX2`h]m(/fE3pGM7HGq""JFDGQ0/
%Waq4M^8C8=ZI]uVUoa;#(4pt^0XaaJ!8pP.2&_!=n1GFb[b?-1pp0r[J]mkj&Sleo1(gbR7-D*')3ZQ75qa)X(=6`3orer)P@-\S
%q65'HI=_*uJ2Vt?3n4[9MlS8_MGT>m+sS\@X4LApl]Sd,MBs*SP`(=]*H\VE7?*,VD>+4lcN<#Gf.r4>/E1&nn8mAf@Ug#+bb_Jg
%b2T2Dh3;/$e##p^k2Z[T\k_SZ[eg-qB)utp=':CMjZ6-*J?.T&8ug/]QD)WFSTO1UkeGT"HT3r8QpEsil?jU2q#]jE!,<@s<ii/.
%iCf_&d,?,1BJfj7:+D?"_1gi:JQQ`eTb(aVX7%pEX*gYt(P"^TJ:fhF'2#(OJl.RYZISOaP:k6YocQJN)E8YC_l`FYcg$Tb2$dke
%!k:kp>OB-)r)j#ig*h!D>_i*/X<(A>]FkH'_:;R^nlq:1i["a>X.Rpaf]6(G>RC)Qs%^0Z!.Q$in)d39%QiGO)-)&/JN4E#O$u]a
%],NtU!Y;%&Y"EhmqJ6kQ<i,IW].X/6(')\%N5t&pl/X/TSk2Dg4Ut0ZCh/CJ?2-G_-Zs:>X<ciA2kTS0SsQ0oGM@NHpp0sFbf$C?
%-J0TkVgPNKNWlZr8!Z<AB1HnNe472TNaUXTqoG<+_0b^mS4kj<!q0b&DiZ,OI.\1>2AaWB(eFOegM%X*n**7tBhgLdQcPRm%hlhU
%_E4Rs=[%4V1>2"%]UoA?;`@3A4MFaQpU-E],JC?e7"a:Hl<,Q,Kj=9$_-"6qk%taMJukJh\(MR:57;F?n'cRd%-Q6j"KKaXKm,;o
%f)rekBt\H13p26G;S`E%X?Z@Y0jF%Z!;ot"SC8C_b64.9i_CqghoOQi8m"?qqKi/U-bn5Z-=&:T+mV-l3C$0b]"@@D!;ot"]T?ae
%fn'^T?s_n,'-prUCi'Df44fB?\q6H0>1Zp%bQU492Tk1b*%`P%mCiSu=TFtFFf4s7-MEA("G`;^+V+Uq3eU'<&er5$Ylekgd_qT.
%e+Mq4_'\KE<'.4r5l4\LS%,_eMqN)I,d%u2/"GA8rcLX&CY]uP0Xu/$0J"-LLs)R";6c_cmcTFM?NC'V!)?Qo<kuM[U.<%>nW9pj
%MhRfo_#n`=(-C!G5rEm9E%nRODOX"ngSA&u^;0VK^`,dg%B&F+*J(_ekcIBja/;V*S!tOU5J;V(S2WZP@<@YT-&9.cT!uuH;Vc+P
%^>3C.i;G4bNO'e%ZN;!#p]A*JX<=b9'Ie"7B&;j0l>p"*mXj/!Kh/aRCHWrVWG8ou(P"^XJ9-%THIk+L]i\Y%7)q*t<\.?q\DR@[
%Mb:<dA!O'^)5ZdQgYjMYXhI't=[3oQ<6*E'SD+00#G*G-7i$0RW0%Y%dqaHH.K/4Eak@F'MOIEhqGs@Ed!cbW`o0,)WEF1'@-?&7
%#!>8d%l3Ii,fl-""uYh/lqMLgV/sLQUA:Nqp-cMG!.Paacb@0i&R!=(>S3t-oS-c7Ae?t*#r'3&-Jq@8U3:kGocj1XBe[b+X"VhK
%(=5g"DY.Di0MdL)A)fW`Ta&2A.b#$ibR(e2_D#[`1(8<=0\4OORb8AA^&\(V!$%=:3PG=C=:Id?.AA(h(Eg:o6]@.)<@k5=-!^76
%'Y@h;Ji;16VqlN'!<+ML*oT'.RfnSF`L2V\$8S7>`Z;=1=o]]r8RsS/W2X;<Amjrln?I_SmPOeBmUlRg!5GMo:5##U,sjJ0QGaX_
%!K;Fn`@P(`$4M'H42SnX_%*tS<0Jm$2YmLBk5fEe`96g)Z(-g-@\@GGQNZK/P$SYm]aKV8bsT$J"Is"X6uJaJMh!2/I0',L!-i$?
%c%j&qT-<OnheDL)^E2t+7S.TYG[iC!*:fr+_[ULn.&BK$UcW2#c+_!j=hm,7`o<P);T>H9_ToCgRR9f,=gIU>7&4h,,%3blHLir*
%B=LQsc\rds.7`90pBBKi1;MS#c>jm5=Yac#$aR*0$D'pLZu17-`2dmt#;XP>/nAqucK_M:A;PG/U2Mo9,-,.%g!uGmrS6>'jlLJr
%*^.eC=[">N_T[>]ZkUs4PKbhgKZY@`3j1LnCe%[pT4irB(&Eo2<S?RVhpgbr?@CpF+WMgqZ.+;rB1jm2c5tO!ikR`0W"997?[2_i
%)#*cQ`I\mmqfN23^]&61g:s`Qi@AYT/,D._-2Q&@MQK2(37LF(!I*WCU8O#>%"3<E`]X.Il)0^Cdia6pYNJHbe?n/M3[^bpTuo@d
%g>Q9N(F;QeVA)HOb1(\.1Jfcl+qP]iA@W>'clCrj"W@e%UBpge,"2_1o:=!:,-Lg;dO<KF8=Y42^8.>HCKF,5-Ue?e&UkIkTp'@W
%;PKnnA8kI'L?r`Uh2\@Zp*=ZZ0k;pmlef=/"J3-_HdPaR"R8tGN.Z4'0go+R&a:\\'iKWeBokd/A^p!==%m",#St5s#l1]e:Im5n
%GQcT-7tHaWdX$eAd[%`Z8T.mn9?fRhJu$GP![24h_(AS_ekK`j,tHP1)1%?#.VpeB6kpEqnJ<TJaM38:+`WlP1Wk4m\pdV1cpM:0
%B9TZI)O7=8#"E;>&(]'j'%^8G@3E47VL+M)\7nfTE&\FuM<BO;0HL2]!rN'I^l;u"H*8fa""YM0cO$S@;+cN+B./o[9<O*36W/SA
%[nr<Nb5Y/lNArF9,JbsJdTk-Bo:8#!0-@A_;8F]n1DromN_>M20M06D*Dp&r;g5eS[U4SbB<not!XTr>/n^C5'U+^a6`K1(PJici
%LbC#V6ejWY&f95]GmY;6QZb5='pZre(suL&hu^?EP%[d[H7!p@757D3^s/'UnnPP;\A1K^jjnP1\;`7d3Z(f\H@'oPK+;)+3J)Kj
%WKWJR[]2t3RjD03/kfP*KD0I;*R]t\Xej-4.J8O@+VB?kQsdJ?\;j(3H`s4:1G0C-e,,0TVO40Dlr[F2*5W>rb63\!PToA-+nsNT
%]]hd4at&9mB@<0L&4t:8:nk+la3jc?)2lP;bZl'u//>M]8O;?X)P[I,FWOc1,3q*?!?;t'&9V2.%Ca1ZK$;1dUSD7'm'75la/+3r
%(EZ5*+1TNs"!EL(Haea["j"s:`E>8-06;Y9?B@F6bK&.?a\CrH?"h03[_'&Eh.G'gVOpQ8*i*X'rp9"8h'?>S;hG;76t08&M5I1*
%a-Xe-@22-Yl!?Xg5dW+2>Z9?nQYO-V8si]$&E@9P*BHEG"3]*nHhE@,*+9gB6r,k&qA%^^P.4X);7%p:Z)P:S-JEn-JRalUba0Vr
%m\8TBEVdf0Y1m-"S,ni^6/)U"m3]s#1"#>$O*cC**:m#_E;QT.KXrIAQ?6i1;VZ8W[kS&a;P!1-9XO]8"&J(ZC[YMSjN*GcHs^:]
%6XAj,NF_UBjO#Q\!<WDC#Q&<CZ7n0jRPcpN@/mq#M[3?=Z`72/g3sLXVj='E_,l^1N+ZKcTo#W4$,#-8@a<XOPde(=#061@F64cf
%K(Z*E)m+q=61V#l#tIK;'^<D(:4&b\&ZVfEr;[lN:uNVp&O&MXeAN@uV[g%i37u0^>O=E-],l/!MPN>%Z>W,Rf4o)4%s>6T4Dl3S
%<Q-Z)#U[:j;,V,f8bcN`Wf/0E+q_3ppOFD#V;(]?a8:89+L,HP-qb4?<LFC[k\PFh&^'.\1:N5[7*]MDO?\Blf`n%qG$0Zf=EB8W
%6XS*uDM60OdOBRZ!.!oaooAaFD\K\.N"e!7+G&u0>hIm!A33%4/r+m^Nu6s#>WhH?%,Rm&pqIaE7n6L\I6c+.;pB^`[kjZRZe@j+
%T1oW&&dIaFgFCuM,i575.]ho5,7K/o>,`^*p3Kn_Wfsk:c40`jKL#kE9H]<6M_m7Q/EHG[KW\c=)6%41]^D_gMrXn,$`sJ-EJo5&
%8VBcgK_m4P)Zlj/6gcSl$0m6#!d1q_"'"]*Wkq&$i;\Z.!e@97(f8Ds]3WI-s#8)#3B_pu.L^DbE5*&=-So;sqh=h7*!1-&QR1WV
%^kj%JQUQa?aG41WJrN_5@Zd)f]P6a'E,UTWH6q!pb=L6E(sj<m@1">6'ABNU<.tS7:^!0f>^'^D=CaM7D'MhSl&jUhZ<`RbJ&YFJ
%/ldh#ra<l-XTNQuLI(/28J@,6g;>*bGT]@f$.pqfjauo46L<+3R;kQc^-l4A4l3fpqcsKQ;I)V%EmY+C(E1o-21>!Zag8_$M"3&7
%%tl`RkY^.Ef6Rut*=mgKB=3NSVmZlC4'd`i024bhMN$S:7a<Hp\Lo@_aK3(;&Eao"VQl=]DlGXSl]=;87_5bdLj,\h-I:nk_?jk:
%a1`Fb)qdi?T3d2CT[(oQIi+c1GtVoRcl)WnN6JR[\9\cFSO4MSP#*'K_*XfM5j!_<<>\fe\A+8e5!PEu66e?N"?Cb(!p+!`/9F-W
%(."M<ZQdT2+UA56->6\AZ'Z^Pc#,i'PUSlNKLBUNY*"+@BV[sl86sSgaNZ3$;,^3)`"5oX/D"E"HPHW@=_3p>,(<LQC1`,)6S[]/
%!p@/I6UW2TG_dbc;Y#$=.Hi%SBK8;:Hh4WC@,Ih`<!<RtQ])"==&^as.jn5;Q(FD2l98UM96O-+/gMe/T^-8JCn>Q*k`ZuN7T49i
%<1Rg'W8LHprl&e]'_OI-2#ngPP&"\V#0l[7qjESK;Xh-&+.D%#ik?2q_]riCATsN&a6&o!TIeqK13Sg;QV=6sGX@N?"IV;:/d"Dj
%,=0VG+QJS,WtV;_-2&%P\a#iq74jp,cYb4MEE-eX'osKhOK55@K8C&C^I?2kJpVnZc;uadORnE$213%cB;`I?k"_9l0>r\^a@nl4
%Qlu4S?sRt.U5+X3/KlR,U;E"\=rVZE[)k@k0_)JL10UVBLd3b9OWaj%?/V*36ql[Xo>-*OGn>:Z$U*3;Kq<Z9oTV!#7%8A>Q"i%q
%$ca4bOKu5CnrT$j+P>sJRVC5Jb%dA.8Ae^7pG5*3>bC)\BX4\a,\(JM@:57t1Wapg,\?\p,[4oE[R%0CftF3GKWAFZR0Uo@;AIu-
%32+6&45>$VA?*dre;,kS,3@UT);Up/@7i=.Wq$NZct":WWkTM\r[\eJcV.Lh[FsLIZ.S$%%Aj9<>\"/eeWSD'QV3i.W*Hj"#m;ZP
%_O:@r:*6Y)1rugF[@bg$]J`N&M2`J$hd^';p]5([7[SIug'bP.(Za))g0@E05Z+a%eOGVH6n.OTZ]TBFWeXd=0N6=SlMZpZ<?uuQ
%"u5!$.'N';4]%<@[rGE;eJe[]:_dFY7YqY1gajZQi?1S,G;>Y#2R'$7/4.KTaV<:L=l,gOmig89CEnu4=/@W:O^eSdKZe0S[?>sr
%gDs7cC-^7l71OG!_#m4hBa+ngb&i_2Z3r8hm*HZ)$Q1i[`o6D3=.k.;CU8Sd$f!Z*lqe:Eo7=H+7`ZXDKJWCk7JLhFC"rd,]<(]$
%c,iupf]6*&(8OSgWH@`\7LT>D2n4JaH1aAR[m=p]K3AgpRZNodG_W2G_?PO-\+T>07<g[\5GEjBN1]K9_:!`@(0P.bVTq;??`qKT
%;et[!]i=kepsB6p_[kJ*BTdg]W:o2LkOh"k_M9oTe(9N>l`Lc`JGZ`AFUpL-"d;Jma8t^JORZ]YPZr?[8E;]s!n]k791`"#Ydj;C
%>i^)o'8!g+0XT1m[Lu[NeP^;#ODK^djdcibo(>cZ/%]sdq*nqX-2Y/l7sW!@^,aj$qQAb#mV<Ag2>D-6AUMVNM]hU*[Am<o<CJVe
%O]KC!!opSM_tr]`<?frelWLkRD.G/;%XI69>Y.5a);FH=C=YDDE3#RY^c/C-NNG-n\Qk'diA0,0EAj2V_8LM^Jh1/+ONm91NCTI`
%]*@ABN&b&.Bb@l)mGm42)A$Ysm)BW)5eo!lhEm9JT?E5b&of%Y_&IK'#eLIbT<*)>Fg9?Jb6P'Jn4i4D*5*e*GV.X)b@npB)_cc&
%31`ImqELMXrXLrFi[M1.51pLLAqSNWda3e8$(\.!$rF"c&C`cj+%@_HNAg/i.@Pn/NneAbB?71[:i9;jcbb0\h*XX-&,o0T7Z?G,
%*d;7oo;L-kdr*'f['VnI(War#/Kq/]';%Ejp!GQls0;kqCI;mWjZr3HX/3%S(4:Sd*AI8/X*R_kK49pmnGV$(%@Ru'J.^U%*'g)8
%Mh,IWis<fi2Pm%+d"8IjJ1XusP+bg"!tLmq_9"%r_6$Y'MBgm#oae8m-99f('!M/84.ndIW<6G303uBaN5-Z/*#,B2TdrPuo]GJ;
%WdpaBieoHF)NHC;m[iI:*@ebJ2'5;(an1!k[u"Xg.eA\\PP5n3SMtVOX\";sWW!L<#Hbau5=$=?D0n`[jV7ee?6I@VKm83BeYS_<
%B:<+o;GiWn28MPbkcDtUb1tT;+6sl-#_\m)Eeb9<']NQ>(@Mo7pXh'S6@,PXF<Wc-q.i%s3Eu#m3nK_QT9DcS5TeQ+Y9YX^2;B=S
%E\h]b]N=0ocPAf2+M_@4*"YlM55NiYjs`2*9(ZDOQ[IH3O]5T/IZF$DNTueH7gr<KknL.B?ZVN"<E7:0N',.Dp9RG)W;*lXH4l\Z
%5sTNop/"9VW`t<@1[:Z<G_+UM<m"'M3cl77HfL&M/2P]JCdfI"!j>=?#48JZ,[+PLjVoR^g\W8XL<>geI?rd(!:gIk1S!9p7gqu/
%l6Xa%i-j.X`;;8(UI"a]=lM36Ka][#-E#'4&7oB,%upYk*^GY4lRCOhSRcm!K3g=\![-#7?8V<`iicFn*hZJJW.)F_(bg*>Q?LW8
%pD%>?7Z_4XNJc]6d]fCDZ7o'(c$58e!?+f^HAT-H6O`^\0^f_AX3S!/^DKZ-,5]`5-"AgBR&Eip<p^Ji@Ec8LNsK@AUqMl[$/4"$
%AC.Oa'\=7TRsT6Ud5%;H,ICRaCQ&:,SgU+tr:p(]esnF4JK<ps9Q3h4S5'_.<37U/Y&29NBld$M<(!$^Rr[\A*?+H:ogu8&E*o,1
%TT8cc2D\<Xl:!5k,9k903b-C"XY(6`&n:$_fa9Z-;T8MRRlP?-c_\`==<t"D\*S,AAN9hbq#YMMISCEM?i3N#JeQ'J1d/B;0eFI1
%4e_mm0#B:#=R\8FDDQ8]_k+SgQOE&sGqCa2X5$DXc<Q^rpUU(n-+OhO\H)9rC_%td2#Lmm@EkBu=_E7lOE$kR>)27?[F0TNe%./Q
%osS_CW92P\GSV%KA)7C-#/_3U]f#D5Phd:W5f8.VkrQ7bn4d]MYoT;tI(gZh_e$48?4N?08B3XP>M1;[puj?P+gls.!b[`:4PV^C
%A?UoVLpGS@[^*@SiR7'#5hffQPot:&YcD_n\FbLYAo9p**q]cu#]28I&Y6QbnN\#ijn7m7\7'nM5N[:Ec7K^?GrjatpCbBK0/hG/
%Ah8'ZD8nHdWYnZCbm1ssh2/Er<EI'gd6:f)4"gP`q'?cj4?\R%mLld4.TSf_K]5iXMb<faR/GZtk`>'GR_=hgDRFhR,enH+F>-G%
%:[IGqE3=0c8harYG(oKH)R1l+a;qn3YKc'oa71`PUs!1.[Fe)7S=/a`+ie#!d8nN6EA@5kEpQLRPN++GLWaAOjW?1k/3+??@o!d4
%B`>Ssib0*H:#\>q@5"CKXp=![c!,l_Xj0aX\HP"tflGl:6FPL(1fR3)#*c+k88b+Y,jVq7/%hG$VI'BMF7&r"!TGjka2<(@.4j_&
%B"i2;+P205>;l5oNX!6dOP9==Jil?rE#J&QrWD;L,Y3-DO!^s-/(<*51uQg_W+o)bR94cXGnY@;78%:K!'P%JqNohX_g`A=EVrIM
%m1"&bgOcH[7n0FJNqf'&k[[@!S(>r)^cgAG!fl:KpT<MoFq-B)iG`D7DhAs`J]V,$(X8r,_r/j=@rH[U)UG()\;YT5r=SYE;Bqkt
%p7T2>(+l61!)4.4^b8YH?InKR=qi/$b`+0"/)DJBmF)i'l]>>?+h`bmVmf%1gO`>f?C2sZ;4mL^?.K@FA$6a8HAK^)4I0(/AB(TW
%N&icJ[mH)?^k+/,LDV:hT;P.sq?SsMTRF>/G$OtHo8?Kk)-\pNk!WtTA@2M0?s<&'%\utKBDeRje)au`jb(/r:302;P@F3?og5UX
%g,1]](F^k,>t.B&SZhZ=O2)a!-(X;1E;.@N\p#$RZorYC*>uTG3*iZ(Vd3Qi_s&`0#SjN&.^iSWKMB9qBs>(Z9S4]`+"e`XQ@2$q
%&d3HBlgJJEbR1?d6B$oC$S0H"mPXl<_q!6.3WkK&GdQ:a!.B>SD:9B0c`U8FIiENOQ-fUE_G0Tm.7MlLf(W8Q'0p\Oe<,FJos<;,
%0#=sZIVoN5I@Y,Tk*HLAaD3r,.nj3p!*;?k^UbrJ(+X9gGM6-8_;'k/VS4+chq,C)Qr01EZt/gB]O\V+=02$91K2t:\&p<P)6SC=
%k]Z]g2WnSYV`#!jC:O)N45UCIpu?ZulP76&D#1f"3nh&dJ4.87,\dk.^J)hB3r;=e[,=LhKr.j%&qm-=-!O9Zmekkke\h-n)OEC(
%_*.<?r-j$r4[&tC84<:(4o`?l/$qGA6D5;n=H.:YfF.;Ai-fD(k=VVur2"ck")8a!?dgS8W:tER"!Zh_0l?A,k`m#^Q%+qR@)mf=
%IcoDY#H5!U^Z:^4&:[X@4U:7shqACJOt@6L._PIU%^\5][rlg<#EgG`hO!]okI!;],"G=R%TH"sRJ.]"=?akJYK9*PH/:n/moqk<
%f5cRe5Eie\Fq00dU#!Y;]W2thO;E7k5<uEsJ26)[D9m`#0$dtZ1S@FqZF"7%GjDlcfdYdeG(?aU$GpQ4W^4.Gs/a9(VN,QS53aR3
%hpht8c$e*\P1Z?8pVGFD(A%PImn"_Q]b]ID&!@EsVChFrpT5I-CKZ6Ccg%K0DW<ok#bC.JfT5cL,PrW%a:m<1h[e'EE1]amI+WH]
%a?NYQ5EAkl8S-'OT-4AC5'[i&hR@ZYY%.l--SFoof["McDX6RW#*a(ebO=WW<R/q)*g#`#8m7Ge5M[V-?UL:Ad;4L[*FD/S\d6uR
%j(kT'+JI4=n"Gd9XW=>.nVBA/MA_`=2,pObU-'VPWEqbapbLl.HOW3np%@hQ^;^=OpP#,^mg&-c(fGO^+AZV)a.:ia["\;<\LXga
%BVAW*d2\BVD-^e4UtVSkCFA:Bm]]HL=GCi1jDZ@jZP2,fJFfdnF'D]VhsY;c>7s;1=YT1?e3(c5aKI7+Pi`g,Hmd-OVULRoOC,Al
%'+WIs=q<].a8=F_caCEY,"0s'i&elZ[G1J:pN7_<=igWX]Utiuju_t%N"%kg'1di8\V>isZ4S%C[S2F']W2BWKCc49SL`C0_@uDD
%(sd/ADX-I5^6@YfHe6$G!PUp'@r-M+6Re5/B05Xt/ue7V9Y@!,?M72cqppeQQ)l*)UcG@-foDpPRBBK'mJ=DRm2uKB=S7,n?Bad#
%>&H7Z4kh.9:J["c68dN8aC.oo*OFVi;80H5Euco1hrn$WB05.q\ZMp%peKp[He/nC52W'8XC[;-mm<31Q$L]#7)#$`peE!/<nft^
%m9;Y7fCAuP@qtf?^-b)lGb*UDY-/f?::tKJXM#^KfB#(sSh!k(CV17Y3LeKhmgtMjm$LJ@(/Wl)*9UNf4'-G)9d3D`JFO%<kI.O2
%?p%PuankXYCgP6=,JW#LU?.<dNe]GRjEiH2Z-tZI'QMdm9!b</A.DB\RaL3"A[9b'M<lIT'J+e:4QMVC5a<m/Q@X.3C?:I\_I5lG
%)/SB_hCD1+(+QTZ,oO:PBE"l)hH6b2ql+<o)9QmX2\%5e)GhKbc53UUZf2W9ZWbYIe!WABnUE+Anj6AuO.WQ81CnJ1[9RQc/J32r
%%)-H3F"R-`RVV^kZk&MNY,f(Kr4V]KF)AO+>4#:r9T,eJT'c[u&&4-$%GB%(^@DlIkVUgd#H29"T!5jE8/'o(+r)8o*GDb*mfA:n
%0K%+K\2mEbf+]??s61A-]K-Y(4'GFWSV^8Uj1%^hE@KR/@c`0%NB>\_QHB316i(a6l+2<_]MD9YNtb#XQ0m'`.$W%G3TC7<72r`q
%Ejdf$"#/SY@ES+]/V7=&:e1BP8IIX-lBtcRX%^oQdn'uN`1;-;BJ5M@EVm<%B[u`SB95=IW%7,73L,:B*`emb/VLf,>q9`3Q?I(t
%&mfCJ"Y52[\74G5fWdX1W.d&EC<,OI/T]TD#kaX6-nA*rXaLH*mn"d5on1RuIG/+ZYMSH;Z+hA@I/i\3q;;2BgV879oX?L2md:5I
%dm&?YjibDdqt-MqIei^#5Q10MVuQ^9q"3<ZFT:I;jJTmKhnK$fhgbUujm`.sr:U)?nBpcYT76X[ci<e'5Q*ep]u=F~>
%AI9_PrivateDataEnd
